/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/ISSent/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CClick%5C%5CDocuments%5C%5CGitHub%5C%5Cjournal%5C%5Capp%5C%5C_components%5C%5CSentSection.jsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CClick%5C%5CDocuments%5C%5CGitHub%5C%5Cjournal%5C%5Capp%5C%5C_components%5C%5CSentSection.jsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/_components/SentSection.jsx */ \"(app-pages-browser)/./app/_components/SentSection.jsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDQ2xpY2slNUMlNUNEb2N1bWVudHMlNUMlNUNHaXRIdWIlNUMlNUNqb3VybmFsJTVDJTVDYXBwJTVDJTVDX2NvbXBvbmVudHMlNUMlNUNTZW50U2VjdGlvbi5qc3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsNExBQWlKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NGIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCJDOlxcXFxVc2Vyc1xcXFxDbGlja1xcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXGpvdXJuYWxcXFxcYXBwXFxcXF9jb21wb25lbnRzXFxcXFNlbnRTZWN0aW9uLmpzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CClick%5C%5CDocuments%5C%5CGitHub%5C%5Cjournal%5C%5Capp%5C%5C_components%5C%5CSentSection.jsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/Nzc0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"(app-pages-browser)/./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBLFNBQVMsVUFBVTs7QUFFbkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz81ODgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5leHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/ZWE2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz9jZjMyIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0TUFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanM/MzhjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/_components/IsSentItems.jsx":
/*!*****************************************!*\
  !*** ./app/_components/IsSentItems.jsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction IsSentItems(param) {\n    let { article } = param;\n    var _article_attributes, _article_attributes_ImagesOfResearch_data_attributes, _article_attributes_ImagesOfResearch_data, _article_attributes_ImagesOfResearch, _article_attributes1, _article_attributes2, _article_attributes3, _article_attributes4;\n    const dateStr = article === null || article === void 0 ? void 0 : (_article_attributes = article.attributes) === null || _article_attributes === void 0 ? void 0 : _article_attributes.publishedAt;\n    const date = new Date(dateStr);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1; // Note: Months are zero-based, so add 1 to get the correct month\n    const day = date.getDate();\n    // Format month and day with leading zeros if needed\n    const formattedMonth = month < 10 ? \"0\".concat(month) : \"\".concat(month);\n    const formattedDay = day < 10 ? \"0\".concat(day) : \"\".concat(day);\n    // Create formatted date string with year, month, and day\n    const formattedDate = \"\".concat(year, \"-\").concat(formattedMonth, \"-\").concat(formattedDay);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"article\", {\n        className: \"flex bg-white transition hover:shadow-xl\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"rotate-180 p-2 [writing-mode:_vertical-lr]\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"time\", {\n                    dateTime: \"2022-10-10\",\n                    className: \"flex items-center justify-between gap-4 text-xs font-bold uppercase text-gray-900\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            children: year\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                            lineNumber: 26,\n                            columnNumber: 7\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"w-px flex-1 bg-gray-900/10\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                            lineNumber: 27,\n                            columnNumber: 7\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            children: [\n                                \" \",\n                                formattedDay,\n                                \"-\",\n                                formattedMonth\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                            lineNumber: 28,\n                            columnNumber: 7\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                    lineNumber: 22,\n                    columnNumber: 5\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                lineNumber: 21,\n                columnNumber: 3\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"hidden sm:block sm:basis-56\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    alt: \"\",\n                    src: article === null || article === void 0 ? void 0 : (_article_attributes1 = article.attributes) === null || _article_attributes1 === void 0 ? void 0 : (_article_attributes_ImagesOfResearch = _article_attributes1.ImagesOfResearch) === null || _article_attributes_ImagesOfResearch === void 0 ? void 0 : (_article_attributes_ImagesOfResearch_data = _article_attributes_ImagesOfResearch.data) === null || _article_attributes_ImagesOfResearch_data === void 0 ? void 0 : (_article_attributes_ImagesOfResearch_data_attributes = _article_attributes_ImagesOfResearch_data.attributes) === null || _article_attributes_ImagesOfResearch_data_attributes === void 0 ? void 0 : _article_attributes_ImagesOfResearch_data_attributes.url,\n                    className: \"aspect-square h-full w-full object-cover\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                    lineNumber: 33,\n                    columnNumber: 5\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                lineNumber: 32,\n                columnNumber: 3\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-1 flex-col justify-between\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"border-s border-gray-900/10 p-4 sm:border-l-transparent sm:p-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"#\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"font-bold uppercase text-gray-900\",\n                                    children: article === null || article === void 0 ? void 0 : (_article_attributes2 = article.attributes) === null || _article_attributes2 === void 0 ? void 0 : _article_attributes2.Title\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                                    lineNumber: 44,\n                                    columnNumber: 9\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                                lineNumber: 43,\n                                columnNumber: 7\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                className: \"mt-2 line-clamp-3 text-sm/relaxed  text-black\",\n                                children: article === null || article === void 0 ? void 0 : (_article_attributes3 = article.attributes) === null || _article_attributes3 === void 0 ? void 0 : _article_attributes3.Description_Of_The_Research\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                                lineNumber: 49,\n                                columnNumber: 7\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"mt-2 line-clamp-3 text-sm/relaxed bg-slate-100 w-fit text-gray-800\",\n                                children: article === null || article === void 0 ? void 0 : (_article_attributes4 = article.attributes) === null || _article_attributes4 === void 0 ? void 0 : _article_attributes4.Type\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                                lineNumber: 53,\n                                columnNumber: 7\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                        lineNumber: 42,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"sm:flex sm:items-end sm:justify-end\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            href: \"/Articles-ToRevise/\".concat(article === null || article === void 0 ? void 0 : article.id),\n                            className: \"block bg-teal-300 px-5 py-3 text-center text-xs font-bold uppercase text-white transition hover:bg-teal-400\",\n                            children: \"Read Blog\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                            lineNumber: 60,\n                            columnNumber: 7\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                        lineNumber: 59,\n                        columnNumber: 5\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n                lineNumber: 41,\n                columnNumber: 3\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentItems.jsx\",\n        lineNumber: 20,\n        columnNumber: 9\n    }, this);\n}\n_c = IsSentItems;\n/* harmony default export */ __webpack_exports__[\"default\"] = (IsSentItems);\nvar _c;\n$RefreshReg$(_c, \"IsSentItems\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy9Jc1NlbnRJdGVtcy5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUI7QUFFekIsU0FBU0MsWUFBWSxLQUFTO1FBQVQsRUFBQ0MsT0FBTyxFQUFDLEdBQVQ7UUFDREEscUJBK0JSQSxzREFBQUEsMkNBQUFBLHNDQUFBQSxzQkFVSEEsc0JBS0ZBLHNCQUlBQTtJQWxESCxNQUFNQyxVQUFVRCxvQkFBQUEsK0JBQUFBLHNCQUFBQSxRQUFTRSxVQUFVLGNBQW5CRiwwQ0FBQUEsb0JBQXFCRyxXQUFXO0lBQ2hELE1BQU1DLE9BQU8sSUFBSUMsS0FBS0o7SUFFckIsTUFBTUssT0FBT0YsS0FBS0csV0FBVztJQUM5QixNQUFNQyxRQUFRSixLQUFLSyxRQUFRLEtBQUssR0FBRyxpRUFBaUU7SUFDcEcsTUFBTUMsTUFBTU4sS0FBS08sT0FBTztJQUV4QixvREFBb0Q7SUFDcEQsTUFBTUMsaUJBQWlCSixRQUFRLEtBQUssSUFBVSxPQUFOQSxTQUFVLEdBQVMsT0FBTkE7SUFDckQsTUFBTUssZUFBZUgsTUFBTSxLQUFLLElBQVEsT0FBSkEsT0FBUSxHQUFPLE9BQUpBO0lBRS9DLHlEQUF5RDtJQUN6RCxNQUFNSSxnQkFBZ0IsR0FBV0YsT0FBUk4sTUFBSyxLQUFxQk8sT0FBbEJELGdCQUFlLEtBQWdCLE9BQWJDO0lBR25ELHFCQUNJLDhEQUFDYjtRQUFRZSxXQUFVOzswQkFDekIsOERBQUNDO2dCQUFJRCxXQUFVOzBCQUNiLDRFQUFDRTtvQkFDQ0MsVUFBUztvQkFDVEgsV0FBVTs7c0NBRVYsOERBQUNJO3NDQUFNYjs7Ozs7O3NDQUNQLDhEQUFDYTs0QkFBS0osV0FBVTs7Ozs7O3NDQUNoQiw4REFBQ0k7O2dDQUFLO2dDQUFFTjtnQ0FBYTtnQ0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFJM0IsOERBQUNJO2dCQUFJRCxXQUFVOzBCQUNiLDRFQUFDSztvQkFDQ0MsS0FBSTtvQkFDSkMsR0FBRyxFQUFHdEIsb0JBQUFBLCtCQUFBQSx1QkFBQUEsUUFBU0UsVUFBVSxjQUFuQkYsNENBQUFBLHVDQUFBQSxxQkFBcUJ1QixnQkFBZ0IsY0FBckN2Qiw0REFBQUEsNENBQUFBLHFDQUF1Q3dCLElBQUksY0FBM0N4QixpRUFBQUEsdURBQUFBLDBDQUE2Q0UsVUFBVSxjQUF2REYsMkVBQUFBLHFEQUF5RHlCLEdBQUc7b0JBRWxFVixXQUFVOzs7Ozs7Ozs7OzswQkFJZCw4REFBQ0M7Z0JBQUlELFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFBSUQsV0FBVTs7MENBQ2IsOERBQUNXO2dDQUFFQyxNQUFLOzBDQUNOLDRFQUFDQztvQ0FBR2IsV0FBVTs4Q0FDYmYsb0JBQUFBLCtCQUFBQSx1QkFBQUEsUUFBU0UsVUFBVSxjQUFuQkYsMkNBQUFBLHFCQUFxQjZCLEtBQUs7Ozs7Ozs7Ozs7OzBDQUk3Qiw4REFBQ0M7Z0NBQUdmLFdBQVU7MENBQ2JmLG9CQUFBQSwrQkFBQUEsdUJBQUFBLFFBQVNFLFVBQVUsY0FBbkJGLDJDQUFBQSxxQkFBcUIrQiwyQkFBMkI7Ozs7OzswQ0FHakQsOERBQUNDO2dDQUFFakIsV0FBVTswQ0FDWmYsb0JBQUFBLCtCQUFBQSx1QkFBQUEsUUFBU0UsVUFBVSxjQUFuQkYsMkNBQUFBLHFCQUFxQmlDLElBQUk7Ozs7Ozs7Ozs7OztrQ0FLNUIsOERBQUNqQjt3QkFBSUQsV0FBVTtrQ0FDYiw0RUFBQ1c7NEJBQ0NDLE1BQU0sc0JBQWtDLE9BQVozQixvQkFBQUEsOEJBQUFBLFFBQVNrQyxFQUFFOzRCQUN2Q25CLFdBQVU7c0NBQ1g7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT1A7S0FuRVNoQjtBQXFFVCwrREFBZUEsV0FBV0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvX2NvbXBvbmVudHMvSXNTZW50SXRlbXMuanN4PzU5ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5cclxuZnVuY3Rpb24gSXNTZW50SXRlbXMoe2FydGljbGV9KSB7XHJcbiAgICBjb25zdCBkYXRlU3RyID0gYXJ0aWNsZT8uYXR0cmlidXRlcz8ucHVibGlzaGVkQXQ7XHJcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XHJcbiAgICBcclxuICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xyXG4gICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOyAvLyBOb3RlOiBNb250aHMgYXJlIHplcm8tYmFzZWQsIHNvIGFkZCAxIHRvIGdldCB0aGUgY29ycmVjdCBtb250aFxyXG4gICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XHJcbiAgICBcclxuICAgIC8vIEZvcm1hdCBtb250aCBhbmQgZGF5IHdpdGggbGVhZGluZyB6ZXJvcyBpZiBuZWVkZWRcclxuICAgIGNvbnN0IGZvcm1hdHRlZE1vbnRoID0gbW9udGggPCAxMCA/IGAwJHttb250aH1gIDogYCR7bW9udGh9YDtcclxuICAgIGNvbnN0IGZvcm1hdHRlZERheSA9IGRheSA8IDEwID8gYDAke2RheX1gIDogYCR7ZGF5fWA7XHJcbiAgICBcclxuICAgIC8vIENyZWF0ZSBmb3JtYXR0ZWQgZGF0ZSBzdHJpbmcgd2l0aCB5ZWFyLCBtb250aCwgYW5kIGRheVxyXG4gICAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IGAke3llYXJ9LSR7Zm9ybWF0dGVkTW9udGh9LSR7Zm9ybWF0dGVkRGF5fWA7XHJcblxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGFydGljbGUgY2xhc3NOYW1lPVwiZmxleCBiZy13aGl0ZSB0cmFuc2l0aW9uIGhvdmVyOnNoYWRvdy14bFwiPlxyXG4gIDxkaXYgY2xhc3NOYW1lPVwicm90YXRlLTE4MCBwLTIgW3dyaXRpbmctbW9kZTpfdmVydGljYWwtbHJdXCI+XHJcbiAgICA8dGltZVxyXG4gICAgICBkYXRlVGltZT1cIjIwMjItMTAtMTBcIlxyXG4gICAgICBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gZ2FwLTQgdGV4dC14cyBmb250LWJvbGQgdXBwZXJjYXNlIHRleHQtZ3JheS05MDBcIlxyXG4gICAgPlxyXG4gICAgICA8c3Bhbj57eWVhcn08L3NwYW4+XHJcbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInctcHggZmxleC0xIGJnLWdyYXktOTAwLzEwXCI+PC9zcGFuPlxyXG4gICAgICA8c3Bhbj4ge2Zvcm1hdHRlZERheX0te2Zvcm1hdHRlZE1vbnRofTwvc3Bhbj5cclxuICAgIDwvdGltZT5cclxuICA8L2Rpdj5cclxuXHJcbiAgPGRpdiBjbGFzc05hbWU9XCJoaWRkZW4gc206YmxvY2sgc206YmFzaXMtNTZcIj5cclxuICAgIDxpbWdcclxuICAgICAgYWx0PVwiXCJcclxuICAgICAgc3JjPSB7YXJ0aWNsZT8uYXR0cmlidXRlcz8uSW1hZ2VzT2ZSZXNlYXJjaD8uZGF0YT8uYXR0cmlidXRlcz8udXJsfVxyXG5cclxuICAgICAgY2xhc3NOYW1lPVwiYXNwZWN0LXNxdWFyZSBoLWZ1bGwgdy1mdWxsIG9iamVjdC1jb3ZlclwiXHJcbiAgICAvPlxyXG4gIDwvZGl2PlxyXG5cclxuICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC0xIGZsZXgtY29sIGp1c3RpZnktYmV0d2VlblwiPlxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJib3JkZXItcyBib3JkZXItZ3JheS05MDAvMTAgcC00IHNtOmJvcmRlci1sLXRyYW5zcGFyZW50IHNtOnAtNlwiPlxyXG4gICAgICA8YSBocmVmPVwiI1wiPlxyXG4gICAgICAgIDxoMyBjbGFzc05hbWU9XCJmb250LWJvbGQgdXBwZXJjYXNlIHRleHQtZ3JheS05MDBcIj5cclxuICAgICAgICB7YXJ0aWNsZT8uYXR0cmlidXRlcz8uVGl0bGV9XHJcbiAgICAgICAgPC9oMz5cclxuICAgICAgPC9hPlxyXG5cclxuICAgICAgPGg1IGNsYXNzTmFtZT1cIm10LTIgbGluZS1jbGFtcC0zIHRleHQtc20vcmVsYXhlZCAgdGV4dC1ibGFja1wiPlxyXG4gICAgICB7YXJ0aWNsZT8uYXR0cmlidXRlcz8uRGVzY3JpcHRpb25fT2ZfVGhlX1Jlc2VhcmNofVxyXG5cclxuICAgICAgPC9oNT5cclxuICAgICAgPHAgY2xhc3NOYW1lPVwibXQtMiBsaW5lLWNsYW1wLTMgdGV4dC1zbS9yZWxheGVkIGJnLXNsYXRlLTEwMCB3LWZpdCB0ZXh0LWdyYXktODAwXCI+XHJcbiAgICAgIHthcnRpY2xlPy5hdHRyaWJ1dGVzPy5UeXBlfVxyXG5cclxuICAgICAgPC9wPlxyXG4gICAgPC9kaXY+XHJcblxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJzbTpmbGV4IHNtOml0ZW1zLWVuZCBzbTpqdXN0aWZ5LWVuZFwiPlxyXG4gICAgICA8YVxyXG4gICAgICAgIGhyZWY9e2AvQXJ0aWNsZXMtVG9SZXZpc2UvJHthcnRpY2xlPy5pZH1gfVxyXG4gICAgICAgIGNsYXNzTmFtZT1cImJsb2NrIGJnLXRlYWwtMzAwIHB4LTUgcHktMyB0ZXh0LWNlbnRlciB0ZXh0LXhzIGZvbnQtYm9sZCB1cHBlcmNhc2UgdGV4dC13aGl0ZSB0cmFuc2l0aW9uIGhvdmVyOmJnLXRlYWwtNDAwXCJcclxuICAgICAgPlxyXG4gICAgICAgIFJlYWQgQmxvZ1xyXG4gICAgICA8L2E+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9hcnRpY2xlPiBcclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSXNTZW50SXRlbXNcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiSXNTZW50SXRlbXMiLCJhcnRpY2xlIiwiZGF0ZVN0ciIsImF0dHJpYnV0ZXMiLCJwdWJsaXNoZWRBdCIsImRhdGUiLCJEYXRlIiwieWVhciIsImdldEZ1bGxZZWFyIiwibW9udGgiLCJnZXRNb250aCIsImRheSIsImdldERhdGUiLCJmb3JtYXR0ZWRNb250aCIsImZvcm1hdHRlZERheSIsImZvcm1hdHRlZERhdGUiLCJjbGFzc05hbWUiLCJkaXYiLCJ0aW1lIiwiZGF0ZVRpbWUiLCJzcGFuIiwiaW1nIiwiYWx0Iiwic3JjIiwiSW1hZ2VzT2ZSZXNlYXJjaCIsImRhdGEiLCJ1cmwiLCJhIiwiaHJlZiIsImgzIiwiVGl0bGUiLCJoNSIsIkRlc2NyaXB0aW9uX09mX1RoZV9SZXNlYXJjaCIsInAiLCJUeXBlIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/IsSentItems.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/_components/IsSentList.jsx":
/*!****************************************!*\
  !*** ./app/_components/IsSentList.jsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _IsSentItems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IsSentItems */ \"(app-pages-browser)/./app/_components/IsSentItems.jsx\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction IsSentList(param) {\n    let { articleList } = param;\n    _s();\n    const { isLoaded, isSignedIn, user } = (0,_clerk_nextjs__WEBPACK_IMPORTED_MODULE_3__.useUser)();\n    if (!isLoaded) {\n        // Wait until user data is loaded\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center h-screen w-full items-center\",\n            children: [\n                \"  \",\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"l-waveform\", {\n                    size: \"35\",\n                    stroke: \"3.5\",\n                    speed: \"1\",\n                    color: \"black\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n                    lineNumber: 11,\n                    columnNumber: 80\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n            lineNumber: 11,\n            columnNumber: 12\n        }, this);\n    }\n    if (!isSignedIn) {\n        // Handle case where user is not signed in\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"User is not signed in.\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n            lineNumber: 16,\n            columnNumber: 12\n        }, this);\n    }\n    if (!user.primaryEmailAddress) {\n        // Handle case where primary email address is not available\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Primary email address not found for user.\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n            lineNumber: 21,\n            columnNumber: 12\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col gap-3\",\n        children: articleList.filter((article)=>article.attributes.IsSent === false && article.attributes.Email === user.primaryEmailAddress.emailAddress).map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_IsSentItems__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                article: item\n            }, item.id, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n                lineNumber: 32,\n                columnNumber: 11\n            }, this))\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\IsSentList.jsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n_s(IsSentList, \"tDB2PK3amh4QzOfzJfkMt1PFtO8=\", false, function() {\n    return [\n        _clerk_nextjs__WEBPACK_IMPORTED_MODULE_3__.useUser\n    ];\n});\n_c = IsSentList;\n/* harmony default export */ __webpack_exports__[\"default\"] = (IsSentList);\nvar _c;\n$RefreshReg$(_c, \"IsSentList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy9Jc1NlbnRMaXN0LmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNrRDtBQUNYO0FBQ0M7QUFFeEMsU0FBU0ssV0FBVyxLQUFlO1FBQWYsRUFBRUMsV0FBVyxFQUFFLEdBQWY7O0lBQ2xCLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLElBQUksRUFBRSxHQUFHTCxzREFBT0E7SUFFOUMsSUFBSSxDQUFDRyxVQUFVO1FBQ2IsaUNBQWlDO1FBQ2pDLHFCQUFPLDhEQUFDRztZQUFJQyxXQUFVOztnQkFBbUQ7OEJBQUUsOERBQUNDO29CQUFXQyxNQUFLO29CQUFLQyxRQUFPO29CQUFNQyxPQUFNO29CQUFJQyxPQUFNOzs7Ozs7Ozs7Ozs7SUFDaEk7SUFFQSxJQUFJLENBQUNSLFlBQVk7UUFDZiwwQ0FBMEM7UUFDMUMscUJBQU8sOERBQUNFO3NCQUFJOzs7Ozs7SUFDZDtJQUVBLElBQUksQ0FBQ0QsS0FBS1EsbUJBQW1CLEVBQUU7UUFDN0IsMkRBQTJEO1FBQzNELHFCQUFPLDhEQUFDUDtzQkFBSTs7Ozs7O0lBQ2Q7SUFFQSxxQkFDRSw4REFBQ0E7UUFBSUMsV0FBVTtrQkFDWkwsWUFDRVksTUFBTSxDQUFDQyxDQUFBQSxVQUNOQSxRQUFRQyxVQUFVLENBQUNDLE1BQU0sS0FBSyxTQUM5QkYsUUFBUUMsVUFBVSxDQUFDRSxLQUFLLEtBQUtiLEtBQUtRLG1CQUFtQixDQUFDTSxZQUFZLEVBRW5FQyxHQUFHLENBQUNDLENBQUFBLHFCQUNILDhEQUFDdEIsb0RBQVdBO2dCQUFDZ0IsU0FBU007ZUFBV0EsS0FBS0MsRUFBRTs7Ozs7Ozs7OztBQUlsRDtHQTlCU3JCOztRQUNnQ0Qsa0RBQU9BOzs7S0FEdkNDO0FBZ0NULCtEQUFlQSxVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9fY29tcG9uZW50cy9Jc1NlbnRMaXN0LmpzeD9kODVlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgSXNTZW50SXRlbXMgZnJvbSAnLi9Jc1NlbnRJdGVtcydcclxuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCJAY2xlcmsvbmV4dGpzXCI7XHJcblxyXG5mdW5jdGlvbiBJc1NlbnRMaXN0KHsgYXJ0aWNsZUxpc3QgfSkge1xyXG4gIGNvbnN0IHsgaXNMb2FkZWQsIGlzU2lnbmVkSW4sIHVzZXIgfSA9IHVzZVVzZXIoKTtcclxuXHJcbiAgaWYgKCFpc0xvYWRlZCkge1xyXG4gICAgLy8gV2FpdCB1bnRpbCB1c2VyIGRhdGEgaXMgbG9hZGVkXHJcbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktY2VudGVyIGgtc2NyZWVuIHctZnVsbCBpdGVtcy1jZW50ZXJcIj4gIDxsLXdhdmVmb3JtIHNpemU9XCIzNVwiIHN0cm9rZT1cIjMuNVwiIHNwZWVkPVwiMVwiIGNvbG9yPVwiYmxhY2tcIj48L2wtd2F2ZWZvcm0+PC9kaXY+XHJcbiAgfVxyXG5cclxuICBpZiAoIWlzU2lnbmVkSW4pIHtcclxuICAgIC8vIEhhbmRsZSBjYXNlIHdoZXJlIHVzZXIgaXMgbm90IHNpZ25lZCBpblxyXG4gICAgcmV0dXJuIDxkaXY+VXNlciBpcyBub3Qgc2lnbmVkIGluLjwvZGl2PjtcclxuICB9XHJcblxyXG4gIGlmICghdXNlci5wcmltYXJ5RW1haWxBZGRyZXNzKSB7XHJcbiAgICAvLyBIYW5kbGUgY2FzZSB3aGVyZSBwcmltYXJ5IGVtYWlsIGFkZHJlc3MgaXMgbm90IGF2YWlsYWJsZVxyXG4gICAgcmV0dXJuIDxkaXY+UHJpbWFyeSBlbWFpbCBhZGRyZXNzIG5vdCBmb3VuZCBmb3IgdXNlci48L2Rpdj47XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggZmxleC1jb2wgZ2FwLTMnPlxyXG4gICAgICB7YXJ0aWNsZUxpc3RcclxuICAgICAgICAuZmlsdGVyKGFydGljbGUgPT4gXHJcbiAgICAgICAgICBhcnRpY2xlLmF0dHJpYnV0ZXMuSXNTZW50ID09PSBmYWxzZSAmJiBcclxuICAgICAgICAgIGFydGljbGUuYXR0cmlidXRlcy5FbWFpbCA9PT0gdXNlci5wcmltYXJ5RW1haWxBZGRyZXNzLmVtYWlsQWRkcmVzc1xyXG4gICAgICAgICkgIFxyXG4gICAgICAgIC5tYXAoaXRlbSA9PiAoXHJcbiAgICAgICAgICA8SXNTZW50SXRlbXMgYXJ0aWNsZT17aXRlbX0ga2V5PXtpdGVtLmlkfSAvPlxyXG4gICAgICAgICkpfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSXNTZW50TGlzdDtcclxuXHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiSXNTZW50SXRlbXMiLCJ1c2VVc2VyIiwiSXNTZW50TGlzdCIsImFydGljbGVMaXN0IiwiaXNMb2FkZWQiLCJpc1NpZ25lZEluIiwidXNlciIsImRpdiIsImNsYXNzTmFtZSIsImwtd2F2ZWZvcm0iLCJzaXplIiwic3Ryb2tlIiwic3BlZWQiLCJjb2xvciIsInByaW1hcnlFbWFpbEFkZHJlc3MiLCJmaWx0ZXIiLCJhcnRpY2xlIiwiYXR0cmlidXRlcyIsIklzU2VudCIsIkVtYWlsIiwiZW1haWxBZGRyZXNzIiwibWFwIiwiaXRlbSIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/IsSentList.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/_components/SentSection.jsx":
/*!*****************************************!*\
  !*** ./app/_components/SentSection.jsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_ArticleApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_utils/ArticleApi */ \"(app-pages-browser)/./app/_utils/ArticleApi.js\");\n/* harmony import */ var _IsSentList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IsSentList */ \"(app-pages-browser)/./app/_components/IsSentList.jsx\");\n/* harmony import */ var ldrs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ldrs */ \"(app-pages-browser)/./node_modules/ldrs/dist/elements/waveform.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction SentSection() {\n    _s();\n    const [articleList, setArticleList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    ldrs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].register();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        getLatestArticles_();\n    }, []);\n    const getLatestArticles_ = ()=>{\n        _utils_ArticleApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getLatestArticles().then((res)=>{\n            console.log(res.data.data);\n            setArticleList(res.data.data);\n        }).catch((error)=>{\n            console.error(\"Error fetching articles:\", error);\n        }).finally(()=>{\n            setLoading(false); // Set loading to false whether fetching succeeds or fails\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"px-10 md:px-20\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"my-9 text-2xl font-sans font-bold\",\n                children: \"Pending Articles\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, this),\n            loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center h-screen w-full items-center\",\n                children: [\n                    \"  \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"l-waveform\", {\n                        size: \"35\",\n                        stroke: \"3.5\",\n                        speed: \"1\",\n                        color: \"black\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n                        lineNumber: 34,\n                        columnNumber: 76\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n                lineNumber: 34,\n                columnNumber: 8\n            }, this) : articleList.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"No articles found.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n                lineNumber: 36,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_IsSentList__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                articleList: articleList\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n                lineNumber: 38,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Click\\\\Documents\\\\GitHub\\\\journal\\\\app\\\\_components\\\\SentSection.jsx\",\n        lineNumber: 31,\n        columnNumber: 5\n    }, this);\n}\n_s(SentSection, \"rsplcP3gBy7lAmRn6BH8uFjJ+4E=\");\n_c = SentSection;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SentSection);\nvar _c;\n$RefreshReg$(_c, \"SentSection\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy9TZW50U2VjdGlvbi5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ21EO0FBQ0w7QUFDUjtBQUNOO0FBRWhDLFNBQVNNOztJQUNQLE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHTiwrQ0FBUUEsQ0FBQyxFQUFFO0lBQ2pELE1BQU0sQ0FBQ08sU0FBU0MsV0FBVyxHQUFHUiwrQ0FBUUEsQ0FBQztJQUN2Q0csNENBQVFBLENBQUNNLFFBQVE7SUFFakJWLGdEQUFTQSxDQUFDO1FBQ1JXO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTUEscUJBQXFCO1FBQ3pCVCx5REFBVUEsQ0FBQ1UsaUJBQWlCLEdBQ3pCQyxJQUFJLENBQUNDLENBQUFBO1lBQ0pDLFFBQVFDLEdBQUcsQ0FBQ0YsSUFBSUcsSUFBSSxDQUFDQSxJQUFJO1lBQ3pCVixlQUFlTyxJQUFJRyxJQUFJLENBQUNBLElBQUk7UUFDOUIsR0FDQ0MsS0FBSyxDQUFDQyxDQUFBQTtZQUNMSixRQUFRSSxLQUFLLENBQUMsNEJBQTRCQTtRQUM1QyxHQUNDQyxPQUFPLENBQUM7WUFDUFgsV0FBVyxRQUFRLDBEQUEwRDtRQUMvRTtJQUNKO0lBRUEscUJBQ0UsOERBQUNZO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBR0QsV0FBVTswQkFBb0M7Ozs7OztZQUNqRGQsd0JBQ0EsOERBQUNhO2dCQUFJQyxXQUFVOztvQkFBbUQ7a0NBQUUsOERBQUNFO3dCQUFXQyxNQUFLO3dCQUFLQyxRQUFPO3dCQUFNQyxPQUFNO3dCQUFJQyxPQUFNOzs7Ozs7Ozs7Ozt1QkFDcEh0QixZQUFZdUIsTUFBTSxLQUFLLGtCQUN6Qiw4REFBQ1I7MEJBQUk7Ozs7O3FDQUVMLDhEQUFDbEIsbURBQVVBO2dCQUFDRyxhQUFhQTs7Ozs7Ozs7Ozs7O0FBSWpDO0dBbkNTRDtLQUFBQTtBQXFDVCwrREFBZUEsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvX2NvbXBvbmVudHMvU2VudFNlY3Rpb24uanN4P2YwZWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgQXJ0aWNsZUFwaSBmcm9tICcuLi9fdXRpbHMvQXJ0aWNsZUFwaSc7XHJcbmltcG9ydCBJc1NlbnRMaXN0IGZyb20gJy4vSXNTZW50TGlzdCc7XHJcbmltcG9ydCB7IHdhdmVmb3JtIH0gZnJvbSBcImxkcnNcIjtcclxuXHJcbmZ1bmN0aW9uIFNlbnRTZWN0aW9uKCkge1xyXG4gIGNvbnN0IFthcnRpY2xlTGlzdCwgc2V0QXJ0aWNsZUxpc3RdID0gdXNlU3RhdGUoW10pO1xyXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIHdhdmVmb3JtLnJlZ2lzdGVyKCk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBnZXRMYXRlc3RBcnRpY2xlc18oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IGdldExhdGVzdEFydGljbGVzXyA9ICgpID0+IHtcclxuICAgIEFydGljbGVBcGkuZ2V0TGF0ZXN0QXJ0aWNsZXMoKVxyXG4gICAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEpO1xyXG4gICAgICAgIHNldEFydGljbGVMaXN0KHJlcy5kYXRhLmRhdGEpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFydGljbGVzOicsIGVycm9yKTtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpOyAvLyBTZXQgbG9hZGluZyB0byBmYWxzZSB3aGV0aGVyIGZldGNoaW5nIHN1Y2NlZWRzIG9yIGZhaWxzXHJcbiAgICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT0ncHgtMTAgbWQ6cHgtMjAnPlxyXG4gICAgICA8aDIgY2xhc3NOYW1lPSdteS05IHRleHQtMnhsIGZvbnQtc2FucyBmb250LWJvbGQnPlBlbmRpbmcgQXJ0aWNsZXM8L2gyPlxyXG4gICAgICB7bG9hZGluZyA/IChcclxuICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBoLXNjcmVlbiB3LWZ1bGwgaXRlbXMtY2VudGVyXCI+ICA8bC13YXZlZm9ybSBzaXplPVwiMzVcIiBzdHJva2U9XCIzLjVcIiBzcGVlZD1cIjFcIiBjb2xvcj1cImJsYWNrXCI+PC9sLXdhdmVmb3JtPjwvZGl2PlxyXG4gICAgICApIDogYXJ0aWNsZUxpc3QubGVuZ3RoID09PSAwID8gKFxyXG4gICAgICAgIDxkaXY+Tm8gYXJ0aWNsZXMgZm91bmQuPC9kaXY+XHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgPElzU2VudExpc3QgYXJ0aWNsZUxpc3Q9e2FydGljbGVMaXN0fSAvPlxyXG4gICAgICApfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2VudFNlY3Rpb247XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiQXJ0aWNsZUFwaSIsIklzU2VudExpc3QiLCJ3YXZlZm9ybSIsIlNlbnRTZWN0aW9uIiwiYXJ0aWNsZUxpc3QiLCJzZXRBcnRpY2xlTGlzdCIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwicmVnaXN0ZXIiLCJnZXRMYXRlc3RBcnRpY2xlc18iLCJnZXRMYXRlc3RBcnRpY2xlcyIsInRoZW4iLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJmaW5hbGx5IiwiZGl2IiwiY2xhc3NOYW1lIiwiaDIiLCJsLXdhdmVmb3JtIiwic2l6ZSIsInN0cm9rZSIsInNwZWVkIiwiY29sb3IiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/SentSection.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/_utils/ArticleApi.js":
/*!**********************************!*\
  !*** ./app/_utils/ArticleApi.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst { default: axiosClient } = __webpack_require__(/*! ./axiosClient */ \"(app-pages-browser)/./app/_utils/axiosClient.js\");\nconst getLatestArticles = ()=>axiosClient.get(\"/articles?populate=*\");\nconst getArticleById = (id)=>axiosClient.get(\"/articles/\".concat(id, \"?populate=*\"));\nconst getUserById = (id)=>axiosClient.get(\"/users/\".concat(id, \"?populate=*\"));\nconst getReviwersAppeal = ()=>axiosClient.get(\"/appeals?populate=*\");\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    getReviwersAppeal,\n    getLatestArticles,\n    getArticleById,\n    getUserById\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fdXRpbHMvQXJ0aWNsZUFwaS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxFQUFFQSxTQUFTQyxXQUFXLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMsc0VBQWU7QUFFeEQsTUFBTUMsb0JBQWtCLElBQUlGLFlBQVlHLEdBQUcsQ0FBQztBQUM1QyxNQUFNQyxpQkFBZSxDQUFDQyxLQUFLTCxZQUFZRyxHQUFHLENBQUUsYUFBZ0IsT0FBSEUsSUFBRztBQUM1RCxNQUFNQyxjQUFZLENBQUNELEtBQUtMLFlBQVlHLEdBQUcsQ0FBRSxVQUFhLE9BQUhFLElBQUc7QUFDdEQsTUFBTUUsb0JBQWtCLElBQUlQLFlBQVlHLEdBQUcsQ0FBQztBQUM1QywrREFBYztJQUNkSTtJQUNBTDtJQUNBRTtJQUNBRTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL191dGlscy9BcnRpY2xlQXBpLmpzP2ZiOWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBkZWZhdWx0OiBheGlvc0NsaWVudCB9ID0gcmVxdWlyZShcIi4vYXhpb3NDbGllbnRcIik7XHJcblxyXG5jb25zdCBnZXRMYXRlc3RBcnRpY2xlcz0oKT0+YXhpb3NDbGllbnQuZ2V0KCcvYXJ0aWNsZXM/cG9wdWxhdGU9KicpXHJcbmNvbnN0IGdldEFydGljbGVCeUlkPShpZCk9PmF4aW9zQ2xpZW50LmdldCggYC9hcnRpY2xlcy8ke2lkfT9wb3B1bGF0ZT0qYClcclxuY29uc3QgZ2V0VXNlckJ5SWQ9KGlkKT0+YXhpb3NDbGllbnQuZ2V0KCBgL3VzZXJzLyR7aWR9P3BvcHVsYXRlPSpgKVxyXG5jb25zdCBnZXRSZXZpd2Vyc0FwcGVhbD0oKT0+YXhpb3NDbGllbnQuZ2V0KCcvYXBwZWFscz9wb3B1bGF0ZT0qJylcclxuZXhwb3J0IGRlZmF1bHR7XHJcbmdldFJldml3ZXJzQXBwZWFsLFxyXG5nZXRMYXRlc3RBcnRpY2xlcyxcclxuZ2V0QXJ0aWNsZUJ5SWQsXHJcbmdldFVzZXJCeUlkXHJcbn0iXSwibmFtZXMiOlsiZGVmYXVsdCIsImF4aW9zQ2xpZW50IiwicmVxdWlyZSIsImdldExhdGVzdEFydGljbGVzIiwiZ2V0IiwiZ2V0QXJ0aWNsZUJ5SWQiLCJpZCIsImdldFVzZXJCeUlkIiwiZ2V0UmV2aXdlcnNBcHBlYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_utils/ArticleApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/_utils/axiosClient.js":
/*!***********************************!*\
  !*** ./app/_utils/axiosClient.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst { default: axios } = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/dist/browser/axios.cjs\");\nconst apiKey = \"3d1304063436599485a0293fe974c8293f1785cc3ffbfca8f680c0306f57b9f84e2a0448114eebda620b7c805cedcd2a92fec9199d422aac04fe60bb11826615059bd101d677665b60ca23e0c471974f4a92fbdb48c112fb791f4e4808178f21783905fa2679092f4219dfafe70b67952de3a75524bac26e5d3c7c0a8d81c730\";\nconst apiUrl = \"http://localhost:1337/api\";\nconst axiosClient = axios.create({\n    baseURL: apiUrl,\n    headers: {\n        Authorization: \"Bearer \".concat(apiKey)\n    }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (axiosClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fdXRpbHMvYXhpb3NDbGllbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBQ0EsU0FBVUMsS0FBSyxFQUFDLEdBQUVDLG1CQUFPQSxDQUFDO0FBR2pDLE1BQU1DLFNBQU9DLGtRQUFvQztBQUNqRCxNQUFNRyxTQUFPO0FBQ2IsTUFBTUMsY0FBWVAsTUFBTVEsTUFBTSxDQUFDO0lBQzNCQyxTQUFRSDtJQUNSSSxTQUFRO1FBQ0FDLGVBQWtCLFVBQWlCLE9BQVBUO0lBR3BDO0FBR0o7QUFDQSwrREFBZUssV0FBV0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvX3V0aWxzL2F4aW9zQ2xpZW50LmpzPzAxNmUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2RlZmF1bHQgOiBheGlvc309IHJlcXVpcmUoJ2F4aW9zJylcclxuXHJcblxyXG5jb25zdCBhcGlLZXk9cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUkVTVF9BUElfS0VZO1xyXG5jb25zdCBhcGlVcmw9XCJodHRwOi8vbG9jYWxob3N0OjEzMzcvYXBpXCJcclxuY29uc3QgYXhpb3NDbGllbnQ9YXhpb3MuY3JlYXRlKHtcclxuICAgIGJhc2VVUkw6YXBpVXJsLFxyXG4gICAgaGVhZGVyczp7XHJcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICAgIGBCZWFyZXIgJHthcGlLZXl9YFxyXG5cclxuXHJcbiAgICB9XHJcblxyXG5cclxufSk7XHJcbmV4cG9ydCBkZWZhdWx0IGF4aW9zQ2xpZW50Il0sIm5hbWVzIjpbImRlZmF1bHQiLCJheGlvcyIsInJlcXVpcmUiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfUkVTVF9BUElfS0VZIiwiYXBpVXJsIiwiYXhpb3NDbGllbnQiLCJjcmVhdGUiLCJiYXNlVVJMIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_utils/axiosClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MWY5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/axios/dist/browser/axios.cjs":
/*!***************************************************!*\
  !*** ./node_modules/axios/dist/browser/axios.cjs ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n// Axios v1.7.1 Copyright (c) 2024 Matt Zabriskie and contributors\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : __webpack_require__.g)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv,\n  origin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  const threshold = 1000 / freq;\n  let timer = null;\n  return function throttled() {\n    const force = this === true;\n\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\n\nvar progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  }, freq);\n};\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders$1.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();\n    let {responseType} = _config;\n    let onCanceled;\n    function done() {\n      if (_config.cancelToken) {\n        _config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (_config.signal) {\n        _config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        _config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof _config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(_config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof _config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(_config.onUploadProgress));\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n    }\n  };\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n  }, timeout);\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener('abort', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  };\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener('abort', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n};\n\nvar composeSignals$1 = composeSignals;\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst fetchProgressDecorator = (total, fn) => {\n  const lengthComputable = total != null;\n  return (loaded) => setTimeout(() => fn({\n    lengthComputable,\n    total,\n    loaded\n  }));\n};\n\nconst isFetchSupported = typeof fetch !== 'undefined';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream !== 'undefined';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder !== 'undefined' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst supportsRequestStream = isReadableStreamSupported && (() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n})();\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported && !!(()=> {\n  try {\n    return utils$1.isReadableStream(new Response('').body);\n  } catch(err) {\n    // return undefined\n  }\n})();\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils$1.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils$1.isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(utils$1.isArrayBufferView(body)) {\n    return body.byteLength;\n  }\n\n  if(utils$1.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils$1.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n};\n\nvar fetchAdapter = isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    composeSignals$1([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  };\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n\n      if (_request.body) {\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(\n          requestContentLength,\n          progressEventReducer(onUploadProgress)\n        ), null, encodeText);\n      }\n    }\n\n    if (!utils$1.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'cors' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(\n          responseContentLength,\n          progressEventReducer(onDownloadProgress, true)\n        ), isStreamResponse && onFinish, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders$1.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.7.1\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/axios/dist/browser/axios.cjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-7BEDZEB2.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/chunk-7BEDZEB2.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: function() { return /* binding */ AuthContext; },\n/* harmony export */   AuthenticateWithRedirectCallback: function() { return /* binding */ AuthenticateWithRedirectCallback; },\n/* harmony export */   ClerkLoaded: function() { return /* binding */ ClerkLoaded; },\n/* harmony export */   ClerkLoading: function() { return /* binding */ ClerkLoading; },\n/* harmony export */   IsomorphicClerkContext: function() { return /* binding */ IsomorphicClerkContext; },\n/* harmony export */   MultisessionAppSupport: function() { return /* binding */ MultisessionAppSupport; },\n/* harmony export */   Protect: function() { return /* binding */ Protect; },\n/* harmony export */   RedirectToCreateOrganization: function() { return /* binding */ RedirectToCreateOrganization; },\n/* harmony export */   RedirectToOrganizationProfile: function() { return /* binding */ RedirectToOrganizationProfile; },\n/* harmony export */   RedirectToSignIn: function() { return /* binding */ RedirectToSignIn; },\n/* harmony export */   RedirectToSignUp: function() { return /* binding */ RedirectToSignUp; },\n/* harmony export */   RedirectToUserProfile: function() { return /* binding */ RedirectToUserProfile; },\n/* harmony export */   SignedIn: function() { return /* binding */ SignedIn; },\n/* harmony export */   SignedOut: function() { return /* binding */ SignedOut; },\n/* harmony export */   buildClerkJsScriptAttributes: function() { return /* binding */ buildClerkJsScriptAttributes; },\n/* harmony export */   clerkJsScriptUrl: function() { return /* binding */ clerkJsScriptUrl; },\n/* harmony export */   customLinkWrongProps: function() { return /* binding */ customLinkWrongProps; },\n/* harmony export */   customPageWrongProps: function() { return /* binding */ customPageWrongProps; },\n/* harmony export */   customPagesIgnoredComponent: function() { return /* binding */ customPagesIgnoredComponent; },\n/* harmony export */   errorThrower: function() { return /* binding */ errorThrower; },\n/* harmony export */   incompatibleRoutingWithPathProvidedError: function() { return /* binding */ incompatibleRoutingWithPathProvidedError; },\n/* harmony export */   loadClerkJsScript: function() { return /* binding */ loadClerkJsScript; },\n/* harmony export */   multipleChildrenInButtonComponent: function() { return /* binding */ multipleChildrenInButtonComponent; },\n/* harmony export */   multipleClerkProvidersError: function() { return /* binding */ multipleClerkProvidersError; },\n/* harmony export */   noPathProvidedError: function() { return /* binding */ noPathProvidedError; },\n/* harmony export */   organizationProfileLinkRenderedError: function() { return /* binding */ organizationProfileLinkRenderedError; },\n/* harmony export */   organizationProfilePageRenderedError: function() { return /* binding */ organizationProfilePageRenderedError; },\n/* harmony export */   setErrorThrowerOptions: function() { return /* binding */ setErrorThrowerOptions; },\n/* harmony export */   unsupportedNonBrowserDomainOrProxyUrlFunction: function() { return /* binding */ unsupportedNonBrowserDomainOrProxyUrlFunction; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; },\n/* harmony export */   useClerk: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useClerk; },\n/* harmony export */   useEmailLink: function() { return /* binding */ useEmailLink; },\n/* harmony export */   useOrganization: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useOrganization; },\n/* harmony export */   useOrganizationList: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useOrganizationList; },\n/* harmony export */   useSession: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useSession; },\n/* harmony export */   useSessionList: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useSessionList; },\n/* harmony export */   useSignIn: function() { return /* binding */ useSignIn; },\n/* harmony export */   useSignUp: function() { return /* binding */ useSignUp; },\n/* harmony export */   useUser: function() { return /* reexport safe */ _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useUser; },\n/* harmony export */   userProfileLinkRenderedError: function() { return /* binding */ userProfileLinkRenderedError; },\n/* harmony export */   userProfilePageRenderedError: function() { return /* binding */ userProfilePageRenderedError; },\n/* harmony export */   withClerk: function() { return /* binding */ withClerk; }\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/error */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/keys */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_loadScript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/loadScript */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/loadScript.mjs\");\n/* harmony import */ var _clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/proxy */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/proxy.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/url */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/telemetry.mjs\");\n// src/errors/errorThrower.ts\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower)({ packageName: \"@clerk/clerk-react\" });\nfunction setErrorThrowerOptions(options) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n\n// src/utils/loadClerkJsScript.ts\n\n\n\n\n\n// src/utils/isDevOrStageUrl.tsx\n\nvar { isDevOrStagingUrl } = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.createDevOrStagingUrlCache)();\n\n// src/utils/versionSelector.ts\nvar versionSelector = (clerkJSVersion, packageVersion = \"5.0.4\") => {\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n  const prereleaseTag = getPrereleaseTag(packageVersion);\n  if (prereleaseTag) {\n    if (prereleaseTag === \"snapshot\") {\n      return \"5.2.2\";\n    }\n    return prereleaseTag;\n  }\n  return getMajorVersion(packageVersion);\n};\nvar getPrereleaseTag = (packageVersion) => {\n  var _a;\n  return (_a = packageVersion.trim().replace(/^v/, \"\").match(/-(.+?)(\\.|$)/)) == null ? void 0 : _a[1];\n};\nvar getMajorVersion = (packageVersion) => packageVersion.trim().replace(/^v/, \"\").split(\".\")[0];\n\n// src/utils/loadClerkJsScript.ts\nvar FAILED_TO_LOAD_ERROR = \"Clerk: Failed to load Clerk\";\nvar loadClerkJsScript = (opts) => {\n  const { publishableKey } = opts;\n  if (!publishableKey) {\n    errorThrower.throwMissingPublishableKeyError();\n  }\n  const existingScript = document.querySelector(\"script[data-clerk-js-script]\");\n  if (existingScript) {\n    return new Promise((resolve, reject) => {\n      existingScript.addEventListener(\"load\", () => {\n        resolve(existingScript);\n      });\n      existingScript.addEventListener(\"error\", () => {\n        reject(FAILED_TO_LOAD_ERROR);\n      });\n    });\n  }\n  return (0,_clerk_shared_loadScript__WEBPACK_IMPORTED_MODULE_2__.loadScript)(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: \"anonymous\",\n    beforeLoad: applyClerkJsScriptAttributes(opts)\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\nvar clerkJsScriptUrl = (opts) => {\n  var _a, _b;\n  const { clerkJSUrl, clerkJSVariant, clerkJSVersion, proxyUrl, domain, publishableKey } = opts;\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n  let scriptHost = \"\";\n  if (!!proxyUrl && (0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.isValidProxyUrl)(proxyUrl)) {\n    scriptHost = (0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.proxyUrlToAbsoluteURL)(proxyUrl).replace(/http(s)?:\\/\\//, \"\");\n  } else if (domain && !isDevOrStagingUrl(((_a = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.parsePublishableKey)(publishableKey)) == null ? void 0 : _a.frontendApi) || \"\")) {\n    scriptHost = (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_4__.addClerkPrefix)(domain);\n  } else {\n    scriptHost = ((_b = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.parsePublishableKey)(publishableKey)) == null ? void 0 : _b.frontendApi) || \"\";\n  }\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, \"\")}.` : \"\";\n  const version = versionSelector(clerkJSVersion);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\nvar buildClerkJsScriptAttributes = (options) => {\n  const obj = {};\n  if (options.publishableKey) {\n    obj[\"data-clerk-publishable-key\"] = options.publishableKey;\n  }\n  if (options.proxyUrl) {\n    obj[\"data-clerk-proxy-url\"] = options.proxyUrl;\n  }\n  if (options.domain) {\n    obj[\"data-clerk-domain\"] = options.domain;\n  }\n  return obj;\n};\nvar applyClerkJsScriptAttributes = (options) => (script) => {\n  const attributes = buildClerkJsScriptAttributes(options);\n  for (const attribute in attributes) {\n    script.setAttribute(attribute, attributes[attribute]);\n  }\n};\n\n// src/hooks/useAuth.ts\n\n\n// src/contexts/AuthContext.ts\n\nvar [AuthContext, useAuthContext] = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.createContextAndHook)(\"AuthContext\");\n\n// src/contexts/IsomorphicClerkContext.tsx\n\nvar IsomorphicClerkContext = _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.ClerkInstanceContext;\nvar useIsomorphicClerkContext = _clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useClerkInstanceContext;\n\n// src/errors/messages.ts\nvar multipleClerkProvidersError = \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\nvar multipleChildrenInButtonComponent = (name) => `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\nvar invalidStateError = \"Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support\";\nvar unsupportedNonBrowserDomainOrProxyUrlFunction = \"Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.\";\nvar userProfilePageRenderedError = \"<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar userProfileLinkRenderedError = \"<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar organizationProfilePageRenderedError = \"<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar organizationProfileLinkRenderedError = \"<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar customPagesIgnoredComponent = (componentName) => `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\nvar customPageWrongProps = (componentName) => `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\nvar customLinkWrongProps = (componentName) => `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\nvar useAuthHasRequiresRoleOrPermission = 'Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`';\nvar noPathProvidedError = (componentName) => `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\nvar incompatibleRoutingWithPathProvidedError = (componentName) => `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\n\n// src/hooks/useAssertWrappedByClerkProvider.ts\n\nvar useAssertWrappedByClerkProvider = (source) => {\n  (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useAssertWrappedByClerkProvider)(() => {\n    errorThrower.throwMissingClerkProviderError({ source });\n  });\n};\n\n// src/hooks/utils.ts\nvar clerkLoaded = (isomorphicClerk) => {\n  return new Promise((resolve) => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\nvar createGetToken = (isomorphicClerk) => {\n  return async (options) => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\nvar createSignOut = (isomorphicClerk) => {\n  return async (...args) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n\n// src/hooks/useAuth.ts\nvar useAuth = () => {\n  useAssertWrappedByClerkProvider(\"useAuth\");\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const getToken = (0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut = (0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)(createSignOut(isomorphicClerk), [isomorphicClerk]);\n  const has = (0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)(\n    (params) => {\n      if (!(params == null ? void 0 : params.permission) && !(params == null ? void 0 : params.role)) {\n        errorThrower.throw(useAuthHasRequiresRoleOrPermission);\n      }\n      if (!orgId || !userId || !orgRole || !orgPermissions) {\n        return false;\n      }\n      if (params.permission) {\n        return orgPermissions.includes(params.permission);\n      }\n      if (params.role) {\n        return orgRole === params.role;\n      }\n      return false;\n    },\n    [orgId, orgRole, userId, orgPermissions]\n  );\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      has: void 0,\n      signOut,\n      getToken\n    };\n  }\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  return errorThrower.throw(invalidStateError);\n};\n\n// src/hooks/useEmailLink.ts\n\nfunction useEmailLink(resource) {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = react__WEBPACK_IMPORTED_MODULE_5__.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  };\n}\n\n// src/hooks/useSignIn.ts\n\n\nvar useSignIn = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignIn\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useClientContext)();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_7__.eventMethodCalled)(\"useSignIn\"));\n  if (!client) {\n    return { isLoaded: false, signIn: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/useSignUp.ts\n\n\nvar useSignUp = () => {\n  var _a;\n  useAssertWrappedByClerkProvider(\"useSignUp\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useClientContext)();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_7__.eventMethodCalled)(\"useSignUp\"));\n  if (!client) {\n    return { isLoaded: false, signUp: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/hooks/index.ts\n\n\n// src/components/controlComponents.tsx\n\n\n// src/contexts/SessionContext.tsx\n\n\n// src/components/withClerk.tsx\n\nvar withClerk = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  const HOC = (props) => {\n    useAssertWrappedByClerkProvider(displayName || \"withClerk\");\n    const clerk = useIsomorphicClerkContext();\n    if (!clerk.loaded) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(\n      Component,\n      {\n        ...props,\n        clerk\n      }\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\n// src/components/controlComponents.tsx\nvar SignedIn = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"SignedIn\");\n  const { userId } = useAuthContext();\n  if (userId) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n  }\n  return null;\n};\nvar SignedOut = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"SignedOut\");\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n  }\n  return null;\n};\nvar ClerkLoaded = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoaded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n};\nvar ClerkLoading = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"ClerkLoading\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n};\nvar Protect = ({ children, fallback, ...restAuthorizedParams }) => {\n  useAssertWrappedByClerkProvider(\"Protect\");\n  const { isLoaded, has, userId } = useAuth();\n  if (!isLoaded) {\n    return null;\n  }\n  const unauthorized = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, fallback != null ? fallback : null);\n  const authorized = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, null, children);\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nvar RedirectToSignIn = withClerk(({ clerk, ...props }) => {\n  const { client, session } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(({ clerk, ...props }) => {\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToUserProfile = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }) => {\n    react__WEBPACK_IMPORTED_MODULE_5__.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n    return null;\n  },\n  \"AuthenticateWithRedirectCallback\"\n);\nvar MultisessionAppSupport = ({ children }) => {\n  useAssertWrappedByClerkProvider(\"MultisessionAppSupport\");\n  const session = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_6__.useSessionContext)();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_5__.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Fragment, { key: session ? session.id : \"no-users\" }, children);\n};\n\n\n//# sourceMappingURL=chunk-7BEDZEB2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-7BEDZEB2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-JMDSN227.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/chunk-JMDSN227.mjs ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __privateAdd: function() { return /* binding */ __privateAdd; },\n/* harmony export */   __privateGet: function() { return /* binding */ __privateGet; },\n/* harmony export */   __privateSet: function() { return /* binding */ __privateSet; }\n/* harmony export */ });\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n\n//# sourceMappingURL=chunk-JMDSN227.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3QvZGlzdC9jaHVuay1KTURTTjIyNy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9kaXN0L2NodW5rLUpNRFNOMjI3Lm1qcz8xYjM1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xuXG5leHBvcnQge1xuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZUFkZCxcbiAgX19wcml2YXRlU2V0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSk1EU04yMjcubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-JMDSN227.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/dist/index.mjs ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticateWithRedirectCallback: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticateWithRedirectCallback; },\n/* harmony export */   ClerkLoaded: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkLoaded; },\n/* harmony export */   ClerkLoading: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkLoading; },\n/* harmony export */   ClerkProvider: function() { return /* binding */ ClerkProvider; },\n/* harmony export */   CreateOrganization: function() { return /* binding */ CreateOrganization; },\n/* harmony export */   OrganizationList: function() { return /* binding */ OrganizationList; },\n/* harmony export */   OrganizationProfile: function() { return /* binding */ OrganizationProfile; },\n/* harmony export */   OrganizationSwitcher: function() { return /* binding */ OrganizationSwitcher; },\n/* harmony export */   Protect: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.Protect; },\n/* harmony export */   RedirectToCreateOrganization: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToCreateOrganization; },\n/* harmony export */   RedirectToOrganizationProfile: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToOrganizationProfile; },\n/* harmony export */   RedirectToSignIn: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToSignIn; },\n/* harmony export */   RedirectToSignUp: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToSignUp; },\n/* harmony export */   RedirectToUserProfile: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.RedirectToUserProfile; },\n/* harmony export */   SignIn: function() { return /* binding */ SignIn; },\n/* harmony export */   SignInButton: function() { return /* binding */ SignInButton; },\n/* harmony export */   SignInWithMetamaskButton: function() { return /* binding */ SignInWithMetamaskButton; },\n/* harmony export */   SignOutButton: function() { return /* binding */ SignOutButton; },\n/* harmony export */   SignUp: function() { return /* binding */ SignUp; },\n/* harmony export */   SignUpButton: function() { return /* binding */ SignUpButton; },\n/* harmony export */   SignedIn: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.SignedIn; },\n/* harmony export */   SignedOut: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.SignedOut; },\n/* harmony export */   UserButton: function() { return /* binding */ UserButton; },\n/* harmony export */   UserProfile: function() { return /* binding */ UserProfile; },\n/* harmony export */   __experimental_GoogleOneTap: function() { return /* binding */ __experimental_GoogleOneTap; },\n/* harmony export */   useAuth: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useAuth; },\n/* harmony export */   useClerk: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useClerk; },\n/* harmony export */   useEmailLink: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useEmailLink; },\n/* harmony export */   useOrganization: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useOrganization; },\n/* harmony export */   useOrganizationList: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useOrganizationList; },\n/* harmony export */   useSession: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useSession; },\n/* harmony export */   useSessionList: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useSessionList; },\n/* harmony export */   useSignIn: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useSignIn; },\n/* harmony export */   useSignUp: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useSignUp; },\n/* harmony export */   useUser: function() { return /* reexport safe */ _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.useUser; }\n/* harmony export */ });\n/* harmony import */ var _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7BEDZEB2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-7BEDZEB2.mjs\");\n/* harmony import */ var _chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-JMDSN227.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/chunk-JMDSN227.mjs\");\n/* harmony import */ var _clerk_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/keys */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/browser */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/browser.mjs\");\n/* harmony import */ var _clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/handleValueOrFn */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/handleValueOrFn.mjs\");\n\n\n\n// src/polyfills.ts\nif (typeof window !== \"undefined\" && !window.global) {\n  window.global = typeof global === \"undefined\" ? window : global;\n}\n\n// src/components/uiComponents.tsx\n\n\n\n\n// src/utils/childrenUtils.tsx\n\nvar assertSingleChild = (children) => (name) => {\n  try {\n    return react__WEBPACK_IMPORTED_MODULE_4__.Children.only(children);\n  } catch (e) {\n    return _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw((0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleChildrenInButtonComponent)(name));\n  }\n};\nvar normalizeWithDefaultValue = (children, defaultText) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === \"string\") {\n    children = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\"button\", null, children);\n  }\n  return children;\n};\nvar safeExecute = (cb) => (...args) => {\n  if (cb && typeof cb === \"function\") {\n    return cb(...args);\n  }\n};\n\n// src/utils/isConstructor.ts\nfunction isConstructor(f) {\n  return typeof f === \"function\";\n}\n\n// src/utils/useMaxAllowedInstancesGuard.tsx\n\nvar counts = /* @__PURE__ */ new Map();\nfunction useMaxAllowedInstancesGuard(name, error, maxCount = 1) {\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      return _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(error);\n    }\n    counts.set(name, count + 1);\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\nfunction withMaxAllowedInstancesGuard(WrappedComponent, name, error) {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || \"Component\";\n  const Hoc = (props) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(WrappedComponent, { ...props });\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n\n// src/utils/useCustomElementPortal.tsx\n\n\nvar useCustomElementPortal = (elements) => {\n  const initialState = Array(elements.length).fill(null);\n  const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(initialState);\n  return elements.map((el, index) => ({\n    id: el.id,\n    mount: (node) => setNodes((prevState) => prevState.map((n, i) => i === index ? node : n)),\n    unmount: () => setNodes((prevState) => prevState.map((n, i) => i === index ? null : n)),\n    portal: () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, nodes[index] ? (0,react_dom__WEBPACK_IMPORTED_MODULE_5__.createPortal)(el.component, nodes[index]) : null)\n  }));\n};\n\n// src/utils/useCustomPages.tsx\n\n\nvar isThatComponent = (v, component) => {\n  return !!v && react__WEBPACK_IMPORTED_MODULE_4__.isValidElement(v) && (v == null ? void 0 : v.type) === component;\n};\nvar useUserProfileCustomPages = (children) => {\n  const reorderItemsLabels = [\"account\", \"security\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: UserProfileLink,\n    PageComponent: UserProfilePage,\n    componentName: \"UserProfile\"\n  });\n};\nvar useOrganizationProfileCustomPages = (children) => {\n  const reorderItemsLabels = [\"general\", \"members\"];\n  return useCustomPages({\n    children,\n    reorderItemsLabels,\n    LinkComponent: OrganizationProfileLink,\n    PageComponent: OrganizationProfilePage,\n    componentName: \"OrganizationProfile\"\n  });\n};\nvar useCustomPages = ({\n  children,\n  LinkComponent,\n  PageComponent,\n  reorderItemsLabels,\n  componentName\n}) => {\n  const validChildren = [];\n  react__WEBPACK_IMPORTED_MODULE_4__.Children.forEach(children, (child) => {\n    if (!isThatComponent(child, PageComponent) && !isThatComponent(child, LinkComponent)) {\n      if (child) {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)((0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.customPagesIgnoredComponent)(componentName));\n      }\n      return;\n    }\n    const { props } = child;\n    const { children: children2, label, url, labelIcon } = props;\n    if (isThatComponent(child, PageComponent)) {\n      if (isReorderItem(props, reorderItemsLabels)) {\n        validChildren.push({ label });\n      } else if (isCustomPage(props)) {\n        validChildren.push({ label, labelIcon, children: children2, url });\n      } else {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)((0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.customPageWrongProps)(componentName));\n        return;\n      }\n    }\n    if (isThatComponent(child, LinkComponent)) {\n      if (isExternalLink(props)) {\n        validChildren.push({ label, labelIcon, url });\n      } else {\n        (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)((0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.customLinkWrongProps)(componentName));\n        return;\n      }\n    }\n  });\n  const customPageContents = [];\n  const customPageLabelIcons = [];\n  const customLinkLabelIcons = [];\n  validChildren.forEach((cp, index) => {\n    if (isCustomPage(cp)) {\n      customPageContents.push({ component: cp.children, id: index });\n      customPageLabelIcons.push({ component: cp.labelIcon, id: index });\n      return;\n    }\n    if (isExternalLink(cp)) {\n      customLinkLabelIcons.push({ component: cp.labelIcon, id: index });\n    }\n  });\n  const customPageContentsPortals = useCustomElementPortal(customPageContents);\n  const customPageLabelIconsPortals = useCustomElementPortal(customPageLabelIcons);\n  const customLinkLabelIconsPortals = useCustomElementPortal(customLinkLabelIcons);\n  const customPages = [];\n  const customPagesPortals = [];\n  validChildren.forEach((cp, index) => {\n    if (isReorderItem(cp, reorderItemsLabels)) {\n      customPages.push({ label: cp.label });\n      return;\n    }\n    if (isCustomPage(cp)) {\n      const {\n        portal: contentPortal,\n        mount,\n        unmount\n      } = customPageContentsPortals.find((p) => p.id === index);\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customPageLabelIconsPortals.find((p) => p.id === index);\n      customPages.push({ label: cp.label, url: cp.url, mount, unmount, mountIcon, unmountIcon });\n      customPagesPortals.push(contentPortal);\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n    if (isExternalLink(cp)) {\n      const {\n        portal: labelPortal,\n        mount: mountIcon,\n        unmount: unmountIcon\n      } = customLinkLabelIconsPortals.find((p) => p.id === index);\n      customPages.push({ label: cp.label, url: cp.url, mountIcon, unmountIcon });\n      customPagesPortals.push(labelPortal);\n      return;\n    }\n  });\n  return { customPages, customPagesPortals };\n};\nvar isReorderItem = (childProps, validItems) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !url && !labelIcon && validItems.some((v) => v === label);\n};\nvar isCustomPage = (childProps) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !!children && !!url && !!labelIcon && !!label;\n};\nvar isExternalLink = (childProps) => {\n  const { children, label, url, labelIcon } = childProps;\n  return !children && !!url && !!labelIcon && !!label;\n};\n\n// src/components/uiComponents.tsx\nvar Portal = class extends react__WEBPACK_IMPORTED_MODULE_4__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.portalRef = react__WEBPACK_IMPORTED_MODULE_4__.createRef();\n  }\n  componentDidUpdate(_prevProps) {\n    var _a, _b;\n    const prevProps = (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.without)(_prevProps.props, \"customPages\", \"children\");\n    const newProps = (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.without)(this.props.props, \"customPages\", \"children\");\n    const customPagesChanged = ((_a = prevProps.customPages) == null ? void 0 : _a.length) !== ((_b = newProps.customPages) == null ? void 0 : _b.length);\n    if (!(0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.isDeeplyEqual)(prevProps, newProps) || customPagesChanged) {\n      this.props.updateProps({ node: this.portalRef.current, props: this.props.props });\n    }\n  }\n  componentDidMount() {\n    if (this.portalRef.current) {\n      this.props.mount(this.portalRef.current, this.props.props);\n    }\n  }\n  componentWillUnmount() {\n    if (this.portalRef.current) {\n      this.props.unmount(this.portalRef.current);\n    }\n  }\n  render() {\n    var _a, _b;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\"div\", { ref: this.portalRef }), (_b = (_a = this.props) == null ? void 0 : _a.customPagesPortals) == null ? void 0 : _b.map((portal, index) => (0,react__WEBPACK_IMPORTED_MODULE_4__.createElement)(portal, { key: index })));\n  }\n};\nvar SignIn = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    Portal,\n    {\n      mount: clerk.mountSignIn,\n      unmount: clerk.unmountSignIn,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"SignIn\");\nvar SignUp = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    Portal,\n    {\n      mount: clerk.mountSignUp,\n      unmount: clerk.unmountSignUp,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"SignUp\");\nfunction UserProfilePage({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.userProfilePageRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, children);\n}\nfunction UserProfileLink({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.userProfileLinkRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, children);\n}\nvar _UserProfile = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n      Portal,\n      {\n        mount: clerk.mountUserProfile,\n        unmount: clerk.unmountUserProfile,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, customPages },\n        customPagesPortals\n      }\n    );\n  },\n  \"UserProfile\"\n);\nvar UserProfile = Object.assign(_UserProfile, {\n  Page: UserProfilePage,\n  Link: UserProfileLink\n});\nvar _UserButton = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useUserProfileCustomPages(props.children);\n    const userProfileProps = Object.assign(props.userProfileProps || {}, { customPages });\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n      Portal,\n      {\n        mount: clerk.mountUserButton,\n        unmount: clerk.unmountUserButton,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, userProfileProps },\n        customPagesPortals\n      }\n    );\n  },\n  \"UserButton\"\n);\nvar UserButton = Object.assign(_UserButton, {\n  UserProfilePage,\n  UserProfileLink\n});\nfunction OrganizationProfilePage({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.organizationProfilePageRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, children);\n}\nfunction OrganizationProfileLink({ children }) {\n  (0,_clerk_shared__WEBPACK_IMPORTED_MODULE_2__.logErrorInDevMode)(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.organizationProfileLinkRenderedError);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(react__WEBPACK_IMPORTED_MODULE_4__.Fragment, null, children);\n}\nvar _OrganizationProfile = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n      Portal,\n      {\n        mount: clerk.mountOrganizationProfile,\n        unmount: clerk.unmountOrganizationProfile,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, customPages },\n        customPagesPortals\n      }\n    );\n  },\n  \"OrganizationProfile\"\n);\nvar OrganizationProfile = Object.assign(_OrganizationProfile, {\n  Page: OrganizationProfilePage,\n  Link: OrganizationProfileLink\n});\nvar CreateOrganization = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    Portal,\n    {\n      mount: clerk.mountCreateOrganization,\n      unmount: clerk.unmountCreateOrganization,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"CreateOrganization\");\nvar _OrganizationSwitcher = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, ...props }) => {\n    const { customPages, customPagesPortals } = useOrganizationProfileCustomPages(props.children);\n    const organizationProfileProps = Object.assign(props.organizationProfileProps || {}, { customPages });\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n      Portal,\n      {\n        mount: clerk.mountOrganizationSwitcher,\n        unmount: clerk.unmountOrganizationSwitcher,\n        updateProps: clerk.__unstable__updateProps,\n        props: { ...props, organizationProfileProps },\n        customPagesPortals\n      }\n    );\n  },\n  \"OrganizationSwitcher\"\n);\nvar OrganizationSwitcher = Object.assign(_OrganizationSwitcher, {\n  OrganizationProfilePage,\n  OrganizationProfileLink\n});\nvar OrganizationList = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    Portal,\n    {\n      mount: clerk.mountOrganizationList,\n      unmount: clerk.unmountOrganizationList,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"OrganizationList\");\nvar __experimental_GoogleOneTap = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, ...props }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    Portal,\n    {\n      mount: clerk.__experimental_mountGoogleOneTap,\n      unmount: clerk.__experimental_unmountGoogleOneTap,\n      updateProps: clerk.__unstable__updateProps,\n      props\n    }\n  );\n}, \"OneTap\");\n\n// src/components/SignInButton.tsx\n\nvar SignInButton = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, children, ...props }) => {\n  const { signUpFallbackRedirectUrl, forceRedirectUrl, fallbackRedirectUrl, signUpForceRedirectUrl, mode, ...rest } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in\");\n  const child = assertSingleChild(children)(\"SignInButton\");\n  const clickHandler = () => {\n    const opts = { signUpFallbackRedirectUrl, forceRedirectUrl, fallbackRedirectUrl, signUpForceRedirectUrl };\n    if (mode === \"modal\") {\n      return clerk.openSignIn(opts);\n    }\n    return clerk.redirectToSignIn(opts);\n  };\n  const wrappedChildClickHandler = async (e) => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = { ...rest, onClick: wrappedChildClickHandler };\n  return react__WEBPACK_IMPORTED_MODULE_4__.cloneElement(child, childProps);\n}, \"SignInButton\");\n\n// src/components/SignUpButton.tsx\n\nvar SignUpButton = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(({ clerk, children, ...props }) => {\n  const {\n    fallbackRedirectUrl,\n    forceRedirectUrl,\n    signInFallbackRedirectUrl,\n    signInForceRedirectUrl,\n    mode,\n    unsafeMetadata,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign up\");\n  const child = assertSingleChild(children)(\"SignUpButton\");\n  const clickHandler = () => {\n    const opts = {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      unsafeMetadata\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignUp(opts);\n    }\n    return clerk.redirectToSignUp(opts);\n  };\n  const wrappedChildClickHandler = async (e) => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = { ...rest, onClick: wrappedChildClickHandler };\n  return react__WEBPACK_IMPORTED_MODULE_4__.cloneElement(child, childProps);\n}, \"SignUpButton\");\n\n// src/components/SignOutButton.tsx\n\nvar SignOutButton = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, children, ...props }) => {\n    const { redirectUrl = \"/\", signOutOptions, ...rest } = props;\n    children = normalizeWithDefaultValue(children, \"Sign out\");\n    const child = assertSingleChild(children)(\"SignOutButton\");\n    const clickHandler = () => clerk.signOut({ redirectUrl });\n    const wrappedChildClickHandler = async (e) => {\n      await safeExecute(child.props.onClick)(e);\n      return clickHandler();\n    };\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return react__WEBPACK_IMPORTED_MODULE_4__.cloneElement(child, childProps);\n  },\n  \"SignOutButton\"\n);\n\n// src/components/SignInWithMetamaskButton.tsx\n\nvar SignInWithMetamaskButton = (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.withClerk)(\n  ({ clerk, children, ...props }) => {\n    const { redirectUrl, ...rest } = props;\n    children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n    const child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl: redirectUrl || void 0 });\n      }\n      void authenticate();\n    };\n    const wrappedChildClickHandler = async (e) => {\n      await safeExecute(child.props.onClick)(e);\n      return clickHandler();\n    };\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return react__WEBPACK_IMPORTED_MODULE_4__.cloneElement(child, childProps);\n  },\n  \"SignInWithMetamask\"\n);\n\n// src/contexts/ClerkProvider.tsx\n\n\n\n// src/contexts/ClerkContextProvider.tsx\n\n\n\n// src/isomorphicClerk.ts\n\n\nvar SDK_METADATA = {\n  name: \"@clerk/clerk-react\",\n  version: \"5.0.4\",\n  environment: \"development\"\n};\nvar _loaded, _domain, _proxyUrl, _publishableKey, _instance;\nvar _IsomorphicClerk = class _IsomorphicClerk {\n  constructor(options) {\n    this.clerkjs = null;\n    this.preopenSignIn = null;\n    this.preopenSignUp = null;\n    this.preopenUserProfile = null;\n    this.preopenOrganizationProfile = null;\n    this.preopenCreateOrganization = null;\n    this.premountSignInNodes = /* @__PURE__ */ new Map();\n    this.premountSignUpNodes = /* @__PURE__ */ new Map();\n    this.premountUserProfileNodes = /* @__PURE__ */ new Map();\n    this.premountUserButtonNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationProfileNodes = /* @__PURE__ */ new Map();\n    this.premountCreateOrganizationNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationSwitcherNodes = /* @__PURE__ */ new Map();\n    this.premountOrganizationListNodes = /* @__PURE__ */ new Map();\n    this.premountMethodCalls = /* @__PURE__ */ new Map();\n    this.loadedListeners = [];\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _loaded, false);\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _domain, void 0);\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _proxyUrl, void 0);\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _publishableKey, void 0);\n    this.buildSignInUrl = (opts) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignInUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignInUrl\", callback);\n      }\n    };\n    this.buildSignUpUrl = (opts) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignUpUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignInUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignInUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignInUrl\", callback);\n      }\n    };\n    this.buildAfterSignUpUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignUpUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignOutUrl\", callback);\n      }\n    };\n    this.buildUserProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUserProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUserProfileUrl\", callback);\n      }\n    };\n    this.buildCreateOrganizationUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildCreateOrganizationUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildCreateOrganizationUrl\", callback);\n      }\n    };\n    this.buildOrganizationProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildOrganizationProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildOrganizationProfileUrl\", callback);\n      }\n    };\n    this.buildUrlWithAuth = (to) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUrlWithAuth(to)) || \"\";\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUrlWithAuth\", callback);\n      }\n    };\n    this.handleUnauthenticated = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleUnauthenticated();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"handleUnauthenticated\", callback);\n      }\n    };\n    this.addOnLoaded = (cb) => {\n      this.loadedListeners.push(cb);\n      if (this.loaded) {\n        this.emitLoaded();\n      }\n    };\n    this.emitLoaded = () => {\n      this.loadedListeners.forEach((cb) => cb());\n      this.loadedListeners = [];\n    };\n    this.hydrateClerkJS = (clerkjs) => {\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n      this.clerkjs = clerkjs;\n      this.premountMethodCalls.forEach((cb) => cb());\n      if (this.preopenSignIn !== null) {\n        clerkjs.openSignIn(this.preopenSignIn);\n      }\n      if (this.preopenSignUp !== null) {\n        clerkjs.openSignUp(this.preopenSignUp);\n      }\n      if (this.preopenUserProfile !== null) {\n        clerkjs.openUserProfile(this.preopenUserProfile);\n      }\n      if (this.preopenOrganizationProfile !== null) {\n        clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n      }\n      if (this.preopenCreateOrganization !== null) {\n        clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n      }\n      this.premountSignInNodes.forEach((props, node) => {\n        clerkjs.mountSignIn(node, props);\n      });\n      this.premountSignUpNodes.forEach((props, node) => {\n        clerkjs.mountSignUp(node, props);\n      });\n      this.premountUserProfileNodes.forEach((props, node) => {\n        clerkjs.mountUserProfile(node, props);\n      });\n      this.premountUserButtonNodes.forEach((props, node) => {\n        clerkjs.mountUserButton(node, props);\n      });\n      this.premountOrganizationListNodes.forEach((props, node) => {\n        clerkjs.mountOrganizationList(node, props);\n      });\n      (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _loaded, true);\n      this.emitLoaded();\n      return this.clerkjs;\n    };\n    this.__unstable__updateProps = (props) => {\n      if (this.clerkjs && \"__unstable__updateProps\" in this.clerkjs) {\n        this.clerkjs.__unstable__updateProps(props);\n      } else {\n        return void 0;\n      }\n    };\n    /**\n     * `setActive` can be used to set the active session and/or organization.\n     */\n    this.setActive = ({ session, organization, beforeEmit }) => {\n      if (this.clerkjs) {\n        return this.clerkjs.setActive({ session, organization, beforeEmit });\n      } else {\n        return Promise.reject();\n      }\n    };\n    this.openSignIn = (props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openSignIn(props);\n      } else {\n        this.preopenSignIn = props;\n      }\n    };\n    this.closeSignIn = () => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeSignIn();\n      } else {\n        this.preopenSignIn = null;\n      }\n    };\n    this.openUserProfile = (props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openUserProfile(props);\n      } else {\n        this.preopenUserProfile = props;\n      }\n    };\n    this.closeUserProfile = () => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeUserProfile();\n      } else {\n        this.preopenUserProfile = null;\n      }\n    };\n    this.openOrganizationProfile = (props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openOrganizationProfile(props);\n      } else {\n        this.preopenOrganizationProfile = props;\n      }\n    };\n    this.closeOrganizationProfile = () => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeOrganizationProfile();\n      } else {\n        this.preopenOrganizationProfile = null;\n      }\n    };\n    this.openCreateOrganization = (props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openCreateOrganization(props);\n      } else {\n        this.preopenCreateOrganization = props;\n      }\n    };\n    this.closeCreateOrganization = () => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeCreateOrganization();\n      } else {\n        this.preopenCreateOrganization = null;\n      }\n    };\n    this.openSignUp = (props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.openSignUp(props);\n      } else {\n        this.preopenSignUp = props;\n      }\n    };\n    this.closeSignUp = () => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.closeSignUp();\n      } else {\n        this.preopenSignUp = null;\n      }\n    };\n    this.mountSignIn = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountSignIn(node, props);\n      } else {\n        this.premountSignInNodes.set(node, props);\n      }\n    };\n    this.unmountSignIn = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountSignIn(node);\n      } else {\n        this.premountSignInNodes.delete(node);\n      }\n    };\n    this.__experimental_mountGoogleOneTap = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.__experimental_mountGoogleOneTap(node, props);\n      }\n    };\n    this.__experimental_unmountGoogleOneTap = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.__experimental_unmountGoogleOneTap(node);\n      }\n    };\n    this.mountSignUp = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountSignUp(node, props);\n      } else {\n        this.premountSignUpNodes.set(node, props);\n      }\n    };\n    this.unmountSignUp = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountSignUp(node);\n      } else {\n        this.premountSignUpNodes.delete(node);\n      }\n    };\n    this.mountUserProfile = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountUserProfile(node, props);\n      } else {\n        this.premountUserProfileNodes.set(node, props);\n      }\n    };\n    this.unmountUserProfile = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountUserProfile(node);\n      } else {\n        this.premountUserProfileNodes.delete(node);\n      }\n    };\n    this.mountOrganizationProfile = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationProfile(node, props);\n      } else {\n        this.premountOrganizationProfileNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationProfile = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationProfile(node);\n      } else {\n        this.premountOrganizationProfileNodes.delete(node);\n      }\n    };\n    this.mountCreateOrganization = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountCreateOrganization(node, props);\n      } else {\n        this.premountCreateOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountCreateOrganization = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountCreateOrganization(node);\n      } else {\n        this.premountCreateOrganizationNodes.delete(node);\n      }\n    };\n    this.mountOrganizationSwitcher = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationSwitcher(node, props);\n      } else {\n        this.premountOrganizationSwitcherNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationSwitcher = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationSwitcher(node);\n      } else {\n        this.premountOrganizationSwitcherNodes.delete(node);\n      }\n    };\n    this.mountOrganizationList = (node, props) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountOrganizationList(node, props);\n      } else {\n        this.premountOrganizationListNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationList = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountOrganizationList(node);\n      } else {\n        this.premountOrganizationListNodes.delete(node);\n      }\n    };\n    this.mountUserButton = (node, userButtonProps) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.mountUserButton(node, userButtonProps);\n      } else {\n        this.premountUserButtonNodes.set(node, userButtonProps);\n      }\n    };\n    this.unmountUserButton = (node) => {\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        this.clerkjs.unmountUserButton(node);\n      } else {\n        this.premountUserButtonNodes.delete(node);\n      }\n    };\n    this.addListener = (listener) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.addListener(listener);\n      };\n      if (this.clerkjs) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"addListener\", callback);\n        return () => this.premountMethodCalls.delete(\"addListener\");\n      }\n    };\n    this.navigate = (to) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.navigate(to);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"navigate\", callback);\n      }\n    };\n    this.redirectWithAuth = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectWithAuth(...args);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectWithAuth\", callback);\n        return;\n      }\n    };\n    this.redirectToSignIn = async (opts) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignIn(opts);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignIn\", callback);\n        return;\n      }\n    };\n    this.redirectToSignUp = async (opts) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignUp(opts);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignUp\", callback);\n        return;\n      }\n    };\n    this.redirectToUserProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToUserProfile();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToUserProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToAfterSignUp = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignUp();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignUp\", callback);\n      }\n    };\n    this.redirectToAfterSignIn = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignIn();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignIn\", callback);\n      }\n    };\n    this.redirectToAfterSignOut = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignOut();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignOut\", callback);\n      }\n    };\n    this.redirectToOrganizationProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToOrganizationProfile();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToOrganizationProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToCreateOrganization = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToCreateOrganization();\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToCreateOrganization\", callback);\n        return;\n      }\n    };\n    this.handleRedirectCallback = (params) => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleRedirectCallback(params);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {\n        }));\n      } else {\n        this.premountMethodCalls.set(\"handleRedirectCallback\", callback);\n      }\n    };\n    this.handleEmailLinkVerification = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleEmailLinkVerification(params);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleEmailLinkVerification\", callback);\n      }\n    };\n    this.authenticateWithMetamask = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithMetamask(params);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithMetamask\", callback);\n      }\n    };\n    this.createOrganization = async (params) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.createOrganization(params);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"createOrganization\", callback);\n      }\n    };\n    this.getOrganization = async (organizationId) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.getOrganization(organizationId);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganization\", callback);\n      }\n    };\n    this.signOut = async (signOutCallbackOrOptions, options) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.signOut(signOutCallbackOrOptions, options);\n      };\n      if (this.clerkjs && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"signOut\", callback);\n      }\n    };\n    const { Clerk = null, publishableKey } = options || {};\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _publishableKey, publishableKey);\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _proxyUrl, options == null ? void 0 : options.proxyUrl);\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _domain, options == null ? void 0 : options.domain);\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = (0,_clerk_shared_browser__WEBPACK_IMPORTED_MODULE_7__.inBrowser)() ? \"browser\" : \"server\";\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    void this.loadClerkJS();\n  }\n  get publishableKey() {\n    return (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey);\n  }\n  get loaded() {\n    return (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded);\n  }\n  static getOrCreateInstance(options) {\n    if (!(0,_clerk_shared_browser__WEBPACK_IMPORTED_MODULE_7__.inBrowser)() || !(0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance) || options.Clerk && (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance).Clerk !== options.Clerk) {\n      (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _instance, new _IsomorphicClerk(options));\n    }\n    return (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _instance);\n  }\n  static clearInstance() {\n    (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _instance, null);\n  }\n  get domain() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_8__.handleValueOrFn)((0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain), new URL(window.location.href), \"\");\n    }\n    if (typeof (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain) === \"function\") {\n      return _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _domain) || \"\";\n  }\n  get proxyUrl() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_8__.handleValueOrFn)((0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl), new URL(window.location.href), \"\");\n    }\n    if (typeof (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl) === \"function\") {\n      return _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _proxyUrl) || \"\";\n  }\n  get sdkMetadata() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.sdkMetadata) || this.options.sdkMetadata || void 0;\n  }\n  get instanceType() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.instanceType;\n  }\n  get frontendApi() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.frontendApi) || \"\";\n  }\n  get isStandardBrowser() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.isStandardBrowser) || this.options.standardBrowser || false;\n  }\n  get isSatellite() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_8__.handleValueOrFn)(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === \"function\") {\n      return _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throw(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n  async loadClerkJS() {\n    var _a;\n    if (this.mode !== \"browser\" || (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _loaded)) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      window.__clerk_publishable_key = (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey);\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n    try {\n      if (this.Clerk) {\n        let c;\n        if (isConstructor(this.Clerk)) {\n          c = new this.Clerk((0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey), {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n          await c.load(this.options);\n        } else {\n          c = this.Clerk;\n          if (!c.loaded) {\n            await c.load(this.options);\n          }\n        }\n        global.Clerk = c;\n      } else {\n        if (!global.Clerk) {\n          await (0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.loadClerkJsScript)({\n            ...this.options,\n            publishableKey: (0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _publishableKey),\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n        }\n        if (!global.Clerk) {\n          throw new Error(\"Failed to download latest ClerkJS. Contact support@clerk.com.\");\n        }\n        await global.Clerk.load(this.options);\n      }\n      if ((_a = global.Clerk) == null ? void 0 : _a.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err;\n      if (false) {} else {\n        throw err;\n      }\n      return;\n    }\n  }\n  get version() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.version;\n  }\n  get client() {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n    } else {\n      return void 0;\n    }\n  }\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return void 0;\n    }\n  }\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return void 0;\n    }\n  }\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return void 0;\n    }\n  }\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return void 0;\n    }\n  }\n  get __unstable__environment() {\n    if (this.clerkjs) {\n      return this.clerkjs.__unstable__environment;\n    } else {\n      return void 0;\n    }\n  }\n  __unstable__setEnvironment(...args) {\n    if (this.clerkjs && \"__unstable__setEnvironment\" in this.clerkjs) {\n      this.clerkjs.__unstable__setEnvironment(args);\n    } else {\n      return void 0;\n    }\n  }\n};\n_loaded = new WeakMap();\n_domain = new WeakMap();\n_proxyUrl = new WeakMap();\n_publishableKey = new WeakMap();\n_instance = new WeakMap();\n(0,_chunk_JMDSN227_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(_IsomorphicClerk, _instance, void 0);\nvar IsomorphicClerk = _IsomorphicClerk;\n\n// src/utils/deriveState.ts\nvar deriveState = (clerkLoaded, state, initialState) => {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\nvar deriveFromSsrInitialState = (initialState) => {\n  const userId = initialState.userId;\n  const user = initialState.user;\n  const sessionId = initialState.sessionId;\n  const session = initialState.session;\n  const organization = initialState.organization;\n  const orgId = initialState.orgId;\n  const orgRole = initialState.orgRole;\n  const orgPermissions = initialState.orgPermissions;\n  const orgSlug = initialState.orgSlug;\n  const actor = initialState.actor;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgPermissions,\n    orgSlug,\n    actor\n  };\n};\nvar deriveFromClientSideState = (state) => {\n  var _a;\n  const userId = state.user ? state.user.id : state.user;\n  const user = state.user;\n  const sessionId = state.session ? state.session.id : state.session;\n  const session = state.session;\n  const actor = session == null ? void 0 : session.actor;\n  const organization = state.organization;\n  const orgId = state.organization ? state.organization.id : state.organization;\n  const orgSlug = organization == null ? void 0 : organization.slug;\n  const membership = organization ? (_a = user == null ? void 0 : user.organizationMemberships) == null ? void 0 : _a.find((om) => om.organization.id === orgId) : organization;\n  const orgPermissions = membership ? membership.permissions : membership;\n  const orgRole = membership ? membership.role : membership;\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    actor\n  };\n};\n\n// src/contexts/ClerkContextProvider.tsx\nfunction ClerkContextProvider(props) {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, loaded: clerkLoaded } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_4__.useState({\n    client: clerk.client,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization\n  });\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    return clerk.addListener((e) => setState({ ...e }));\n  }, []);\n  const derivedState = deriveState(clerkLoaded, state, initialState);\n  const clerkCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => ({ value: clerk }), [clerkLoaded]);\n  const clientCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => ({ value: state.client }), [state.client]);\n  const { sessionId, session, userId, user, orgId, actor, organization, orgRole, orgSlug, orgPermissions } = derivedState;\n  const authCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    const value = { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions };\n    return { value };\n  }, [sessionId, userId, actor, orgId, orgRole, orgSlug]);\n  const userCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => ({ value: user }), [userId, user]);\n  const sessionCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => ({ value: session }), [sessionId, session]);\n  const organizationCtx = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => {\n    const value = {\n      organization\n    };\n    return { value };\n  }, [orgId, organization]);\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.IsomorphicClerkContext.Provider, { value: clerkCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.ClientContext.Provider, { value: clientCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.SessionContext.Provider, { value: sessionCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.OrganizationProvider, { ...organizationCtx.value }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthContext.Provider, { value: authCtx }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(_clerk_shared_react__WEBPACK_IMPORTED_MODULE_3__.UserContext.Provider, { value: userCtx }, children))))))\n  );\n}\nvar useLoadedIsomorphicClerk = (options) => {\n  const [loaded, setLoaded] = react__WEBPACK_IMPORTED_MODULE_4__.useState(false);\n  const isomorphicClerk = react__WEBPACK_IMPORTED_MODULE_4__.useMemo(() => IsomorphicClerk.getOrCreateInstance(options), []);\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    isomorphicClerk.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    isomorphicClerk.__unstable__updateProps({ options });\n  }, [options.localization]);\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    isomorphicClerk.addOnLoaded(() => setLoaded(true));\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_4__.useEffect(() => {\n    return () => {\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n  return { isomorphicClerk, loaded };\n};\n\n// src/contexts/ClerkProvider.tsx\nfunction ClerkProviderBase(props) {\n  const { initialState, children, ...restIsomorphicClerkOptions } = props;\n  const { publishableKey = \"\", Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n  if (!userInitialisedClerk) {\n    if (!publishableKey) {\n      _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !(0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.isPublishableKey)(publishableKey)) {\n      _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    ClerkContextProvider,\n    {\n      initialState,\n      isomorphicClerkOptions: restIsomorphicClerkOptions\n    },\n    children\n  );\n}\nvar ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", _chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\n\n// src/index.ts\n(0,_chunk_7BEDZEB2_mjs__WEBPACK_IMPORTED_MODULE_0__.setErrorThrowerOptions)({ packageName: \"@clerk/clerk-react\" });\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/browser.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/browser.mjs ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.inBrowser; },\n/* harmony export */   isBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isBrowserOnline; },\n/* harmony export */   isValidBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowserOnline; },\n/* harmony export */   userAgentIsRobot: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__.userAgentIsRobot; }\n/* harmony export */ });\n/* harmony import */ var _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-LJ4R7M7R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceMappingURL=browser.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9icm93c2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBTThCO0FBQ0E7QUFPNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvYnJvd3Nlci5tanM/MjcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpbkJyb3dzZXIsXG4gIGlzQnJvd3Nlck9ubGluZSxcbiAgaXNWYWxpZEJyb3dzZXIsXG4gIGlzVmFsaWRCcm93c2VyT25saW5lLFxuICB1c2VyQWdlbnRJc1JvYm90XG59IGZyb20gXCIuL2NodW5rLUxKNFI3TTdSLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIGluQnJvd3NlcixcbiAgaXNCcm93c2VyT25saW5lLFxuICBpc1ZhbGlkQnJvd3NlcixcbiAgaXNWYWxpZEJyb3dzZXJPbmxpbmUsXG4gIHVzZXJBZ2VudElzUm9ib3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1icm93c2VyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/browser.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: function() { return /* binding */ ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* binding */ ClerkRuntimeError; },\n/* harmony export */   EmailLinkError: function() { return /* binding */ EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* binding */ EmailLinkErrorCode; },\n/* harmony export */   buildErrorThrower: function() { return /* binding */ buildErrorThrower; },\n/* harmony export */   is4xxError: function() { return /* binding */ is4xxError; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* binding */ isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* binding */ isClerkRuntimeError; },\n/* harmony export */   isEmailLinkError: function() { return /* binding */ isEmailLinkError; },\n/* harmony export */   isKnownError: function() { return /* binding */ isKnownError; },\n/* harmony export */   isMetamaskError: function() { return /* binding */ isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* binding */ isNetworkError; },\n/* harmony export */   isPasswordPwnedError: function() { return /* binding */ isPasswordPwnedError; },\n/* harmony export */   isUnauthorizedError: function() { return /* binding */ isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* binding */ isUserLockedError; },\n/* harmony export */   parseError: function() { return /* binding */ parseError; },\n/* harmony export */   parseErrors: function() { return /* binding */ parseErrors; }\n/* harmony export */ });\n// src/error.ts\nfunction isUnauthorizedError(e) {\n  var _a, _b;\n  const status = e == null ? void 0 : e.status;\n  const code = (_b = (_a = e == null ? void 0 : e.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code;\n  return code === \"authentication_invalid\" && status === 401;\n}\nfunction is4xxError(e) {\n  const status = e == null ? void 0 : e.status;\n  return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n  const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n  return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n  return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"user_locked\";\n}\nfunction isPasswordPwnedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"form_password_pwned\";\n}\nfunction parseErrors(data = []) {\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  var _a, _b, _c, _d, _e;\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: (_a = error == null ? void 0 : error.meta) == null ? void 0 : _a.param_name,\n      sessionId: (_b = error == null ? void 0 : error.meta) == null ? void 0 : _b.session_id,\n      emailAddresses: (_c = error == null ? void 0 : error.meta) == null ? void 0 : _c.email_addresses,\n      identifiers: (_d = error == null ? void 0 : error.meta) == null ? void 0 : _d.identifiers,\n      zxcvbn: (_e = error == null ? void 0 : error.meta) == null ? void 0 : _e.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n  constructor(message, { data, status, clerkTraceId }) {\n    super(message);\n    this.toString = () => {\n      let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map(\n        (e) => JSON.stringify(e)\n      )}`;\n      if (this.clerkTraceId) {\n        message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n      }\n      return message;\n    };\n    Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n  constructor(message, { code }) {\n    super(message);\n    /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */\n    this.toString = () => {\n      return `[${this.name}]\nMessage:${this.message}`;\n    };\n    Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n    this.code = code;\n    this.message = message;\n    this.clerkRuntimeError = true;\n  }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n  constructor(code) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, _EmailLinkError.prototype);\n  }\n};\nfunction isEmailLinkError(err) {\n  return err instanceof EmailLinkError;\n}\nvar EmailLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\"\n};\nvar DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n});\nfunction buildErrorThrower({ packageName, customMessages }) {\n  let pkg = packageName;\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages\n  };\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || \"\").toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n    return `${pkg}: ${msg}`;\n  }\n  return {\n    setPackageName({ packageName: packageName2 }) {\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages({ customMessages: customMessages2 }) {\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n    throwMissingSecretKeyError() {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n    throwMissingClerkProviderError(params) {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n    throw(message) {\n      throw new Error(buildMessage(message));\n    }\n  };\n}\n\n\n//# sourceMappingURL=chunk-46BSODPS.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00NkJTT0RQUy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsVUFBVSxFQUFFLE9BQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0QkFBNEI7QUFDckQ7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDLFVBQVU7QUFDVixTQUFTO0FBQ1QscUJBQXFCO0FBQ3JCO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFVBQVU7QUFDM0IsVUFBVSxhQUFhO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEtBQTBLLEtBQUs7QUFDL0ssdUxBQXVMLEtBQUs7QUFDNUw7QUFDQTtBQUNBLDJCQUEyQixTQUFTO0FBQ3BDLENBQUM7QUFDRCw2QkFBNkIsNkJBQTZCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLElBQUksSUFBSSxXQUFXO0FBQ25DO0FBQ0E7QUFDQSwyQ0FBMkMsa0JBQWtCO0FBQzdEO0FBQ0E7QUFDQSwyQkFBMkIsRUFBRSxXQUFXO0FBQ3hDO0FBQ0EsY0FBYyxJQUFJLElBQUksSUFBSTtBQUMxQjtBQUNBO0FBQ0EscUJBQXFCLDJCQUEyQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxrQkFBa0IsaUNBQWlDO0FBQ25ELG1EQUFtRDtBQUNuRDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFvQkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNDZCU09EUFMubWpzPzQzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2Vycm9yLnRzXG5mdW5jdGlvbiBpc1VuYXV0aG9yaXplZEVycm9yKGUpIHtcbiAgdmFyIF9hLCBfYjtcbiAgY29uc3Qgc3RhdHVzID0gZSA9PSBudWxsID8gdm9pZCAwIDogZS5zdGF0dXM7XG4gIGNvbnN0IGNvZGUgPSAoX2IgPSAoX2EgPSBlID09IG51bGwgPyB2b2lkIDAgOiBlLmVycm9ycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY29kZTtcbiAgcmV0dXJuIGNvZGUgPT09IFwiYXV0aGVudGljYXRpb25faW52YWxpZFwiICYmIHN0YXR1cyA9PT0gNDAxO1xufVxuZnVuY3Rpb24gaXM0eHhFcnJvcihlKSB7XG4gIGNvbnN0IHN0YXR1cyA9IGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUuc3RhdHVzO1xuICByZXR1cm4gISFzdGF0dXMgJiYgc3RhdHVzID49IDQwMCAmJiBzdGF0dXMgPCA1MDA7XG59XG5mdW5jdGlvbiBpc05ldHdvcmtFcnJvcihlKSB7XG4gIGNvbnN0IG1lc3NhZ2UgPSAoYCR7ZS5tZXNzYWdlfSR7ZS5uYW1lfWAgfHwgXCJcIikudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMrL2csIFwiXCIpO1xuICByZXR1cm4gbWVzc2FnZS5pbmNsdWRlcyhcIm5ldHdvcmtlcnJvclwiKTtcbn1cbmZ1bmN0aW9uIGlzS25vd25FcnJvcihlcnJvcikge1xuICByZXR1cm4gaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IoZXJyb3IpIHx8IGlzTWV0YW1hc2tFcnJvcihlcnJvcikgfHwgaXNDbGVya1J1bnRpbWVFcnJvcihlcnJvcik7XG59XG5mdW5jdGlvbiBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcihlcnIpIHtcbiAgcmV0dXJuIFwiY2xlcmtFcnJvclwiIGluIGVycjtcbn1cbmZ1bmN0aW9uIGlzQ2xlcmtSdW50aW1lRXJyb3IoZXJyKSB7XG4gIHJldHVybiBcImNsZXJrUnVudGltZUVycm9yXCIgaW4gZXJyO1xufVxuZnVuY3Rpb24gaXNNZXRhbWFza0Vycm9yKGVycikge1xuICByZXR1cm4gXCJjb2RlXCIgaW4gZXJyICYmIFs0MDAxLCAzMjYwMiwgMzI2MDNdLmluY2x1ZGVzKGVyci5jb2RlKSAmJiBcIm1lc3NhZ2VcIiBpbiBlcnI7XG59XG5mdW5jdGlvbiBpc1VzZXJMb2NrZWRFcnJvcihlcnIpIHtcbiAgdmFyIF9hLCBfYjtcbiAgcmV0dXJuIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yKGVycikgJiYgKChfYiA9IChfYSA9IGVyci5lcnJvcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNvZGUpID09PSBcInVzZXJfbG9ja2VkXCI7XG59XG5mdW5jdGlvbiBpc1Bhc3N3b3JkUHduZWRFcnJvcihlcnIpIHtcbiAgdmFyIF9hLCBfYjtcbiAgcmV0dXJuIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yKGVycikgJiYgKChfYiA9IChfYSA9IGVyci5lcnJvcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYVswXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNvZGUpID09PSBcImZvcm1fcGFzc3dvcmRfcHduZWRcIjtcbn1cbmZ1bmN0aW9uIHBhcnNlRXJyb3JzKGRhdGEgPSBbXSkge1xuICByZXR1cm4gZGF0YS5sZW5ndGggPiAwID8gZGF0YS5tYXAocGFyc2VFcnJvcikgOiBbXTtcbn1cbmZ1bmN0aW9uIHBhcnNlRXJyb3IoZXJyb3IpIHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgcmV0dXJuIHtcbiAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgbG9uZ01lc3NhZ2U6IGVycm9yLmxvbmdfbWVzc2FnZSxcbiAgICBtZXRhOiB7XG4gICAgICBwYXJhbU5hbWU6IChfYSA9IGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5tZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2EucGFyYW1fbmFtZSxcbiAgICAgIHNlc3Npb25JZDogKF9iID0gZXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGVycm9yLm1ldGEpID09IG51bGwgPyB2b2lkIDAgOiBfYi5zZXNzaW9uX2lkLFxuICAgICAgZW1haWxBZGRyZXNzZXM6IChfYyA9IGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5tZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2MuZW1haWxfYWRkcmVzc2VzLFxuICAgICAgaWRlbnRpZmllcnM6IChfZCA9IGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5tZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2QuaWRlbnRpZmllcnMsXG4gICAgICB6eGN2Ym46IChfZSA9IGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5tZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2UuenhjdmJuXG4gICAgfVxuICB9O1xufVxudmFyIENsZXJrQVBJUmVzcG9uc2VFcnJvciA9IGNsYXNzIF9DbGVya0FQSVJlc3BvbnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHsgZGF0YSwgc3RhdHVzLCBjbGVya1RyYWNlSWQgfSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMudG9TdHJpbmcgPSAoKSA9PiB7XG4gICAgICBsZXQgbWVzc2FnZSA9IGBbJHt0aGlzLm5hbWV9XVxuTWVzc2FnZToke3RoaXMubWVzc2FnZX1cblN0YXR1czoke3RoaXMuc3RhdHVzfVxuU2VyaWFsaXplZCBlcnJvcnM6ICR7dGhpcy5lcnJvcnMubWFwKFxuICAgICAgICAoZSkgPT4gSlNPTi5zdHJpbmdpZnkoZSlcbiAgICAgICl9YDtcbiAgICAgIGlmICh0aGlzLmNsZXJrVHJhY2VJZCkge1xuICAgICAgICBtZXNzYWdlICs9IGBcbkNsZXJrIFRyYWNlIElEOiAke3RoaXMuY2xlcmtUcmFjZUlkfWA7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9O1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBfQ2xlcmtBUElSZXNwb25zZUVycm9yLnByb3RvdHlwZSk7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLmNsZXJrVHJhY2VJZCA9IGNsZXJrVHJhY2VJZDtcbiAgICB0aGlzLmNsZXJrRXJyb3IgPSB0cnVlO1xuICAgIHRoaXMuZXJyb3JzID0gcGFyc2VFcnJvcnMoZGF0YSk7XG4gIH1cbn07XG52YXIgQ2xlcmtSdW50aW1lRXJyb3IgPSBjbGFzcyBfQ2xlcmtSdW50aW1lRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHsgY29kZSB9KSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgZXJyb3IuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBBIGZvcm1hdHRlZCBzdHJpbmcgd2l0aCB0aGUgZXJyb3IgbmFtZSBhbmQgbWVzc2FnZS5cbiAgICAgKiBAbWVtYmVyb2YgQ2xlcmtSdW50aW1lRXJyb3JcbiAgICAgKi9cbiAgICB0aGlzLnRvU3RyaW5nID0gKCkgPT4ge1xuICAgICAgcmV0dXJuIGBbJHt0aGlzLm5hbWV9XVxuTWVzc2FnZToke3RoaXMubWVzc2FnZX1gO1xuICAgIH07XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIF9DbGVya1J1bnRpbWVFcnJvci5wcm90b3R5cGUpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICB0aGlzLmNsZXJrUnVudGltZUVycm9yID0gdHJ1ZTtcbiAgfVxufTtcbnZhciBFbWFpbExpbmtFcnJvciA9IGNsYXNzIF9FbWFpbExpbmtFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoY29kZSkge1xuICAgIHN1cGVyKGNvZGUpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIF9FbWFpbExpbmtFcnJvci5wcm90b3R5cGUpO1xuICB9XG59O1xuZnVuY3Rpb24gaXNFbWFpbExpbmtFcnJvcihlcnIpIHtcbiAgcmV0dXJuIGVyciBpbnN0YW5jZW9mIEVtYWlsTGlua0Vycm9yO1xufVxudmFyIEVtYWlsTGlua0Vycm9yQ29kZSA9IHtcbiAgRXhwaXJlZDogXCJleHBpcmVkXCIsXG4gIEZhaWxlZDogXCJmYWlsZWRcIlxufTtcbnZhciBEZWZhdWx0TWVzc2FnZXMgPSBPYmplY3QuZnJlZXplKHtcbiAgSW52YWxpZFByb3h5VXJsRXJyb3JNZXNzYWdlOiBgVGhlIHByb3h5VXJsIHBhc3NlZCB0byBDbGVyayBpcyBpbnZhbGlkLiBUaGUgZXhwZWN0ZWQgdmFsdWUgZm9yIHByb3h5VXJsIGlzIGFuIGFic29sdXRlIFVSTCBvciBhIHJlbGF0aXZlIHBhdGggd2l0aCBhIGxlYWRpbmcgJy8nLiAoa2V5PXt7dXJsfX0pYCxcbiAgSW52YWxpZFB1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlOiBgVGhlIHB1Ymxpc2hhYmxlS2V5IHBhc3NlZCB0byBDbGVyayBpcyBpbnZhbGlkLiBZb3UgY2FuIGdldCB5b3VyIFB1Ymxpc2hhYmxlIGtleSBhdCBodHRwczovL2Rhc2hib2FyZC5jbGVyay5jb20vbGFzdC1hY3RpdmU/cGF0aD1hcGkta2V5cy4gKGtleT17e2tleX19KWAsXG4gIE1pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yTWVzc2FnZTogYE1pc3NpbmcgcHVibGlzaGFibGVLZXkuIFlvdSBjYW4gZ2V0IHlvdXIga2V5IGF0IGh0dHBzOi8vZGFzaGJvYXJkLmNsZXJrLmNvbS9sYXN0LWFjdGl2ZT9wYXRoPWFwaS1rZXlzLmAsXG4gIE1pc3NpbmdTZWNyZXRLZXlFcnJvck1lc3NhZ2U6IGBNaXNzaW5nIHNlY3JldEtleS4gWW91IGNhbiBnZXQgeW91ciBrZXkgYXQgaHR0cHM6Ly9kYXNoYm9hcmQuY2xlcmsuY29tL2xhc3QtYWN0aXZlP3BhdGg9YXBpLWtleXMuYCxcbiAgTWlzc2luZ0NsZXJrUHJvdmlkZXI6IGB7e3NvdXJjZX19IGNhbiBvbmx5IGJlIHVzZWQgd2l0aGluIHRoZSA8Q2xlcmtQcm92aWRlciAvPiBjb21wb25lbnQuIExlYXJuIG1vcmU6IGh0dHBzOi8vY2xlcmsuY29tL2RvY3MvY29tcG9uZW50cy9jbGVyay1wcm92aWRlcmBcbn0pO1xuZnVuY3Rpb24gYnVpbGRFcnJvclRocm93ZXIoeyBwYWNrYWdlTmFtZSwgY3VzdG9tTWVzc2FnZXMgfSkge1xuICBsZXQgcGtnID0gcGFja2FnZU5hbWU7XG4gIGNvbnN0IG1lc3NhZ2VzID0ge1xuICAgIC4uLkRlZmF1bHRNZXNzYWdlcyxcbiAgICAuLi5jdXN0b21NZXNzYWdlc1xuICB9O1xuICBmdW5jdGlvbiBidWlsZE1lc3NhZ2UocmF3TWVzc2FnZSwgcmVwbGFjZW1lbnRzKSB7XG4gICAgaWYgKCFyZXBsYWNlbWVudHMpIHtcbiAgICAgIHJldHVybiBgJHtwa2d9OiAke3Jhd01lc3NhZ2V9YDtcbiAgICB9XG4gICAgbGV0IG1zZyA9IHJhd01lc3NhZ2U7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHJhd01lc3NhZ2UubWF0Y2hBbGwoL3t7KFthLXpBLVowLTktX10rKX19L2cpO1xuICAgIGZvciAoY29uc3QgbWF0Y2ggb2YgbWF0Y2hlcykge1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnQgPSAocmVwbGFjZW1lbnRzW21hdGNoWzFdXSB8fCBcIlwiKS50b1N0cmluZygpO1xuICAgICAgbXNnID0gbXNnLnJlcGxhY2UoYHt7JHttYXRjaFsxXX19fWAsIHJlcGxhY2VtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIGAke3BrZ306ICR7bXNnfWA7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzZXRQYWNrYWdlTmFtZSh7IHBhY2thZ2VOYW1lOiBwYWNrYWdlTmFtZTIgfSkge1xuICAgICAgaWYgKHR5cGVvZiBwYWNrYWdlTmFtZTIgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcGtnID0gcGFja2FnZU5hbWUyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBzZXRNZXNzYWdlcyh7IGN1c3RvbU1lc3NhZ2VzOiBjdXN0b21NZXNzYWdlczIgfSkge1xuICAgICAgT2JqZWN0LmFzc2lnbihtZXNzYWdlcywgY3VzdG9tTWVzc2FnZXMyIHx8IHt9KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgdGhyb3dJbnZhbGlkUHVibGlzaGFibGVLZXlFcnJvcihwYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihidWlsZE1lc3NhZ2UobWVzc2FnZXMuSW52YWxpZFB1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlLCBwYXJhbXMpKTtcbiAgICB9LFxuICAgIHRocm93SW52YWxpZFByb3h5VXJsKHBhcmFtcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGJ1aWxkTWVzc2FnZShtZXNzYWdlcy5JbnZhbGlkUHJveHlVcmxFcnJvck1lc3NhZ2UsIHBhcmFtcykpO1xuICAgIH0sXG4gICAgdGhyb3dNaXNzaW5nUHVibGlzaGFibGVLZXlFcnJvcigpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihidWlsZE1lc3NhZ2UobWVzc2FnZXMuTWlzc2luZ1B1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlKSk7XG4gICAgfSxcbiAgICB0aHJvd01pc3NpbmdTZWNyZXRLZXlFcnJvcigpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihidWlsZE1lc3NhZ2UobWVzc2FnZXMuTWlzc2luZ1NlY3JldEtleUVycm9yTWVzc2FnZSkpO1xuICAgIH0sXG4gICAgdGhyb3dNaXNzaW5nQ2xlcmtQcm92aWRlckVycm9yKHBhcmFtcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGJ1aWxkTWVzc2FnZShtZXNzYWdlcy5NaXNzaW5nQ2xlcmtQcm92aWRlciwgcGFyYW1zKSk7XG4gICAgfSxcbiAgICB0aHJvdyhtZXNzYWdlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYnVpbGRNZXNzYWdlKG1lc3NhZ2UpKTtcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB7XG4gIGlzVW5hdXRob3JpemVkRXJyb3IsXG4gIGlzNHh4RXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzVXNlckxvY2tlZEVycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgcGFyc2VFcnJvcnMsXG4gIHBhcnNlRXJyb3IsXG4gIENsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgQ2xlcmtSdW50aW1lRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIGJ1aWxkRXJyb3JUaHJvd2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNDZCU09EUFMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: function() { return /* binding */ callWithRetry; }\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n  return new Promise((res) => setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n  try {\n    return await fn();\n  } catch (e) {\n    if (attempt >= maxAttempts) {\n      throw e;\n    }\n    await wait(2 ** attempt * 100);\n    return callWithRetry(fn, attempt + 1, maxAttempts);\n  }\n}\n\n\n//# sourceMappingURL=chunk-4PW5MDZA.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00UFc1TURaQS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNFBXNU1EWkEubWpzP2Q0YzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NhbGxXaXRoUmV0cnkudHNcbmZ1bmN0aW9uIHdhaXQobXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHNldFRpbWVvdXQocmVzLCBtcykpO1xufVxudmFyIE1BWF9OVU1CRVJfT0ZfUkVUUklFUyA9IDU7XG5hc3luYyBmdW5jdGlvbiBjYWxsV2l0aFJldHJ5KGZuLCBhdHRlbXB0ID0gMSwgbWF4QXR0ZW1wdHMgPSBNQVhfTlVNQkVSX09GX1JFVFJJRVMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChhdHRlbXB0ID49IG1heEF0dGVtcHRzKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICBhd2FpdCB3YWl0KDIgKiogYXR0ZW1wdCAqIDEwMCk7XG4gICAgcmV0dXJuIGNhbGxXaXRoUmV0cnkoZm4sIGF0dGVtcHQgKyAxLCBtYXhBdHRlbXB0cyk7XG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgY2FsbFdpdGhSZXRyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTRQVzVNRFpBLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extension: function() { return /* binding */ extension; },\n/* harmony export */   readJSONFile: function() { return /* binding */ readJSONFile; }\n/* harmony export */ });\n// src/file.ts\nfunction readJSONFile(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", function() {\n      const result = JSON.parse(reader.result);\n      resolve(result);\n    });\n    reader.addEventListener(\"error\", reject);\n    reader.readAsText(file);\n  });\n}\nvar MimeTypeToExtensionMap = Object.freeze({\n  \"image/png\": \"png\",\n  \"image/jpeg\": \"jpg\",\n  \"image/gif\": \"gif\",\n  \"image/webp\": \"webp\",\n  \"image/x-icon\": \"ico\",\n  \"image/vnd.microsoft.icon\": \"ico\"\n});\nvar extension = (mimeType) => {\n  return MimeTypeToExtensionMap[mimeType];\n};\n\n\n//# sourceMappingURL=chunk-5JU2E5TY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay01SlUyRTVUWS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTVKVTJFNVRZLm1qcz83MjlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9maWxlLnRzXG5mdW5jdGlvbiByZWFkSlNPTkZpbGUoZmlsZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZShyZWFkZXIucmVzdWx0KTtcbiAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICB9KTtcbiAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIHJlamVjdCk7XG4gICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7XG4gIH0pO1xufVxudmFyIE1pbWVUeXBlVG9FeHRlbnNpb25NYXAgPSBPYmplY3QuZnJlZXplKHtcbiAgXCJpbWFnZS9wbmdcIjogXCJwbmdcIixcbiAgXCJpbWFnZS9qcGVnXCI6IFwianBnXCIsXG4gIFwiaW1hZ2UvZ2lmXCI6IFwiZ2lmXCIsXG4gIFwiaW1hZ2Uvd2VicFwiOiBcIndlYnBcIixcbiAgXCJpbWFnZS94LWljb25cIjogXCJpY29cIixcbiAgXCJpbWFnZS92bmQubWljcm9zb2Z0Lmljb25cIjogXCJpY29cIlxufSk7XG52YXIgZXh0ZW5zaW9uID0gKG1pbWVUeXBlKSA9PiB7XG4gIHJldHVybiBNaW1lVHlwZVRvRXh0ZW5zaW9uTWFwW21pbWVUeXBlXTtcbn07XG5cbmV4cG9ydCB7XG4gIHJlYWRKU09ORmlsZSxcbiAgZXh0ZW5zaW9uXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNUpVMkU1VFkubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: function() { return /* binding */ isHttpOrHttps; },\n/* harmony export */   isProxyUrlRelative: function() { return /* binding */ isProxyUrlRelative; },\n/* harmony export */   isValidProxyUrl: function() { return /* binding */ isValidProxyUrl; },\n/* harmony export */   proxyUrlToAbsoluteURL: function() { return /* binding */ proxyUrlToAbsoluteURL; }\n/* harmony export */ });\n// src/proxy.ts\nfunction isValidProxyUrl(key) {\n  if (!key) {\n    return true;\n  }\n  return isHttpOrHttps(key) || isProxyUrlRelative(key);\n}\nfunction isHttpOrHttps(key) {\n  return /^http(s)?:\\/\\//.test(key || \"\");\n}\nfunction isProxyUrlRelative(key) {\n  return key.startsWith(\"/\");\n}\nfunction proxyUrlToAbsoluteURL(url) {\n  if (!url) {\n    return \"\";\n  }\n  return isProxyUrlRelative(url) ? new URL(url, window.location.origin).toString() : url;\n}\n\n\n//# sourceMappingURL=chunk-6NDGN2IU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay02TkRHTjJJVS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTZOREdOMklVLm1qcz9mODA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wcm94eS50c1xuZnVuY3Rpb24gaXNWYWxpZFByb3h5VXJsKGtleSkge1xuICBpZiAoIWtleSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBpc0h0dHBPckh0dHBzKGtleSkgfHwgaXNQcm94eVVybFJlbGF0aXZlKGtleSk7XG59XG5mdW5jdGlvbiBpc0h0dHBPckh0dHBzKGtleSkge1xuICByZXR1cm4gL15odHRwKHMpPzpcXC9cXC8vLnRlc3Qoa2V5IHx8IFwiXCIpO1xufVxuZnVuY3Rpb24gaXNQcm94eVVybFJlbGF0aXZlKGtleSkge1xuICByZXR1cm4ga2V5LnN0YXJ0c1dpdGgoXCIvXCIpO1xufVxuZnVuY3Rpb24gcHJveHlVcmxUb0Fic29sdXRlVVJMKHVybCkge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIHJldHVybiBpc1Byb3h5VXJsUmVsYXRpdmUodXJsKSA/IG5ldyBVUkwodXJsLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luKS50b1N0cmluZygpIDogdXJsO1xufVxuXG5leHBvcnQge1xuICBpc1ZhbGlkUHJveHlVcmwsXG4gIGlzSHR0cE9ySHR0cHMsXG4gIGlzUHJveHlVcmxSZWxhdGl2ZSxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNk5ER04ySVUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-AOO6TJNL.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-AOO6TJNL.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadScript: function() { return /* binding */ loadScript; }\n/* harmony export */ });\n// src/loadScript.ts\nvar NO_DOCUMENT_ERROR = \"loadScript cannot be called when document does not exist\";\nvar NO_SRC_ERROR = \"loadScript cannot be called without a src\";\nasync function loadScript(src = \"\", opts) {\n  const { async, defer, beforeLoad, crossOrigin } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n    const script = document.createElement(\"script\");\n    crossOrigin && script.setAttribute(\"crossorigin\", crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n    script.addEventListener(\"load\", () => {\n      script.remove();\n      resolve(script);\n    });\n    script.addEventListener(\"error\", () => {\n      script.remove();\n      reject();\n    });\n    script.src = src;\n    beforeLoad == null ? void 0 : beforeLoad(script);\n    document.body.appendChild(script);\n  });\n}\n\n\n//# sourceMappingURL=chunk-AOO6TJNL.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1BT082VEpOTC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3Q0FBd0M7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUFPTzZUSk5MLm1qcz82NGQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9sb2FkU2NyaXB0LnRzXG52YXIgTk9fRE9DVU1FTlRfRVJST1IgPSBcImxvYWRTY3JpcHQgY2Fubm90IGJlIGNhbGxlZCB3aGVuIGRvY3VtZW50IGRvZXMgbm90IGV4aXN0XCI7XG52YXIgTk9fU1JDX0VSUk9SID0gXCJsb2FkU2NyaXB0IGNhbm5vdCBiZSBjYWxsZWQgd2l0aG91dCBhIHNyY1wiO1xuYXN5bmMgZnVuY3Rpb24gbG9hZFNjcmlwdChzcmMgPSBcIlwiLCBvcHRzKSB7XG4gIGNvbnN0IHsgYXN5bmMsIGRlZmVyLCBiZWZvcmVMb2FkLCBjcm9zc09yaWdpbiB9ID0gb3B0cyB8fCB7fTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBpZiAoIXNyYykge1xuICAgICAgcmVqZWN0KE5PX1NSQ19FUlJPUik7XG4gICAgfVxuICAgIGlmICghZG9jdW1lbnQgfHwgIWRvY3VtZW50LmJvZHkpIHtcbiAgICAgIHJlamVjdChOT19ET0NVTUVOVF9FUlJPUik7XG4gICAgfVxuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgY3Jvc3NPcmlnaW4gJiYgc2NyaXB0LnNldEF0dHJpYnV0ZShcImNyb3Nzb3JpZ2luXCIsIGNyb3NzT3JpZ2luKTtcbiAgICBzY3JpcHQuYXN5bmMgPSBhc3luYyB8fCBmYWxzZTtcbiAgICBzY3JpcHQuZGVmZXIgPSBkZWZlciB8fCBmYWxzZTtcbiAgICBzY3JpcHQuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4ge1xuICAgICAgc2NyaXB0LnJlbW92ZSgpO1xuICAgICAgcmVzb2x2ZShzY3JpcHQpO1xuICAgIH0pO1xuICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgKCkgPT4ge1xuICAgICAgc2NyaXB0LnJlbW92ZSgpO1xuICAgICAgcmVqZWN0KCk7XG4gICAgfSk7XG4gICAgc2NyaXB0LnNyYyA9IHNyYztcbiAgICBiZWZvcmVMb2FkID09IG51bGwgPyB2b2lkIDAgOiBiZWZvcmVMb2FkKHNjcmlwdCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICB9KTtcbn1cblxuZXhwb3J0IHtcbiAgbG9hZFNjcmlwdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUFPTzZUSk5MLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-AOO6TJNL.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyFunctionToObj: function() { return /* binding */ applyFunctionToObj; },\n/* harmony export */   filterProps: function() { return /* binding */ filterProps; },\n/* harmony export */   removeUndefined: function() { return /* binding */ removeUndefined; },\n/* harmony export */   without: function() { return /* binding */ without; }\n/* harmony export */ });\n// src/object.ts\nvar without = (obj, ...props) => {\n  const copy = { ...obj };\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\nvar removeUndefined = (obj) => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0 && value !== null) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n};\nvar applyFunctionToObj = (obj, fn) => {\n  const result = {};\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\nvar filterProps = (obj, filter) => {\n  const result = {};\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\n\n\n//# sourceMappingURL=chunk-CFXQSUF6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1DRlhRU1VGNi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBT0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQ0ZYUVNVRjYubWpzPzQxOTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL29iamVjdC50c1xudmFyIHdpdGhvdXQgPSAob2JqLCAuLi5wcm9wcykgPT4ge1xuICBjb25zdCBjb3B5ID0geyAuLi5vYmogfTtcbiAgZm9yIChjb25zdCBwcm9wIG9mIHByb3BzKSB7XG4gICAgZGVsZXRlIGNvcHlbcHJvcF07XG4gIH1cbiAgcmV0dXJuIGNvcHk7XG59O1xudmFyIHJlbW92ZVVuZGVmaW5lZCA9IChvYmopID0+IHtcbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKG9iaikucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgIGlmICh2YWx1ZSAhPT0gdm9pZCAwICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59O1xudmFyIGFwcGx5RnVuY3Rpb25Ub09iaiA9IChvYmosIGZuKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICByZXN1bHRba2V5XSA9IGZuKG9ialtrZXldLCBrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xudmFyIGZpbHRlclByb3BzID0gKG9iaiwgZmlsdGVyKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICBpZiAob2JqW2tleV0gJiYgZmlsdGVyKG9ialtrZXldKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBvYmpba2V5XTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmV4cG9ydCB7XG4gIHdpdGhvdXQsXG4gIHJlbW92ZVVuZGVmaW5lZCxcbiAgYXBwbHlGdW5jdGlvblRvT2JqLFxuICBmaWx0ZXJQcm9wc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUNGWFFTVUY2Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: function() { return /* binding */ camelToSnake; },\n/* harmony export */   deepCamelToSnake: function() { return /* binding */ deepCamelToSnake; },\n/* harmony export */   deepSnakeToCamel: function() { return /* binding */ deepSnakeToCamel; },\n/* harmony export */   getNonUndefinedValues: function() { return /* binding */ getNonUndefinedValues; },\n/* harmony export */   isIPV4Address: function() { return /* binding */ isIPV4Address; },\n/* harmony export */   isTruthy: function() { return /* binding */ isTruthy; },\n/* harmony export */   snakeToCamel: function() { return /* binding */ snakeToCamel; },\n/* harmony export */   titleize: function() { return /* binding */ titleize; },\n/* harmony export */   toSentence: function() { return /* binding */ toSentence; }\n/* harmony export */ });\n// src/underscore.ts\nvar toSentence = (items) => {\n  if (items.length == 0) {\n    return \"\";\n  }\n  if (items.length == 1) {\n    return items[0];\n  }\n  let sentence = items.slice(0, -1).join(\", \");\n  sentence += `, or ${items.slice(-1)}`;\n  return sentence;\n};\nvar IP_V4_ADDRESS_REGEX = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nfunction isIPV4Address(str) {\n  return IP_V4_ADDRESS_REGEX.test(str || \"\");\n}\nfunction titleize(str) {\n  const s = str || \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction snakeToCamel(str) {\n  return str ? str.replace(/([-_][a-z])/g, (match) => match.toUpperCase().replace(/-|_/, \"\")) : \"\";\n}\nfunction camelToSnake(str) {\n  return str ? str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`) : \"\";\n}\nvar createDeepObjectTransformer = (transform) => {\n  const deepTransform = (obj) => {\n    if (!obj) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map((el) => {\n        if (typeof el === \"object\" || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n    const copy = { ...obj };\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === \"object\") {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n  return deepTransform;\n};\nvar deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\nvar deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\nfunction isTruthy(value) {\n  if (typeof value === `boolean`)\n    return value;\n  if (value === void 0 || value === null)\n    return false;\n  if (typeof value === `string`) {\n    if (value.toLowerCase() === `true`)\n      return true;\n    if (value.toLowerCase() === `false`)\n      return false;\n  }\n  const number = parseInt(value, 10);\n  if (isNaN(number))\n    return false;\n  if (number > 0)\n    return true;\n  return false;\n}\nfunction getNonUndefinedValues(obj) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n\n//# sourceMappingURL=chunk-E6T5KUVH.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1FNlQ1S1VWSC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGdCQUFnQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHFCQUFxQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsSUFBSTtBQUNQOztBQVlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUU2VDVLVVZILm1qcz84NjViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91bmRlcnNjb3JlLnRzXG52YXIgdG9TZW50ZW5jZSA9IChpdGVtcykgPT4ge1xuICBpZiAoaXRlbXMubGVuZ3RoID09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICBpZiAoaXRlbXMubGVuZ3RoID09IDEpIHtcbiAgICByZXR1cm4gaXRlbXNbMF07XG4gIH1cbiAgbGV0IHNlbnRlbmNlID0gaXRlbXMuc2xpY2UoMCwgLTEpLmpvaW4oXCIsIFwiKTtcbiAgc2VudGVuY2UgKz0gYCwgb3IgJHtpdGVtcy5zbGljZSgtMSl9YDtcbiAgcmV0dXJuIHNlbnRlbmNlO1xufTtcbnZhciBJUF9WNF9BRERSRVNTX1JFR0VYID0gL14oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSQvO1xuZnVuY3Rpb24gaXNJUFY0QWRkcmVzcyhzdHIpIHtcbiAgcmV0dXJuIElQX1Y0X0FERFJFU1NfUkVHRVgudGVzdChzdHIgfHwgXCJcIik7XG59XG5mdW5jdGlvbiB0aXRsZWl6ZShzdHIpIHtcbiAgY29uc3QgcyA9IHN0ciB8fCBcIlwiO1xuICByZXR1cm4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSk7XG59XG5mdW5jdGlvbiBzbmFrZVRvQ2FtZWwoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvKFstX11bYS16XSkvZywgKG1hdGNoKSA9PiBtYXRjaC50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoLy18Xy8sIFwiXCIpKSA6IFwiXCI7XG59XG5mdW5jdGlvbiBjYW1lbFRvU25ha2Uoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvW0EtWl0vZywgKGxldHRlcikgPT4gYF8ke2xldHRlci50b0xvd2VyQ2FzZSgpfWApIDogXCJcIjtcbn1cbnZhciBjcmVhdGVEZWVwT2JqZWN0VHJhbnNmb3JtZXIgPSAodHJhbnNmb3JtKSA9PiB7XG4gIGNvbnN0IGRlZXBUcmFuc2Zvcm0gPSAob2JqKSA9PiB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmoubWFwKChlbCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGVsID09PSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgICAgcmV0dXJuIGRlZXBUcmFuc2Zvcm0oZWwpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBjb3B5ID0geyAuLi5vYmogfTtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoY29weSk7XG4gICAgZm9yIChjb25zdCBvbGROYW1lIG9mIGtleXMpIHtcbiAgICAgIGNvbnN0IG5ld05hbWUgPSB0cmFuc2Zvcm0ob2xkTmFtZS50b1N0cmluZygpKTtcbiAgICAgIGlmIChuZXdOYW1lICE9PSBvbGROYW1lKSB7XG4gICAgICAgIGNvcHlbbmV3TmFtZV0gPSBjb3B5W29sZE5hbWVdO1xuICAgICAgICBkZWxldGUgY29weVtvbGROYW1lXTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgY29weVtuZXdOYW1lXSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBjb3B5W25ld05hbWVdID0gZGVlcFRyYW5zZm9ybShjb3B5W25ld05hbWVdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvcHk7XG4gIH07XG4gIHJldHVybiBkZWVwVHJhbnNmb3JtO1xufTtcbnZhciBkZWVwQ2FtZWxUb1NuYWtlID0gY3JlYXRlRGVlcE9iamVjdFRyYW5zZm9ybWVyKGNhbWVsVG9TbmFrZSk7XG52YXIgZGVlcFNuYWtlVG9DYW1lbCA9IGNyZWF0ZURlZXBPYmplY3RUcmFuc2Zvcm1lcihzbmFrZVRvQ2FtZWwpO1xuZnVuY3Rpb24gaXNUcnV0aHkodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gYGJvb2xlYW5gKVxuICAgIHJldHVybiB2YWx1ZTtcbiAgaWYgKHZhbHVlID09PSB2b2lkIDAgfHwgdmFsdWUgPT09IG51bGwpXG4gICAgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBgc3RyaW5nYCkge1xuICAgIGlmICh2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSBgdHJ1ZWApXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAodmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gYGZhbHNlYClcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCBudW1iZXIgPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuICBpZiAoaXNOYU4obnVtYmVyKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIGlmIChudW1iZXIgPiAwKVxuICAgIHJldHVybiB0cnVlO1xuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBnZXROb25VbmRlZmluZWRWYWx1ZXMob2JqKSB7XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhvYmopLnJlZHVjZSgoYWNjLCBba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAodmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xufVxuXG5leHBvcnQge1xuICB0b1NlbnRlbmNlLFxuICBpc0lQVjRBZGRyZXNzLFxuICB0aXRsZWl6ZSxcbiAgc25ha2VUb0NhbWVsLFxuICBjYW1lbFRvU25ha2UsXG4gIGRlZXBDYW1lbFRvU25ha2UsXG4gIGRlZXBTbmFrZVRvQ2FtZWwsXG4gIGlzVHJ1dGh5LFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1FNlQ1S1VWSC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addYears: function() { return /* binding */ addYears; },\n/* harmony export */   dateTo12HourTime: function() { return /* binding */ dateTo12HourTime; },\n/* harmony export */   differenceInCalendarDays: function() { return /* binding */ differenceInCalendarDays; },\n/* harmony export */   formatRelative: function() { return /* binding */ formatRelative; },\n/* harmony export */   normalizeDate: function() { return /* binding */ normalizeDate; }\n/* harmony export */ });\n// src/date.ts\nvar MILLISECONDS_IN_DAY = 864e5;\nfunction dateTo12HourTime(date) {\n  if (!date) {\n    return \"\";\n  }\n  return date.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"numeric\",\n    hour12: true\n  });\n}\nfunction differenceInCalendarDays(a, b, { absolute = true } = {}) {\n  if (!a || !b) {\n    return 0;\n  }\n  const utcA = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utcB = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n  const diff = Math.floor((utcB - utcA) / MILLISECONDS_IN_DAY);\n  return absolute ? Math.abs(diff) : diff;\n}\nfunction normalizeDate(d) {\n  try {\n    return new Date(d || /* @__PURE__ */ new Date());\n  } catch (e) {\n    return /* @__PURE__ */ new Date();\n  }\n}\nfunction formatRelative(props) {\n  const { date, relativeTo } = props;\n  if (!date || !relativeTo) {\n    return null;\n  }\n  const a = normalizeDate(date);\n  const b = normalizeDate(relativeTo);\n  const differenceInDays = differenceInCalendarDays(b, a, { absolute: false });\n  if (differenceInDays < -6) {\n    return { relativeDateCase: \"other\", date: a };\n  }\n  if (differenceInDays < -1) {\n    return { relativeDateCase: \"previous6Days\", date: a };\n  }\n  if (differenceInDays === -1) {\n    return { relativeDateCase: \"lastDay\", date: a };\n  }\n  if (differenceInDays === 0) {\n    return { relativeDateCase: \"sameDay\", date: a };\n  }\n  if (differenceInDays === 1) {\n    return { relativeDateCase: \"nextDay\", date: a };\n  }\n  if (differenceInDays < 7) {\n    return { relativeDateCase: \"next6Days\", date: a };\n  }\n  return { relativeDateCase: \"other\", date: a };\n}\nfunction addYears(initialDate, yearsToAdd) {\n  const date = normalizeDate(initialDate);\n  date.setFullYear(date.getFullYear() + yearsToAdd);\n  return date;\n}\n\n\n//# sourceMappingURL=chunk-FSKKI4LG.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1GU0tLSTRMRy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLDBDQUEwQyxrQkFBa0IsSUFBSTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtQkFBbUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxpQkFBaUI7QUFDN0U7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFRRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1GU0tLSTRMRy5tanM/ZmFhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZGF0ZS50c1xudmFyIE1JTExJU0VDT05EU19JTl9EQVkgPSA4NjRlNTtcbmZ1bmN0aW9uIGRhdGVUbzEySG91clRpbWUoZGF0ZSkge1xuICBpZiAoIWRhdGUpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyhcImVuLVVTXCIsIHtcbiAgICBob3VyOiBcIjItZGlnaXRcIixcbiAgICBtaW51dGU6IFwibnVtZXJpY1wiLFxuICAgIGhvdXIxMjogdHJ1ZVxuICB9KTtcbn1cbmZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhhLCBiLCB7IGFic29sdXRlID0gdHJ1ZSB9ID0ge30pIHtcbiAgaWYgKCFhIHx8ICFiKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgY29uc3QgdXRjQSA9IERhdGUuVVRDKGEuZ2V0RnVsbFllYXIoKSwgYS5nZXRNb250aCgpLCBhLmdldERhdGUoKSk7XG4gIGNvbnN0IHV0Y0IgPSBEYXRlLlVUQyhiLmdldEZ1bGxZZWFyKCksIGIuZ2V0TW9udGgoKSwgYi5nZXREYXRlKCkpO1xuICBjb25zdCBkaWZmID0gTWF0aC5mbG9vcigodXRjQiAtIHV0Y0EpIC8gTUlMTElTRUNPTkRTX0lOX0RBWSk7XG4gIHJldHVybiBhYnNvbHV0ZSA/IE1hdGguYWJzKGRpZmYpIDogZGlmZjtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZURhdGUoZCkge1xuICB0cnkge1xuICAgIHJldHVybiBuZXcgRGF0ZShkIHx8IC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKTtcbiAgfVxufVxuZnVuY3Rpb24gZm9ybWF0UmVsYXRpdmUocHJvcHMpIHtcbiAgY29uc3QgeyBkYXRlLCByZWxhdGl2ZVRvIH0gPSBwcm9wcztcbiAgaWYgKCFkYXRlIHx8ICFyZWxhdGl2ZVRvKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgYSA9IG5vcm1hbGl6ZURhdGUoZGF0ZSk7XG4gIGNvbnN0IGIgPSBub3JtYWxpemVEYXRlKHJlbGF0aXZlVG8pO1xuICBjb25zdCBkaWZmZXJlbmNlSW5EYXlzID0gZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKGIsIGEsIHsgYWJzb2x1dGU6IGZhbHNlIH0pO1xuICBpZiAoZGlmZmVyZW5jZUluRGF5cyA8IC02KSB7XG4gICAgcmV0dXJuIHsgcmVsYXRpdmVEYXRlQ2FzZTogXCJvdGhlclwiLCBkYXRlOiBhIH07XG4gIH1cbiAgaWYgKGRpZmZlcmVuY2VJbkRheXMgPCAtMSkge1xuICAgIHJldHVybiB7IHJlbGF0aXZlRGF0ZUNhc2U6IFwicHJldmlvdXM2RGF5c1wiLCBkYXRlOiBhIH07XG4gIH1cbiAgaWYgKGRpZmZlcmVuY2VJbkRheXMgPT09IC0xKSB7XG4gICAgcmV0dXJuIHsgcmVsYXRpdmVEYXRlQ2FzZTogXCJsYXN0RGF5XCIsIGRhdGU6IGEgfTtcbiAgfVxuICBpZiAoZGlmZmVyZW5jZUluRGF5cyA9PT0gMCkge1xuICAgIHJldHVybiB7IHJlbGF0aXZlRGF0ZUNhc2U6IFwic2FtZURheVwiLCBkYXRlOiBhIH07XG4gIH1cbiAgaWYgKGRpZmZlcmVuY2VJbkRheXMgPT09IDEpIHtcbiAgICByZXR1cm4geyByZWxhdGl2ZURhdGVDYXNlOiBcIm5leHREYXlcIiwgZGF0ZTogYSB9O1xuICB9XG4gIGlmIChkaWZmZXJlbmNlSW5EYXlzIDwgNykge1xuICAgIHJldHVybiB7IHJlbGF0aXZlRGF0ZUNhc2U6IFwibmV4dDZEYXlzXCIsIGRhdGU6IGEgfTtcbiAgfVxuICByZXR1cm4geyByZWxhdGl2ZURhdGVDYXNlOiBcIm90aGVyXCIsIGRhdGU6IGEgfTtcbn1cbmZ1bmN0aW9uIGFkZFllYXJzKGluaXRpYWxEYXRlLCB5ZWFyc1RvQWRkKSB7XG4gIGNvbnN0IGRhdGUgPSBub3JtYWxpemVEYXRlKGluaXRpYWxEYXRlKTtcbiAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkgKyB5ZWFyc1RvQWRkKTtcbiAgcmV0dXJuIGRhdGU7XG59XG5cbmV4cG9ydCB7XG4gIGRhdGVUbzEySG91clRpbWUsXG4gIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyxcbiAgbm9ybWFsaXplRGF0ZSxcbiAgZm9ybWF0UmVsYXRpdmUsXG4gIGFkZFllYXJzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstRlNLS0k0TEcubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-G6V773WF.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-G6V773WF.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: function() { return /* binding */ apiUrlFromPublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n\n// src/apiUrlFromPublishableKey.ts\nvar apiUrlFromPublishableKey = (publishableKey) => {\n  var _a;\n  const frontendApi = (_a = (0,_chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey)) == null ? void 0 : _a.frontendApi;\n  if ((frontendApi == null ? void 0 : frontendApi.startsWith(\"clerk.\")) && _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.LEGACY_DEV_INSTANCE_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n  }\n  if (_chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_ENV_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_API_URL;\n  }\n  if (_chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_ENV_SUFFIXES.some((suffix) => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_API_URL;\n  }\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n};\n\n\n//# sourceMappingURL=chunk-G6V773WF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1HNlY3NzNXRi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRThCO0FBUUE7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3RUFBbUI7QUFDL0MsMkVBQTJFLDZFQUE0QjtBQUN2RyxXQUFXLDZEQUFZO0FBQ3ZCO0FBQ0EsTUFBTSxtRUFBa0I7QUFDeEIsV0FBVyw4REFBYTtBQUN4QjtBQUNBLE1BQU0scUVBQW9CO0FBQzFCLFdBQVcsZ0VBQWU7QUFDMUI7QUFDQSxTQUFTLDZEQUFZO0FBQ3JCOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUc2Vjc3M1dGLm1qcz8xOWY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHBhcnNlUHVibGlzaGFibGVLZXlcbn0gZnJvbSBcIi4vY2h1bmstWlhGVVE2TFkubWpzXCI7XG5pbXBvcnQge1xuICBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFBST0RfQVBJX1VSTCxcbiAgU1RBR0lOR19BUElfVVJMLFxuICBTVEFHSU5HX0VOVl9TVUZGSVhFU1xufSBmcm9tIFwiLi9jaHVuay1YMkZZUjVVNi5tanNcIjtcblxuLy8gc3JjL2FwaVVybEZyb21QdWJsaXNoYWJsZUtleS50c1xudmFyIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleSA9IChwdWJsaXNoYWJsZUtleSkgPT4ge1xuICB2YXIgX2E7XG4gIGNvbnN0IGZyb250ZW5kQXBpID0gKF9hID0gcGFyc2VQdWJsaXNoYWJsZUtleShwdWJsaXNoYWJsZUtleSkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5mcm9udGVuZEFwaTtcbiAgaWYgKChmcm9udGVuZEFwaSA9PSBudWxsID8gdm9pZCAwIDogZnJvbnRlbmRBcGkuc3RhcnRzV2l0aChcImNsZXJrLlwiKSkgJiYgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUy5zb21lKChzdWZmaXgpID0+IGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5lbmRzV2l0aChzdWZmaXgpKSkge1xuICAgIHJldHVybiBQUk9EX0FQSV9VUkw7XG4gIH1cbiAgaWYgKExPQ0FMX0VOVl9TVUZGSVhFUy5zb21lKChzdWZmaXgpID0+IGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5lbmRzV2l0aChzdWZmaXgpKSkge1xuICAgIHJldHVybiBMT0NBTF9BUElfVVJMO1xuICB9XG4gIGlmIChTVEFHSU5HX0VOVl9TVUZGSVhFUy5zb21lKChzdWZmaXgpID0+IGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5lbmRzV2l0aChzdWZmaXgpKSkge1xuICAgIHJldHVybiBTVEFHSU5HX0FQSV9VUkw7XG4gIH1cbiAgcmV0dXJuIFBST0RfQVBJX1VSTDtcbn07XG5cbmV4cG9ydCB7XG4gIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUc2Vjc3M1dGLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-G6V773WF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: function() { return /* binding */ deprecated; },\n/* harmony export */   deprecatedObjectProperty: function() { return /* binding */ deprecatedObjectProperty; },\n/* harmony export */   deprecatedProperty: function() { return /* binding */ deprecatedProperty; },\n/* harmony export */   isDevelopmentEnvironment: function() { return /* binding */ isDevelopmentEnvironment; },\n/* harmony export */   isProductionEnvironment: function() { return /* binding */ isProductionEnvironment; },\n/* harmony export */   isTestEnvironment: function() { return /* binding */ isTestEnvironment; }\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = () => {\n  try {\n    return \"development\" === \"development\";\n  } catch (err) {\n  }\n  return false;\n};\nvar isTestEnvironment = () => {\n  try {\n    return \"development\" === \"test\";\n  } catch (err) {\n  }\n  return false;\n};\nvar isProductionEnvironment = () => {\n  try {\n    return \"development\" === \"production\";\n  } catch (err) {\n  }\n  return false;\n};\n\n// src/deprecated.ts\nvar displayedWarnings = /* @__PURE__ */ new Set();\nvar deprecated = (fnName, warning, key) => {\n  const hideWarning = isTestEnvironment() || isProductionEnvironment();\n  const messageId = key != null ? key : fnName;\n  if (displayedWarnings.has(messageId) || hideWarning) {\n    return;\n  }\n  displayedWarnings.add(messageId);\n  console.warn(\n    `Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\n${warning}`\n  );\n};\nvar deprecatedProperty = (cls, propName, warning, isStatic = false) => {\n  const target = isStatic ? cls : cls.prototype;\n  let value = target[propName];\n  Object.defineProperty(target, propName, {\n    get() {\n      deprecated(propName, warning, `${cls.name}:${propName}`);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\nvar deprecatedObjectProperty = (obj, propName, warning, key) => {\n  let value = obj[propName];\n  Object.defineProperty(obj, propName, {\n    get() {\n      deprecated(propName, warning, key);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\n\n\n//# sourceMappingURL=chunk-IC4FGZI3.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JQzRGR1pJMy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFvQjtBQUMvQixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBb0I7QUFDL0IsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsT0FBTztBQUM1QyxFQUFFLFFBQVE7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxTQUFTLEdBQUcsU0FBUztBQUM1RDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUlDNEZHWkkzLm1qcz9lNTFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9ydW50aW1lRW52aXJvbm1lbnQudHNcbnZhciBpc0RldmVsb3BtZW50RW52aXJvbm1lbnQgPSAoKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCI7XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG52YXIgaXNUZXN0RW52aXJvbm1lbnQgPSAoKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInRlc3RcIjtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG4vLyBzcmMvZGVwcmVjYXRlZC50c1xudmFyIGRpc3BsYXllZFdhcm5pbmdzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbnZhciBkZXByZWNhdGVkID0gKGZuTmFtZSwgd2FybmluZywga2V5KSA9PiB7XG4gIGNvbnN0IGhpZGVXYXJuaW5nID0gaXNUZXN0RW52aXJvbm1lbnQoKSB8fCBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCgpO1xuICBjb25zdCBtZXNzYWdlSWQgPSBrZXkgIT0gbnVsbCA/IGtleSA6IGZuTmFtZTtcbiAgaWYgKGRpc3BsYXllZFdhcm5pbmdzLmhhcyhtZXNzYWdlSWQpIHx8IGhpZGVXYXJuaW5nKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRpc3BsYXllZFdhcm5pbmdzLmFkZChtZXNzYWdlSWQpO1xuICBjb25zb2xlLndhcm4oXG4gICAgYENsZXJrIC0gREVQUkVDQVRJT04gV0FSTklORzogXCIke2ZuTmFtZX1cIiBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgcmVsZWFzZS5cbiR7d2FybmluZ31gXG4gICk7XG59O1xudmFyIGRlcHJlY2F0ZWRQcm9wZXJ0eSA9IChjbHMsIHByb3BOYW1lLCB3YXJuaW5nLCBpc1N0YXRpYyA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHRhcmdldCA9IGlzU3RhdGljID8gY2xzIDogY2xzLnByb3RvdHlwZTtcbiAgbGV0IHZhbHVlID0gdGFyZ2V0W3Byb3BOYW1lXTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcE5hbWUsIHtcbiAgICBnZXQoKSB7XG4gICAgICBkZXByZWNhdGVkKHByb3BOYW1lLCB3YXJuaW5nLCBgJHtjbHMubmFtZX06JHtwcm9wTmFtZX1gKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldCh2KSB7XG4gICAgICB2YWx1ZSA9IHY7XG4gICAgfVxuICB9KTtcbn07XG52YXIgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5ID0gKG9iaiwgcHJvcE5hbWUsIHdhcm5pbmcsIGtleSkgPT4ge1xuICBsZXQgdmFsdWUgPSBvYmpbcHJvcE5hbWVdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wTmFtZSwge1xuICAgIGdldCgpIHtcbiAgICAgIGRlcHJlY2F0ZWQocHJvcE5hbWUsIHdhcm5pbmcsIGtleSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQodikge1xuICAgICAgdmFsdWUgPSB2O1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQge1xuICBpc0RldmVsb3BtZW50RW52aXJvbm1lbnQsXG4gIGlzVGVzdEVudmlyb25tZW50LFxuICBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCxcbiAgZGVwcmVjYXRlZCxcbiAgZGVwcmVjYXRlZFByb3BlcnR5LFxuICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1JQzRGR1pJMy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: function() { return /* binding */ DEV_BROWSER_JWT_HEADER; },\n/* harmony export */   DEV_BROWSER_JWT_KEY: function() { return /* binding */ DEV_BROWSER_JWT_KEY; },\n/* harmony export */   extractDevBrowserJWTFromURL: function() { return /* binding */ extractDevBrowserJWTFromURL; },\n/* harmony export */   setDevBrowserJWTInURL: function() { return /* binding */ setDevBrowserJWTInURL; }\n/* harmony export */ });\n// src/devBrowser.ts\nvar DEV_BROWSER_JWT_KEY = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_HEADER = \"Clerk-Db-Jwt\";\nfunction setDevBrowserJWTInURL(url, jwt) {\n  const resultURL = new URL(url);\n  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_JWT_KEY);\n  resultURL.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  const jwtToSet = jwtFromSearch || jwt;\n  if (jwtToSet) {\n    resultURL.searchParams.set(DEV_BROWSER_JWT_KEY, jwtToSet);\n  }\n  return resultURL;\n}\nfunction extractDevBrowserJWTFromURL(url) {\n  const jwt = readDevBrowserJwtFromSearchParams(url);\n  const cleanUrl = removeDevBrowserJwt(url);\n  if (cleanUrl.href !== url.href && typeof globalThis.history !== \"undefined\") {\n    globalThis.history.replaceState(null, \"\", removeDevBrowserJwt(url));\n  }\n  return jwt;\n}\nvar readDevBrowserJwtFromSearchParams = (url) => {\n  return url.searchParams.get(DEV_BROWSER_JWT_KEY) || \"\";\n};\nvar removeDevBrowserJwt = (url) => {\n  return removeDevBrowserJwtFromURLSearchParams(removeLegacyDevBrowserJwt(url));\n};\nvar removeDevBrowserJwtFromURLSearchParams = (_url) => {\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  return url;\n};\nvar removeLegacyDevBrowserJwt = (_url) => {\n  const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n  const DEV_BROWSER_JWT_LEGACY_KEY = \"__dev_session\";\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_LEGACY_KEY);\n  url.hash = decodeURI(url.hash).replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n  if (url.href.endsWith(\"#\")) {\n    url.hash = \"\";\n  }\n  return url;\n};\n\n\n//# sourceMappingURL=chunk-K64INQ4C.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LNjRJTlE0Qy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU9FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUs2NElOUTRDLm1qcz9hNDQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9kZXZCcm93c2VyLnRzXG52YXIgREVWX0JST1dTRVJfSldUX0tFWSA9IFwiX19jbGVya19kYl9qd3RcIjtcbnZhciBERVZfQlJPV1NFUl9KV1RfSEVBREVSID0gXCJDbGVyay1EYi1Kd3RcIjtcbmZ1bmN0aW9uIHNldERldkJyb3dzZXJKV1RJblVSTCh1cmwsIGp3dCkge1xuICBjb25zdCByZXN1bHRVUkwgPSBuZXcgVVJMKHVybCk7XG4gIGNvbnN0IGp3dEZyb21TZWFyY2ggPSByZXN1bHRVUkwuc2VhcmNoUGFyYW1zLmdldChERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgcmVzdWx0VVJMLnNlYXJjaFBhcmFtcy5kZWxldGUoREVWX0JST1dTRVJfSldUX0tFWSk7XG4gIGNvbnN0IGp3dFRvU2V0ID0gand0RnJvbVNlYXJjaCB8fCBqd3Q7XG4gIGlmIChqd3RUb1NldCkge1xuICAgIHJlc3VsdFVSTC5zZWFyY2hQYXJhbXMuc2V0KERFVl9CUk9XU0VSX0pXVF9LRVksIGp3dFRvU2V0KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0VVJMO1xufVxuZnVuY3Rpb24gZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMKHVybCkge1xuICBjb25zdCBqd3QgPSByZWFkRGV2QnJvd3Nlckp3dEZyb21TZWFyY2hQYXJhbXModXJsKTtcbiAgY29uc3QgY2xlYW5VcmwgPSByZW1vdmVEZXZCcm93c2VySnd0KHVybCk7XG4gIGlmIChjbGVhblVybC5ocmVmICE9PSB1cmwuaHJlZiAmJiB0eXBlb2YgZ2xvYmFsVGhpcy5oaXN0b3J5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShudWxsLCBcIlwiLCByZW1vdmVEZXZCcm93c2VySnd0KHVybCkpO1xuICB9XG4gIHJldHVybiBqd3Q7XG59XG52YXIgcmVhZERldkJyb3dzZXJKd3RGcm9tU2VhcmNoUGFyYW1zID0gKHVybCkgPT4ge1xuICByZXR1cm4gdXJsLnNlYXJjaFBhcmFtcy5nZXQoREVWX0JST1dTRVJfSldUX0tFWSkgfHwgXCJcIjtcbn07XG52YXIgcmVtb3ZlRGV2QnJvd3Nlckp3dCA9ICh1cmwpID0+IHtcbiAgcmV0dXJuIHJlbW92ZURldkJyb3dzZXJKd3RGcm9tVVJMU2VhcmNoUGFyYW1zKHJlbW92ZUxlZ2FjeURldkJyb3dzZXJKd3QodXJsKSk7XG59O1xudmFyIHJlbW92ZURldkJyb3dzZXJKd3RGcm9tVVJMU2VhcmNoUGFyYW1zID0gKF91cmwpID0+IHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChfdXJsKTtcbiAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoREVWX0JST1dTRVJfSldUX0tFWSk7XG4gIHJldHVybiB1cmw7XG59O1xudmFyIHJlbW92ZUxlZ2FjeURldkJyb3dzZXJKd3QgPSAoX3VybCkgPT4ge1xuICBjb25zdCBERVZfQlJPV1NFUl9KV1RfTUFSS0VSX1JFR0VYUCA9IC9fX2NsZXJrX2RiX2p3dFxcWyguKilcXF0vO1xuICBjb25zdCBERVZfQlJPV1NFUl9KV1RfTEVHQUNZX0tFWSA9IFwiX19kZXZfc2Vzc2lvblwiO1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKF91cmwpO1xuICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfTEVHQUNZX0tFWSk7XG4gIHVybC5oYXNoID0gZGVjb2RlVVJJKHVybC5oYXNoKS5yZXBsYWNlKERFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQLCBcIlwiKTtcbiAgaWYgKHVybC5ocmVmLmVuZHNXaXRoKFwiI1wiKSkge1xuICAgIHVybC5oYXNoID0gXCJcIjtcbiAgfVxuICByZXR1cm4gdXJsO1xufTtcblxuZXhwb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgc2V0RGV2QnJvd3NlckpXVEluVVJMLFxuICBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1LNjRJTlE0Qy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicBtoa: function() { return /* binding */ isomorphicBtoa; }\n/* harmony export */ });\n// src/isomorphicBtoa.ts\nvar isomorphicBtoa = (data) => {\n  if (typeof btoa !== \"undefined\" && typeof btoa === \"function\") {\n    return btoa(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data).toString(\"base64\");\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-KOH7GTJO.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LT0g3R1RKTy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUtPSDdHVEpPLm1qcz9lMjNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQnRvYS50c1xudmFyIGlzb21vcnBoaWNCdG9hID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYnRvYShkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQge1xuICBpc29tb3JwaGljQnRvYVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUtPSDdHVEpPLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: function() { return /* binding */ addClerkPrefix; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* binding */ cleanDoubleSlashes; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* binding */ getClerkJsMajorVersionOrTag; },\n/* harmony export */   getScriptUrl: function() { return /* binding */ getScriptUrl; },\n/* harmony export */   hasLeadingSlash: function() { return /* binding */ hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* binding */ hasTrailingSlash; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* binding */ isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* binding */ isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isNonEmptyURL: function() { return /* binding */ isNonEmptyURL; },\n/* harmony export */   isStaging: function() { return /* binding */ isStaging; },\n/* harmony export */   joinURL: function() { return /* binding */ joinURL; },\n/* harmony export */   parseSearchParams: function() { return /* binding */ parseSearchParams; },\n/* harmony export */   stripScheme: function() { return /* binding */ stripScheme; },\n/* harmony export */   withLeadingSlash: function() { return /* binding */ withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* binding */ withTrailingSlash; },\n/* harmony export */   withoutLeadingSlash: function() { return /* binding */ withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* binding */ withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n  return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && isStaging(frontendApi)) {\n    return \"canary\";\n  }\n  if (!version) {\n    return \"latest\";\n  }\n  return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, { clerkJSVersion }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__.LEGACY_DEV_INSTANCE_SUFFIXES.some((legacyDevSuffix) => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DEV_INSTANCE_SUFFIXES.some((currentDevSuffix) => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\n\n\n//# sourceMappingURL=chunk-L45N5DM5.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1MNDVONURNNS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRzhCOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRDtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQix1QkFBdUIsd0JBQXdCO0FBQ3ZGO0FBQ0E7QUFDQSxTQUFTLDZFQUE0QjtBQUNyQztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsU0FBUyw4RUFBNkI7QUFDdEM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxZQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFlBQVk7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxHQUFHO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFvQkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTDQ1TjVETTUubWpzPzZkNWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVNcbn0gZnJvbSBcIi4vY2h1bmstWDJGWVI1VTYubWpzXCI7XG5cbi8vIHNyYy91dGlscy9pbnN0YW5jZS50c1xuZnVuY3Rpb24gaXNTdGFnaW5nKGZyb250ZW5kQXBpKSB7XG4gIHJldHVybiBmcm9udGVuZEFwaS5lbmRzV2l0aChcIi5sY2xzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuc3Rnc3RhZ2UuZGV2XCIpIHx8IGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmNsZXJrc3RhZ2UuZGV2XCIpIHx8IGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmFjY291bnRzc3RhZ2UuZGV2XCIpO1xufVxuXG4vLyBzcmMvdXJsLnRzXG5mdW5jdGlvbiBwYXJzZVNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyA9IFwiXCIpIHtcbiAgaWYgKHF1ZXJ5U3RyaW5nLnN0YXJ0c1dpdGgoXCI/XCIpKSB7XG4gICAgcXVlcnlTdHJpbmcgPSBxdWVyeVN0cmluZy5zbGljZSgxKTtcbiAgfVxuICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVN0cmluZyk7XG59XG5mdW5jdGlvbiBzdHJpcFNjaGVtZSh1cmwgPSBcIlwiKSB7XG4gIHJldHVybiAodXJsIHx8IFwiXCIpLnJlcGxhY2UoL14uKzpcXC9cXC8vLCBcIlwiKTtcbn1cbmZ1bmN0aW9uIGFkZENsZXJrUHJlZml4KHN0cikge1xuICBpZiAoIXN0cikge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGxldCByZWdleDtcbiAgaWYgKHN0ci5tYXRjaCgvXihjbGVya1xcLikrXFx3KiQvKSkge1xuICAgIHJlZ2V4ID0gLyhjbGVya1xcLikqKD89Y2xlcmtcXC4pLztcbiAgfSBlbHNlIGlmIChzdHIubWF0Y2goL1xcLmNsZXJrLmFjY291bnRzLykpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9IGVsc2Uge1xuICAgIHJlZ2V4ID0gL14oY2xlcmtcXC4pKi9naTtcbiAgfVxuICBjb25zdCBzdHJpcHBlZCA9IHN0ci5yZXBsYWNlKHJlZ2V4LCBcIlwiKTtcbiAgcmV0dXJuIGBjbGVyay4ke3N0cmlwcGVkfWA7XG59XG52YXIgZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnID0gKGZyb250ZW5kQXBpLCB2ZXJzaW9uKSA9PiB7XG4gIGlmICghdmVyc2lvbiAmJiBpc1N0YWdpbmcoZnJvbnRlbmRBcGkpKSB7XG4gICAgcmV0dXJuIFwiY2FuYXJ5XCI7XG4gIH1cbiAgaWYgKCF2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIFwibGF0ZXN0XCI7XG4gIH1cbiAgcmV0dXJuIHZlcnNpb24uc3BsaXQoXCIuXCIpWzBdIHx8IFwibGF0ZXN0XCI7XG59O1xudmFyIGdldFNjcmlwdFVybCA9IChmcm9udGVuZEFwaSwgeyBjbGVya0pTVmVyc2lvbiB9KSA9PiB7XG4gIGNvbnN0IG5vU2NoZW1lRnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5yZXBsYWNlKC9odHRwKHMpPzpcXC9cXC8vLCBcIlwiKTtcbiAgY29uc3QgbWFqb3IgPSBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcoZnJvbnRlbmRBcGksIGNsZXJrSlNWZXJzaW9uKTtcbiAgcmV0dXJuIGBodHRwczovLyR7bm9TY2hlbWVGcm9udGVuZEFwaX0vbnBtL0BjbGVyay9jbGVyay1qc0Ake2NsZXJrSlNWZXJzaW9uIHx8IG1ham9yfS9kaXN0L2NsZXJrLmJyb3dzZXIuanNgO1xufTtcbmZ1bmN0aW9uIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0KSB7XG4gIHJldHVybiBMRUdBQ1lfREVWX0lOU1RBTkNFX1NVRkZJWEVTLnNvbWUoKGxlZ2FjeURldlN1ZmZpeCkgPT4ge1xuICAgIHJldHVybiBob3N0LnN0YXJ0c1dpdGgoXCJhY2NvdW50cy5cIikgJiYgaG9zdC5lbmRzV2l0aChsZWdhY3lEZXZTdWZmaXgpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4oaG9zdCkge1xuICByZXR1cm4gQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgoY3VycmVudERldlN1ZmZpeCkgPT4ge1xuICAgIHJldHVybiBob3N0LmVuZHNXaXRoKGN1cnJlbnREZXZTdWZmaXgpICYmICFob3N0LmVuZHNXaXRoKFwiLmNsZXJrXCIgKyBjdXJyZW50RGV2U3VmZml4KTtcbiAgfSk7XG59XG52YXIgVFJBSUxJTkdfU0xBU0hfUkUgPSAvXFwvJHxcXC9cXD98XFwvIy87XG5mdW5jdGlvbiBoYXNUcmFpbGluZ1NsYXNoKGlucHV0ID0gXCJcIiwgcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgaWYgKCFyZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICAgIHJldHVybiBpbnB1dC5lbmRzV2l0aChcIi9cIik7XG4gIH1cbiAgcmV0dXJuIFRSQUlMSU5HX1NMQVNIX1JFLnRlc3QoaW5wdXQpO1xufVxuZnVuY3Rpb24gd2l0aFRyYWlsaW5nU2xhc2goaW5wdXQgPSBcIlwiLCByZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICBpZiAoIXJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gICAgcmV0dXJuIGlucHV0LmVuZHNXaXRoKFwiL1wiKSA/IGlucHV0IDogaW5wdXQgKyBcIi9cIjtcbiAgfVxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaChpbnB1dCwgdHJ1ZSkpIHtcbiAgICByZXR1cm4gaW5wdXQgfHwgXCIvXCI7XG4gIH1cbiAgbGV0IHBhdGggPSBpbnB1dDtcbiAgbGV0IGZyYWdtZW50ID0gXCJcIjtcbiAgY29uc3QgZnJhZ21lbnRJbmRleCA9IGlucHV0LmluZGV4T2YoXCIjXCIpO1xuICBpZiAoZnJhZ21lbnRJbmRleCA+PSAwKSB7XG4gICAgcGF0aCA9IGlucHV0LnNsaWNlKDAsIGZyYWdtZW50SW5kZXgpO1xuICAgIGZyYWdtZW50ID0gaW5wdXQuc2xpY2UoZnJhZ21lbnRJbmRleCk7XG4gICAgaWYgKCFwYXRoKSB7XG4gICAgICByZXR1cm4gZnJhZ21lbnQ7XG4gICAgfVxuICB9XG4gIGNvbnN0IFtzMCwgLi4uc10gPSBwYXRoLnNwbGl0KFwiP1wiKTtcbiAgcmV0dXJuIHMwICsgXCIvXCIgKyAocy5sZW5ndGggPiAwID8gYD8ke3Muam9pbihcIj9cIil9YCA6IFwiXCIpICsgZnJhZ21lbnQ7XG59XG5mdW5jdGlvbiB3aXRob3V0VHJhaWxpbmdTbGFzaChpbnB1dCA9IFwiXCIsIHJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gIGlmICghcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgICByZXR1cm4gKGhhc1RyYWlsaW5nU2xhc2goaW5wdXQpID8gaW5wdXQuc2xpY2UoMCwgLTEpIDogaW5wdXQpIHx8IFwiL1wiO1xuICB9XG4gIGlmICghaGFzVHJhaWxpbmdTbGFzaChpbnB1dCwgdHJ1ZSkpIHtcbiAgICByZXR1cm4gaW5wdXQgfHwgXCIvXCI7XG4gIH1cbiAgbGV0IHBhdGggPSBpbnB1dDtcbiAgbGV0IGZyYWdtZW50ID0gXCJcIjtcbiAgY29uc3QgZnJhZ21lbnRJbmRleCA9IGlucHV0LmluZGV4T2YoXCIjXCIpO1xuICBpZiAoZnJhZ21lbnRJbmRleCA+PSAwKSB7XG4gICAgcGF0aCA9IGlucHV0LnNsaWNlKDAsIGZyYWdtZW50SW5kZXgpO1xuICAgIGZyYWdtZW50ID0gaW5wdXQuc2xpY2UoZnJhZ21lbnRJbmRleCk7XG4gIH1cbiAgY29uc3QgW3MwLCAuLi5zXSA9IHBhdGguc3BsaXQoXCI/XCIpO1xuICByZXR1cm4gKHMwLnNsaWNlKDAsIC0xKSB8fCBcIi9cIikgKyAocy5sZW5ndGggPiAwID8gYD8ke3Muam9pbihcIj9cIil9YCA6IFwiXCIpICsgZnJhZ21lbnQ7XG59XG5mdW5jdGlvbiBoYXNMZWFkaW5nU2xhc2goaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiBpbnB1dC5zdGFydHNXaXRoKFwiL1wiKTtcbn1cbmZ1bmN0aW9uIHdpdGhvdXRMZWFkaW5nU2xhc2goaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiAoaGFzTGVhZGluZ1NsYXNoKGlucHV0KSA/IGlucHV0LnNsaWNlKDEpIDogaW5wdXQpIHx8IFwiL1wiO1xufVxuZnVuY3Rpb24gd2l0aExlYWRpbmdTbGFzaChpbnB1dCA9IFwiXCIpIHtcbiAgcmV0dXJuIGhhc0xlYWRpbmdTbGFzaChpbnB1dCkgPyBpbnB1dCA6IFwiL1wiICsgaW5wdXQ7XG59XG5mdW5jdGlvbiBjbGVhbkRvdWJsZVNsYXNoZXMoaW5wdXQgPSBcIlwiKSB7XG4gIHJldHVybiBpbnB1dC5zcGxpdChcIjovL1wiKS5tYXAoKHN0cmluZ18pID0+IHN0cmluZ18ucmVwbGFjZSgvXFwvezIsfS9nLCBcIi9cIikpLmpvaW4oXCI6Ly9cIik7XG59XG5mdW5jdGlvbiBpc05vbkVtcHR5VVJMKHVybCkge1xuICByZXR1cm4gdXJsICYmIHVybCAhPT0gXCIvXCI7XG59XG52YXIgSk9JTl9MRUFESU5HX1NMQVNIX1JFID0gL15cXC4/XFwvLztcbmZ1bmN0aW9uIGpvaW5VUkwoYmFzZSwgLi4uaW5wdXQpIHtcbiAgbGV0IHVybCA9IGJhc2UgfHwgXCJcIjtcbiAgZm9yIChjb25zdCBzZWdtZW50IG9mIGlucHV0LmZpbHRlcigodXJsMikgPT4gaXNOb25FbXB0eVVSTCh1cmwyKSkpIHtcbiAgICBpZiAodXJsKSB7XG4gICAgICBjb25zdCBfc2VnbWVudCA9IHNlZ21lbnQucmVwbGFjZShKT0lOX0xFQURJTkdfU0xBU0hfUkUsIFwiXCIpO1xuICAgICAgdXJsID0gd2l0aFRyYWlsaW5nU2xhc2godXJsKSArIF9zZWdtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICB1cmwgPSBzZWdtZW50O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdXJsO1xufVxuXG5leHBvcnQge1xuICBpc1N0YWdpbmcsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgYWRkQ2xlcmtQcmVmaXgsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIHdpdGhUcmFpbGluZ1NsYXNoLFxuICB3aXRob3V0VHJhaWxpbmdTbGFzaCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICB3aXRob3V0TGVhZGluZ1NsYXNoLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1MNDVONURNNS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inBrowser: function() { return /* binding */ inBrowser; },\n/* harmony export */   isBrowserOnline: function() { return /* binding */ isBrowserOnline; },\n/* harmony export */   isValidBrowser: function() { return /* binding */ isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* binding */ isValidBrowserOnline; },\n/* harmony export */   userAgentIsRobot: function() { return /* binding */ userAgentIsRobot; }\n/* harmony export */ });\n// src/browser.ts\nfunction inBrowser() {\n  return typeof window !== \"undefined\";\n}\nvar botAgents = [\n  \"bot\",\n  \"spider\",\n  \"crawl\",\n  \"APIs-Google\",\n  \"AdsBot\",\n  \"Googlebot\",\n  \"mediapartners\",\n  \"Google Favicon\",\n  \"FeedFetcher\",\n  \"Google-Read-Aloud\",\n  \"DuplexWeb-Google\",\n  \"googleweblight\",\n  \"bing\",\n  \"yandex\",\n  \"baidu\",\n  \"duckduck\",\n  \"yahoo\",\n  \"ecosia\",\n  \"ia_archiver\",\n  \"facebook\",\n  \"instagram\",\n  \"pinterest\",\n  \"reddit\",\n  \"slack\",\n  \"twitter\",\n  \"whatsapp\",\n  \"youtube\",\n  \"semrush\"\n];\nvar botAgentRegex = new RegExp(botAgents.join(\"|\"), \"i\");\nfunction userAgentIsRobot(userAgent) {\n  return !userAgent ? false : botAgentRegex.test(userAgent);\n}\nfunction isValidBrowser() {\n  const navigator = inBrowser() ? window == null ? void 0 : window.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  return !userAgentIsRobot(navigator == null ? void 0 : navigator.userAgent) && !(navigator == null ? void 0 : navigator.webdriver);\n}\nfunction isBrowserOnline() {\n  var _a, _b;\n  const navigator = inBrowser() ? window == null ? void 0 : window.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  const isNavigatorOnline = navigator == null ? void 0 : navigator.onLine;\n  const isExperimentalConnectionOnline = ((_a = navigator == null ? void 0 : navigator.connection) == null ? void 0 : _a.rtt) !== 0 && ((_b = navigator == null ? void 0 : navigator.connection) == null ? void 0 : _b.downlink) !== 0;\n  return isExperimentalConnectionOnline && isNavigatorOnline;\n}\nfunction isValidBrowserOnline() {\n  return isBrowserOnline() && isValidBrowser();\n}\n\n\n//# sourceMappingURL=chunk-LJ4R7M7R.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1MSjRSN003Ui5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFRRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1MSjRSN003Ui5tanM/YmI4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvYnJvd3Nlci50c1xuZnVuY3Rpb24gaW5Ccm93c2VyKCkge1xuICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbnZhciBib3RBZ2VudHMgPSBbXG4gIFwiYm90XCIsXG4gIFwic3BpZGVyXCIsXG4gIFwiY3Jhd2xcIixcbiAgXCJBUElzLUdvb2dsZVwiLFxuICBcIkFkc0JvdFwiLFxuICBcIkdvb2dsZWJvdFwiLFxuICBcIm1lZGlhcGFydG5lcnNcIixcbiAgXCJHb29nbGUgRmF2aWNvblwiLFxuICBcIkZlZWRGZXRjaGVyXCIsXG4gIFwiR29vZ2xlLVJlYWQtQWxvdWRcIixcbiAgXCJEdXBsZXhXZWItR29vZ2xlXCIsXG4gIFwiZ29vZ2xld2VibGlnaHRcIixcbiAgXCJiaW5nXCIsXG4gIFwieWFuZGV4XCIsXG4gIFwiYmFpZHVcIixcbiAgXCJkdWNrZHVja1wiLFxuICBcInlhaG9vXCIsXG4gIFwiZWNvc2lhXCIsXG4gIFwiaWFfYXJjaGl2ZXJcIixcbiAgXCJmYWNlYm9va1wiLFxuICBcImluc3RhZ3JhbVwiLFxuICBcInBpbnRlcmVzdFwiLFxuICBcInJlZGRpdFwiLFxuICBcInNsYWNrXCIsXG4gIFwidHdpdHRlclwiLFxuICBcIndoYXRzYXBwXCIsXG4gIFwieW91dHViZVwiLFxuICBcInNlbXJ1c2hcIlxuXTtcbnZhciBib3RBZ2VudFJlZ2V4ID0gbmV3IFJlZ0V4cChib3RBZ2VudHMuam9pbihcInxcIiksIFwiaVwiKTtcbmZ1bmN0aW9uIHVzZXJBZ2VudElzUm9ib3QodXNlckFnZW50KSB7XG4gIHJldHVybiAhdXNlckFnZW50ID8gZmFsc2UgOiBib3RBZ2VudFJlZ2V4LnRlc3QodXNlckFnZW50KTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRCcm93c2VyKCkge1xuICBjb25zdCBuYXZpZ2F0b3IgPSBpbkJyb3dzZXIoKSA/IHdpbmRvdyA9PSBudWxsID8gdm9pZCAwIDogd2luZG93Lm5hdmlnYXRvciA6IG51bGw7XG4gIGlmICghbmF2aWdhdG9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAhdXNlckFnZW50SXNSb2JvdChuYXZpZ2F0b3IgPT0gbnVsbCA/IHZvaWQgMCA6IG5hdmlnYXRvci51c2VyQWdlbnQpICYmICEobmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3Iud2ViZHJpdmVyKTtcbn1cbmZ1bmN0aW9uIGlzQnJvd3Nlck9ubGluZSgpIHtcbiAgdmFyIF9hLCBfYjtcbiAgY29uc3QgbmF2aWdhdG9yID0gaW5Ccm93c2VyKCkgPyB3aW5kb3cgPT0gbnVsbCA/IHZvaWQgMCA6IHdpbmRvdy5uYXZpZ2F0b3IgOiBudWxsO1xuICBpZiAoIW5hdmlnYXRvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCBpc05hdmlnYXRvck9ubGluZSA9IG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLm9uTGluZTtcbiAgY29uc3QgaXNFeHBlcmltZW50YWxDb25uZWN0aW9uT25saW5lID0gKChfYSA9IG5hdmlnYXRvciA9PSBudWxsID8gdm9pZCAwIDogbmF2aWdhdG9yLmNvbm5lY3Rpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYS5ydHQpICE9PSAwICYmICgoX2IgPSBuYXZpZ2F0b3IgPT0gbnVsbCA/IHZvaWQgMCA6IG5hdmlnYXRvci5jb25uZWN0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZG93bmxpbmspICE9PSAwO1xuICByZXR1cm4gaXNFeHBlcmltZW50YWxDb25uZWN0aW9uT25saW5lICYmIGlzTmF2aWdhdG9yT25saW5lO1xufVxuZnVuY3Rpb24gaXNWYWxpZEJyb3dzZXJPbmxpbmUoKSB7XG4gIHJldHVybiBpc0Jyb3dzZXJPbmxpbmUoKSAmJiBpc1ZhbGlkQnJvd3NlcigpO1xufVxuXG5leHBvcnQge1xuICBpbkJyb3dzZXIsXG4gIHVzZXJBZ2VudElzUm9ib3QsXG4gIGlzVmFsaWRCcm93c2VyLFxuICBpc0Jyb3dzZXJPbmxpbmUsXG4gIGlzVmFsaWRCcm93c2VyT25saW5lXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstTEo0UjdNN1IubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorageBroadcastChannel: function() { return /* binding */ LocalStorageBroadcastChannel; }\n/* harmony export */ });\n// src/localStorageBroadcastChannel.ts\nvar KEY_PREFIX = \"__lsbc__\";\nvar LocalStorageBroadcastChannel = class {\n  constructor(name) {\n    this.eventTarget = window;\n    this.postMessage = (data) => {\n      if (typeof window === \"undefined\") {\n        return;\n      }\n      try {\n        window.localStorage.setItem(this.channelKey, JSON.stringify(data));\n        window.localStorage.removeItem(this.channelKey);\n      } catch (e) {\n      }\n    };\n    this.addEventListener = (eventName, listener) => {\n      this.eventTarget.addEventListener(this.prefixEventName(eventName), (e) => {\n        listener(e);\n      });\n    };\n    this.setupLocalStorageListener = () => {\n      const notifyListeners = (e) => {\n        if (e.key !== this.channelKey || !e.newValue) {\n          return;\n        }\n        try {\n          const data = JSON.parse(e.newValue || \"\");\n          const event = new MessageEvent(this.prefixEventName(\"message\"), {\n            data\n          });\n          this.eventTarget.dispatchEvent(event);\n        } catch (e2) {\n        }\n      };\n      window.addEventListener(\"storage\", notifyListeners);\n    };\n    this.channelKey = KEY_PREFIX + name;\n    this.setupLocalStorageListener();\n  }\n  prefixEventName(eventName) {\n    return this.channelKey + eventName;\n  }\n};\n\n\n//# sourceMappingURL=chunk-RSOCGYTF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1SU09DR1lURi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUlNPQ0dZVEYubWpzP2NhOWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xvY2FsU3RvcmFnZUJyb2FkY2FzdENoYW5uZWwudHNcbnZhciBLRVlfUFJFRklYID0gXCJfX2xzYmNfX1wiO1xudmFyIExvY2FsU3RvcmFnZUJyb2FkY2FzdENoYW5uZWwgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICB0aGlzLmV2ZW50VGFyZ2V0ID0gd2luZG93O1xuICAgIHRoaXMucG9zdE1lc3NhZ2UgPSAoZGF0YSkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuY2hhbm5lbEtleSwgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5jaGFubmVsS2V5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lciA9IChldmVudE5hbWUsIGxpc3RlbmVyKSA9PiB7XG4gICAgICB0aGlzLmV2ZW50VGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodGhpcy5wcmVmaXhFdmVudE5hbWUoZXZlbnROYW1lKSwgKGUpID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHRoaXMuc2V0dXBMb2NhbFN0b3JhZ2VMaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG5vdGlmeUxpc3RlbmVycyA9IChlKSA9PiB7XG4gICAgICAgIGlmIChlLmtleSAhPT0gdGhpcy5jaGFubmVsS2V5IHx8ICFlLm5ld1ZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZS5uZXdWYWx1ZSB8fCBcIlwiKTtcbiAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBNZXNzYWdlRXZlbnQodGhpcy5wcmVmaXhFdmVudE5hbWUoXCJtZXNzYWdlXCIpLCB7XG4gICAgICAgICAgICBkYXRhXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy5ldmVudFRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLCBub3RpZnlMaXN0ZW5lcnMpO1xuICAgIH07XG4gICAgdGhpcy5jaGFubmVsS2V5ID0gS0VZX1BSRUZJWCArIG5hbWU7XG4gICAgdGhpcy5zZXR1cExvY2FsU3RvcmFnZUxpc3RlbmVyKCk7XG4gIH1cbiAgcHJlZml4RXZlbnROYW1lKGV2ZW50TmFtZSkge1xuICAgIHJldHVybiB0aGlzLmNoYW5uZWxLZXkgKyBldmVudE5hbWU7XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIExvY2FsU3RvcmFnZUJyb2FkY2FzdENoYW5uZWxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1SU09DR1lURi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: function() { return /* binding */ isomorphicAtob; }\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = (data) => {\n  if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n    return atob(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data, \"base64\").toString();\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-TETGTEI2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1URVRHVEVJMi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVRFVEdURUkyLm1qcz9jNTgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQXRvYi50c1xudmFyIGlzb21vcnBoaWNBdG9iID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBhdG9iICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBhdG9iID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYXRvYihkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSwgXCJiYXNlNjRcIikudG9TdHJpbmcoKTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVEVUR1RFSTIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: function() { return /* binding */ handleValueOrFn; }\n/* harmony export */ });\n// src/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n  if (typeof value === \"function\") {\n    return value(url);\n  }\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  if (typeof defaultValue !== \"undefined\") {\n    return defaultValue;\n  }\n  return void 0;\n}\n\n\n//# sourceMappingURL=chunk-TRWMHODU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1UUldNSE9EVS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVRSV01IT0RVLm1qcz8wZDJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9oYW5kbGVWYWx1ZU9yRm4udHNcbmZ1bmN0aW9uIGhhbmRsZVZhbHVlT3JGbih2YWx1ZSwgdXJsLCBkZWZhdWx0VmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHZhbHVlKHVybCk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlZmF1bHRWYWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cblxuZXhwb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVFJXTUhPRFUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventMethodCalled: function() { return /* binding */ eventMethodCalled; }\n/* harmony export */ });\n// src/telemetry/events/method-called.ts\nvar EVENT_METHOD_CALLED = \"METHOD_CALLED\";\nfunction eventMethodCalled(method, payload) {\n  return {\n    event: EVENT_METHOD_CALLED,\n    payload: {\n      method,\n      ...payload\n    }\n  };\n}\n\n\n//# sourceMappingURL=chunk-TUVJ3GI6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1UVVZKM0dJNi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFVWSjNHSTYubWpzPzBkNmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3RlbGVtZXRyeS9ldmVudHMvbWV0aG9kLWNhbGxlZC50c1xudmFyIEVWRU5UX01FVEhPRF9DQUxMRUQgPSBcIk1FVEhPRF9DQUxMRURcIjtcbmZ1bmN0aW9uIGV2ZW50TWV0aG9kQ2FsbGVkKG1ldGhvZCwgcGF5bG9hZCkge1xuICByZXR1cm4ge1xuICAgIGV2ZW50OiBFVkVOVF9NRVRIT0RfQ0FMTEVELFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIC4uLnBheWxvYWRcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB7XG4gIGV2ZW50TWV0aG9kQ2FsbGVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVFVWSjNHSTYubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: function() { return /* binding */ __export; },\n/* harmony export */   __privateAdd: function() { return /* binding */ __privateAdd; },\n/* harmony export */   __privateGet: function() { return /* binding */ __privateGet; },\n/* harmony export */   __privateMethod: function() { return /* binding */ __privateMethod; },\n/* harmony export */   __privateSet: function() { return /* binding */ __privateSet; },\n/* harmony export */   __reExport: function() { return /* binding */ __reExport; }\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n//# sourceMappingURL=chunk-UVVCWSVF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1VVlZDV1NWRi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVVWVkNXU1ZGLm1qcz84NGQyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fcmVFeHBvcnQgPSAodGFyZ2V0LCBtb2QsIHNlY29uZFRhcmdldCkgPT4gKF9fY29weVByb3BzKHRhcmdldCwgbW9kLCBcImRlZmF1bHRcIiksIHNlY29uZFRhcmdldCAmJiBfX2NvcHlQcm9wcyhzZWNvbmRUYXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpKTtcbnZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpO1xuICByZXR1cm4gbWV0aG9kO1xufTtcblxuZXhwb3J0IHtcbiAgX19leHBvcnQsXG4gIF9fcmVFeHBvcnQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVTZXQsXG4gIF9fcHJpdmF0ZU1ldGhvZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVVWVkNXU1ZGLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-WUG2DC4W.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-WUG2DC4W.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorToSameTypeString: function() { return /* binding */ colorToSameTypeString; },\n/* harmony export */   hasAlpha: function() { return /* binding */ hasAlpha; },\n/* harmony export */   hexStringToRgbaColor: function() { return /* binding */ hexStringToRgbaColor; },\n/* harmony export */   isHSLColor: function() { return /* binding */ isHSLColor; },\n/* harmony export */   isRGBColor: function() { return /* binding */ isRGBColor; },\n/* harmony export */   isTransparent: function() { return /* binding */ isTransparent; },\n/* harmony export */   isValidHexString: function() { return /* binding */ isValidHexString; },\n/* harmony export */   isValidHslaString: function() { return /* binding */ isValidHslaString; },\n/* harmony export */   isValidRgbaString: function() { return /* binding */ isValidRgbaString; },\n/* harmony export */   stringToHslaColor: function() { return /* binding */ stringToHslaColor; },\n/* harmony export */   stringToSameTypeColor: function() { return /* binding */ stringToSameTypeColor; }\n/* harmony export */ });\n// src/color.ts\nvar IS_HEX_COLOR_REGEX = /^#?([A-F0-9]{6}|[A-F0-9]{3})$/i;\nvar IS_RGB_COLOR_REGEX = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/i;\nvar IS_RGBA_COLOR_REGEX = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(,\\s*\\d+(\\.\\d+)?)\\)$/i;\nvar IS_HSL_COLOR_REGEX = /^hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)$/i;\nvar IS_HSLA_COLOR_REGEX = /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%(,\\s*\\d+(\\.\\d+)?)*\\)$/i;\nvar isValidHexString = (s) => {\n  return !!s.match(IS_HEX_COLOR_REGEX);\n};\nvar isValidRgbaString = (s) => {\n  return !!(s.match(IS_RGB_COLOR_REGEX) || s.match(IS_RGBA_COLOR_REGEX));\n};\nvar isValidHslaString = (s) => {\n  return !!s.match(IS_HSL_COLOR_REGEX) || !!s.match(IS_HSLA_COLOR_REGEX);\n};\nvar isRGBColor = (c) => {\n  return typeof c !== \"string\" && \"r\" in c;\n};\nvar isHSLColor = (c) => {\n  return typeof c !== \"string\" && \"h\" in c;\n};\nvar isTransparent = (c) => {\n  return c === \"transparent\";\n};\nvar hasAlpha = (color) => {\n  return typeof color !== \"string\" && color.a != void 0 && color.a < 1;\n};\nvar CLEAN_HSLA_REGEX = /[hsla()]/g;\nvar CLEAN_RGBA_REGEX = /[rgba()]/g;\nvar stringToHslaColor = (value) => {\n  if (value === \"transparent\") {\n    return { h: 0, s: 0, l: 0, a: 0 };\n  }\n  if (isValidHexString(value)) {\n    return hexStringToHslaColor(value);\n  }\n  if (isValidHslaString(value)) {\n    return parseHslaString(value);\n  }\n  if (isValidRgbaString(value)) {\n    return rgbaStringToHslaColor(value);\n  }\n  return null;\n};\nvar stringToSameTypeColor = (value) => {\n  value = value.trim();\n  if (isValidHexString(value)) {\n    return value.startsWith(\"#\") ? value : `#${value}`;\n  }\n  if (isValidRgbaString(value)) {\n    return parseRgbaString(value);\n  }\n  if (isValidHslaString(value)) {\n    return parseHslaString(value);\n  }\n  if (isTransparent(value)) {\n    return value;\n  }\n  return \"\";\n};\nvar colorToSameTypeString = (color) => {\n  if (typeof color === \"string\" && (isValidHexString(color) || isTransparent(color))) {\n    return color;\n  }\n  if (isRGBColor(color)) {\n    return rgbaColorToRgbaString(color);\n  }\n  if (isHSLColor(color)) {\n    return hslaColorToHslaString(color);\n  }\n  return \"\";\n};\nvar hexStringToRgbaColor = (hex) => {\n  hex = hex.replace(\"#\", \"\");\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  return { r, g, b };\n};\nvar rgbaColorToRgbaString = (color) => {\n  const { a, b, g, r } = color;\n  return color.a === 0 ? \"transparent\" : color.a != void 0 ? `rgba(${r},${g},${b},${a})` : `rgb(${r},${g},${b})`;\n};\nvar hslaColorToHslaString = (color) => {\n  const { h, s, l, a } = color;\n  const sPerc = Math.round(s * 100);\n  const lPerc = Math.round(l * 100);\n  return color.a === 0 ? \"transparent\" : color.a != void 0 ? `hsla(${h},${sPerc}%,${lPerc}%,${a})` : `hsl(${h},${sPerc}%,${lPerc}%)`;\n};\nvar hexStringToHslaColor = (hex) => {\n  const rgbaString = colorToSameTypeString(hexStringToRgbaColor(hex));\n  return rgbaStringToHslaColor(rgbaString);\n};\nvar rgbaStringToHslaColor = (rgba) => {\n  const rgbaColor = parseRgbaString(rgba);\n  const r = rgbaColor.r / 255;\n  const g = rgbaColor.g / 255;\n  const b = rgbaColor.b / 255;\n  const max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h, s;\n  const l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0;\n  } else {\n    const d = max - min;\n    s = l >= 0.5 ? d / (2 - (max + min)) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d * 60;\n        break;\n      case g:\n        h = ((b - r) / d + 2) * 60;\n        break;\n      default:\n        h = ((r - g) / d + 4) * 60;\n        break;\n    }\n  }\n  const res = { h: Math.round(h), s, l };\n  const a = rgbaColor.a;\n  if (a != void 0) {\n    res.a = a;\n  }\n  return res;\n};\nvar parseRgbaString = (str) => {\n  const [r, g, b, a] = str.replace(CLEAN_RGBA_REGEX, \"\").split(\",\").map((c) => Number.parseFloat(c));\n  return { r, g, b, a };\n};\nvar parseHslaString = (str) => {\n  const [h, s, l, a] = str.replace(CLEAN_HSLA_REGEX, \"\").split(\",\").map((c) => Number.parseFloat(c));\n  return { h, s: s / 100, l: l / 100, a };\n};\n\n\n//# sourceMappingURL=chunk-WUG2DC4W.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1XVUcyREM0Vy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLHVDQUF1QyxFQUFFLFVBQVUsRUFBRTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxNQUFNO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFVBQVUsYUFBYTtBQUN2QixxRUFBcUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxZQUFZLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRTtBQUM5RztBQUNBO0FBQ0EsVUFBVSxhQUFhO0FBQ3ZCO0FBQ0E7QUFDQSxxRUFBcUUsRUFBRSxHQUFHLE1BQU0sSUFBSSxNQUFNLElBQUksRUFBRSxZQUFZLEVBQUUsR0FBRyxNQUFNLElBQUksTUFBTTtBQUNqSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDs7QUFjRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1XVUcyREM0Vy5tanM/N2MyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29sb3IudHNcbnZhciBJU19IRVhfQ09MT1JfUkVHRVggPSAvXiM/KFtBLUYwLTldezZ9fFtBLUYwLTldezN9KSQvaTtcbnZhciBJU19SR0JfQ09MT1JfUkVHRVggPSAvXnJnYlxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKylcXCkkL2k7XG52YXIgSVNfUkdCQV9DT0xPUl9SRUdFWCA9IC9ecmdiYVxcKChcXGQrKSxcXHMqKFxcZCspLFxccyooXFxkKykoLFxccypcXGQrKFxcLlxcZCspPylcXCkkL2k7XG52YXIgSVNfSFNMX0NPTE9SX1JFR0VYID0gL15oc2xcXCgoXFxkKyksXFxzKihbXFxkLl0rKSUsXFxzKihbXFxkLl0rKSVcXCkkL2k7XG52YXIgSVNfSFNMQV9DT0xPUl9SRUdFWCA9IC9eaHNsYVxcKChcXGQrKSxcXHMqKFtcXGQuXSspJSxcXHMqKFtcXGQuXSspJSgsXFxzKlxcZCsoXFwuXFxkKyk/KSpcXCkkL2k7XG52YXIgaXNWYWxpZEhleFN0cmluZyA9IChzKSA9PiB7XG4gIHJldHVybiAhIXMubWF0Y2goSVNfSEVYX0NPTE9SX1JFR0VYKTtcbn07XG52YXIgaXNWYWxpZFJnYmFTdHJpbmcgPSAocykgPT4ge1xuICByZXR1cm4gISEocy5tYXRjaChJU19SR0JfQ09MT1JfUkVHRVgpIHx8IHMubWF0Y2goSVNfUkdCQV9DT0xPUl9SRUdFWCkpO1xufTtcbnZhciBpc1ZhbGlkSHNsYVN0cmluZyA9IChzKSA9PiB7XG4gIHJldHVybiAhIXMubWF0Y2goSVNfSFNMX0NPTE9SX1JFR0VYKSB8fCAhIXMubWF0Y2goSVNfSFNMQV9DT0xPUl9SRUdFWCk7XG59O1xudmFyIGlzUkdCQ29sb3IgPSAoYykgPT4ge1xuICByZXR1cm4gdHlwZW9mIGMgIT09IFwic3RyaW5nXCIgJiYgXCJyXCIgaW4gYztcbn07XG52YXIgaXNIU0xDb2xvciA9IChjKSA9PiB7XG4gIHJldHVybiB0eXBlb2YgYyAhPT0gXCJzdHJpbmdcIiAmJiBcImhcIiBpbiBjO1xufTtcbnZhciBpc1RyYW5zcGFyZW50ID0gKGMpID0+IHtcbiAgcmV0dXJuIGMgPT09IFwidHJhbnNwYXJlbnRcIjtcbn07XG52YXIgaGFzQWxwaGEgPSAoY29sb3IpID0+IHtcbiAgcmV0dXJuIHR5cGVvZiBjb2xvciAhPT0gXCJzdHJpbmdcIiAmJiBjb2xvci5hICE9IHZvaWQgMCAmJiBjb2xvci5hIDwgMTtcbn07XG52YXIgQ0xFQU5fSFNMQV9SRUdFWCA9IC9baHNsYSgpXS9nO1xudmFyIENMRUFOX1JHQkFfUkVHRVggPSAvW3JnYmEoKV0vZztcbnZhciBzdHJpbmdUb0hzbGFDb2xvciA9ICh2YWx1ZSkgPT4ge1xuICBpZiAodmFsdWUgPT09IFwidHJhbnNwYXJlbnRcIikge1xuICAgIHJldHVybiB7IGg6IDAsIHM6IDAsIGw6IDAsIGE6IDAgfTtcbiAgfVxuICBpZiAoaXNWYWxpZEhleFN0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gaGV4U3RyaW5nVG9Ic2xhQ29sb3IodmFsdWUpO1xuICB9XG4gIGlmIChpc1ZhbGlkSHNsYVN0cmluZyh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcGFyc2VIc2xhU3RyaW5nKHZhbHVlKTtcbiAgfVxuICBpZiAoaXNWYWxpZFJnYmFTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIHJnYmFTdHJpbmdUb0hzbGFDb2xvcih2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xudmFyIHN0cmluZ1RvU2FtZVR5cGVDb2xvciA9ICh2YWx1ZSkgPT4ge1xuICB2YWx1ZSA9IHZhbHVlLnRyaW0oKTtcbiAgaWYgKGlzVmFsaWRIZXhTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlLnN0YXJ0c1dpdGgoXCIjXCIpID8gdmFsdWUgOiBgIyR7dmFsdWV9YDtcbiAgfVxuICBpZiAoaXNWYWxpZFJnYmFTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIHBhcnNlUmdiYVN0cmluZyh2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzVmFsaWRIc2xhU3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBwYXJzZUhzbGFTdHJpbmcodmFsdWUpO1xuICB9XG4gIGlmIChpc1RyYW5zcGFyZW50KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gXCJcIjtcbn07XG52YXIgY29sb3JUb1NhbWVUeXBlU3RyaW5nID0gKGNvbG9yKSA9PiB7XG4gIGlmICh0eXBlb2YgY29sb3IgPT09IFwic3RyaW5nXCIgJiYgKGlzVmFsaWRIZXhTdHJpbmcoY29sb3IpIHx8IGlzVHJhbnNwYXJlbnQoY29sb3IpKSkge1xuICAgIHJldHVybiBjb2xvcjtcbiAgfVxuICBpZiAoaXNSR0JDb2xvcihjb2xvcikpIHtcbiAgICByZXR1cm4gcmdiYUNvbG9yVG9SZ2JhU3RyaW5nKGNvbG9yKTtcbiAgfVxuICBpZiAoaXNIU0xDb2xvcihjb2xvcikpIHtcbiAgICByZXR1cm4gaHNsYUNvbG9yVG9Ic2xhU3RyaW5nKGNvbG9yKTtcbiAgfVxuICByZXR1cm4gXCJcIjtcbn07XG52YXIgaGV4U3RyaW5nVG9SZ2JhQ29sb3IgPSAoaGV4KSA9PiB7XG4gIGhleCA9IGhleC5yZXBsYWNlKFwiI1wiLCBcIlwiKTtcbiAgY29uc3QgciA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoMCwgMiksIDE2KTtcbiAgY29uc3QgZyA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoMiwgNCksIDE2KTtcbiAgY29uc3QgYiA9IHBhcnNlSW50KGhleC5zdWJzdHJpbmcoNCwgNiksIDE2KTtcbiAgcmV0dXJuIHsgciwgZywgYiB9O1xufTtcbnZhciByZ2JhQ29sb3JUb1JnYmFTdHJpbmcgPSAoY29sb3IpID0+IHtcbiAgY29uc3QgeyBhLCBiLCBnLCByIH0gPSBjb2xvcjtcbiAgcmV0dXJuIGNvbG9yLmEgPT09IDAgPyBcInRyYW5zcGFyZW50XCIgOiBjb2xvci5hICE9IHZvaWQgMCA/IGByZ2JhKCR7cn0sJHtnfSwke2J9LCR7YX0pYCA6IGByZ2IoJHtyfSwke2d9LCR7Yn0pYDtcbn07XG52YXIgaHNsYUNvbG9yVG9Ic2xhU3RyaW5nID0gKGNvbG9yKSA9PiB7XG4gIGNvbnN0IHsgaCwgcywgbCwgYSB9ID0gY29sb3I7XG4gIGNvbnN0IHNQZXJjID0gTWF0aC5yb3VuZChzICogMTAwKTtcbiAgY29uc3QgbFBlcmMgPSBNYXRoLnJvdW5kKGwgKiAxMDApO1xuICByZXR1cm4gY29sb3IuYSA9PT0gMCA/IFwidHJhbnNwYXJlbnRcIiA6IGNvbG9yLmEgIT0gdm9pZCAwID8gYGhzbGEoJHtofSwke3NQZXJjfSUsJHtsUGVyY30lLCR7YX0pYCA6IGBoc2woJHtofSwke3NQZXJjfSUsJHtsUGVyY30lKWA7XG59O1xudmFyIGhleFN0cmluZ1RvSHNsYUNvbG9yID0gKGhleCkgPT4ge1xuICBjb25zdCByZ2JhU3RyaW5nID0gY29sb3JUb1NhbWVUeXBlU3RyaW5nKGhleFN0cmluZ1RvUmdiYUNvbG9yKGhleCkpO1xuICByZXR1cm4gcmdiYVN0cmluZ1RvSHNsYUNvbG9yKHJnYmFTdHJpbmcpO1xufTtcbnZhciByZ2JhU3RyaW5nVG9Ic2xhQ29sb3IgPSAocmdiYSkgPT4ge1xuICBjb25zdCByZ2JhQ29sb3IgPSBwYXJzZVJnYmFTdHJpbmcocmdiYSk7XG4gIGNvbnN0IHIgPSByZ2JhQ29sb3IuciAvIDI1NTtcbiAgY29uc3QgZyA9IHJnYmFDb2xvci5nIC8gMjU1O1xuICBjb25zdCBiID0gcmdiYUNvbG9yLmIgLyAyNTU7XG4gIGNvbnN0IG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLCBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKTtcbiAgbGV0IGgsIHM7XG4gIGNvbnN0IGwgPSAobWF4ICsgbWluKSAvIDI7XG4gIGlmIChtYXggPT0gbWluKSB7XG4gICAgaCA9IHMgPSAwO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGQgPSBtYXggLSBtaW47XG4gICAgcyA9IGwgPj0gMC41ID8gZCAvICgyIC0gKG1heCArIG1pbikpIDogZCAvIChtYXggKyBtaW4pO1xuICAgIHN3aXRjaCAobWF4KSB7XG4gICAgICBjYXNlIHI6XG4gICAgICAgIGggPSAoZyAtIGIpIC8gZCAqIDYwO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZzpcbiAgICAgICAgaCA9ICgoYiAtIHIpIC8gZCArIDIpICogNjA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaCA9ICgociAtIGcpIC8gZCArIDQpICogNjA7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBjb25zdCByZXMgPSB7IGg6IE1hdGgucm91bmQoaCksIHMsIGwgfTtcbiAgY29uc3QgYSA9IHJnYmFDb2xvci5hO1xuICBpZiAoYSAhPSB2b2lkIDApIHtcbiAgICByZXMuYSA9IGE7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG52YXIgcGFyc2VSZ2JhU3RyaW5nID0gKHN0cikgPT4ge1xuICBjb25zdCBbciwgZywgYiwgYV0gPSBzdHIucmVwbGFjZShDTEVBTl9SR0JBX1JFR0VYLCBcIlwiKS5zcGxpdChcIixcIikubWFwKChjKSA9PiBOdW1iZXIucGFyc2VGbG9hdChjKSk7XG4gIHJldHVybiB7IHIsIGcsIGIsIGEgfTtcbn07XG52YXIgcGFyc2VIc2xhU3RyaW5nID0gKHN0cikgPT4ge1xuICBjb25zdCBbaCwgcywgbCwgYV0gPSBzdHIucmVwbGFjZShDTEVBTl9IU0xBX1JFR0VYLCBcIlwiKS5zcGxpdChcIixcIikubWFwKChjKSA9PiBOdW1iZXIucGFyc2VGbG9hdChjKSk7XG4gIHJldHVybiB7IGgsIHM6IHMgLyAxMDAsIGw6IGwgLyAxMDAsIGEgfTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzVmFsaWRIZXhTdHJpbmcsXG4gIGlzVmFsaWRSZ2JhU3RyaW5nLFxuICBpc1ZhbGlkSHNsYVN0cmluZyxcbiAgaXNSR0JDb2xvcixcbiAgaXNIU0xDb2xvcixcbiAgaXNUcmFuc3BhcmVudCxcbiAgaGFzQWxwaGEsXG4gIHN0cmluZ1RvSHNsYUNvbG9yLFxuICBzdHJpbmdUb1NhbWVUeXBlQ29sb3IsXG4gIGNvbG9yVG9TYW1lVHlwZVN0cmluZyxcbiAgaGV4U3RyaW5nVG9SZ2JhQ29sb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1XVUcyREM0Vy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-WUG2DC4W.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: function() { return /* binding */ CURRENT_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: function() { return /* binding */ DEV_OR_STAGING_SUFFIXES; },\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: function() { return /* binding */ LEGACY_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   LOCAL_API_URL: function() { return /* binding */ LOCAL_API_URL; },\n/* harmony export */   LOCAL_ENV_SUFFIXES: function() { return /* binding */ LOCAL_ENV_SUFFIXES; },\n/* harmony export */   PROD_API_URL: function() { return /* binding */ PROD_API_URL; },\n/* harmony export */   STAGING_API_URL: function() { return /* binding */ STAGING_API_URL; },\n/* harmony export */   STAGING_ENV_SUFFIXES: function() { return /* binding */ STAGING_ENV_SUFFIXES; }\n/* harmony export */ });\n// src/constants.ts\nvar LEGACY_DEV_INSTANCE_SUFFIXES = [\".lcl.dev\", \".lclstage.dev\", \".lclclerk.com\"];\nvar CURRENT_DEV_INSTANCE_SUFFIXES = [\".accounts.dev\", \".accountsstage.dev\", \".accounts.lclclerk.com\"];\nvar DEV_OR_STAGING_SUFFIXES = [\n  \".lcl.dev\",\n  \".stg.dev\",\n  \".lclstage.dev\",\n  \".stgstage.dev\",\n  \".dev.lclclerk.com\",\n  \".stg.lclclerk.com\",\n  \".accounts.lclclerk.com\",\n  \"accountsstage.dev\",\n  \"accounts.dev\"\n];\nvar LOCAL_ENV_SUFFIXES = [\".lcl.dev\", \"lclstage.dev\", \".lclclerk.com\", \".accounts.lclclerk.com\"];\nvar STAGING_ENV_SUFFIXES = [\".accountsstage.dev\"];\nvar LOCAL_API_URL = \"https://api.lclclerk.com\";\nvar STAGING_API_URL = \"https://api.clerkstage.dev\";\nvar PROD_API_URL = \"https://api.clerk.com\";\n\n\n//# sourceMappingURL=chunk-X2FYR5U6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YMkZZUjVVNi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFXRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YMkZZUjVVNi5tanM/NTcyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uc3RhbnRzLnRzXG52YXIgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyA9IFtcIi5sY2wuZGV2XCIsIFwiLmxjbHN0YWdlLmRldlwiLCBcIi5sY2xjbGVyay5jb21cIl07XG52YXIgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMgPSBbXCIuYWNjb3VudHMuZGV2XCIsIFwiLmFjY291bnRzc3RhZ2UuZGV2XCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyA9IFtcbiAgXCIubGNsLmRldlwiLFxuICBcIi5zdGcuZGV2XCIsXG4gIFwiLmxjbHN0YWdlLmRldlwiLFxuICBcIi5zdGdzdGFnZS5kZXZcIixcbiAgXCIuZGV2LmxjbGNsZXJrLmNvbVwiLFxuICBcIi5zdGcubGNsY2xlcmsuY29tXCIsXG4gIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiLFxuICBcImFjY291bnRzc3RhZ2UuZGV2XCIsXG4gIFwiYWNjb3VudHMuZGV2XCJcbl07XG52YXIgTE9DQUxfRU5WX1NVRkZJWEVTID0gW1wiLmxjbC5kZXZcIiwgXCJsY2xzdGFnZS5kZXZcIiwgXCIubGNsY2xlcmsuY29tXCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBTVEFHSU5HX0VOVl9TVUZGSVhFUyA9IFtcIi5hY2NvdW50c3N0YWdlLmRldlwiXTtcbnZhciBMT0NBTF9BUElfVVJMID0gXCJodHRwczovL2FwaS5sY2xjbGVyay5jb21cIjtcbnZhciBTVEFHSU5HX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmNsZXJrc3RhZ2UuZGV2XCI7XG52YXIgUFJPRF9BUElfVVJMID0gXCJodHRwczovL2FwaS5jbGVyay5jb21cIjtcblxuZXhwb3J0IHtcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFBST0RfQVBJX1VSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVgyRllSNVU2Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poller: function() { return /* binding */ Poller; },\n/* harmony export */   createWorkerTimers: function() { return /* binding */ createWorkerTimers; },\n/* harmony export */   noop: function() { return /* binding */ noop; }\n/* harmony export */ });\n// src/utils/noop.ts\nvar noop = (..._args) => {\n};\n\n// src/workerTimers/workerTimers.worker.ts\nvar workerTimers_worker_default = 'const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener(\"message\",r=>{const e=r.data;switch(e.type){case\"setTimeout\":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id})},e.ms);break;case\"clearTimeout\":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case\"setInterval\":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case\"clearInterval\":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});\\n';\n\n// src/workerTimers/createWorkerTimers.ts\nvar createWebWorker = (source, opts = {}) => {\n  if (typeof Worker === \"undefined\") {\n    return null;\n  }\n  try {\n    const blob = new Blob([source], { type: \"application/javascript; charset=utf-8\" });\n    const workerScript = globalThis.URL.createObjectURL(blob);\n    return new Worker(workerScript, opts);\n  } catch (e) {\n    console.warn(\"Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP\");\n    return null;\n  }\n};\nvar fallbackTimers = () => {\n  const setTimeout = globalThis.setTimeout.bind(globalThis);\n  const setInterval = globalThis.setInterval.bind(globalThis);\n  const clearTimeout = globalThis.clearTimeout.bind(globalThis);\n  const clearInterval = globalThis.clearInterval.bind(globalThis);\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup: noop };\n};\nvar createWorkerTimers = () => {\n  let id = 0;\n  const generateId = () => id++;\n  const callbacks = /* @__PURE__ */ new Map();\n  const post = (w, p) => w == null ? void 0 : w.postMessage(p);\n  const handleMessage = (e) => {\n    var _a;\n    (_a = callbacks.get(e.data.id)) == null ? void 0 : _a();\n  };\n  let worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n  worker == null ? void 0 : worker.addEventListener(\"message\", handleMessage);\n  if (!worker) {\n    return fallbackTimers();\n  }\n  const init = () => {\n    if (!worker) {\n      worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n      worker == null ? void 0 : worker.addEventListener(\"message\", handleMessage);\n    }\n  };\n  const cleanup = () => {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      callbacks.clear();\n    }\n  };\n  const setTimeout = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, { type: \"setTimeout\", id: id2, ms });\n    return id2;\n  };\n  const setInterval = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, { type: \"setInterval\", id: id2, ms });\n    return id2;\n  };\n  const clearTimeout = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearTimeout\", id: id2 });\n  };\n  const clearInterval = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearInterval\", id: id2 });\n  };\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup };\n};\n\n// src/poller.ts\nfunction Poller({ delayInMs } = { delayInMs: 1e3 }) {\n  const workerTimers = createWorkerTimers();\n  let timerId;\n  let stopped = false;\n  const stop = () => {\n    if (timerId) {\n      workerTimers.clearTimeout(timerId);\n      workerTimers.cleanup();\n    }\n    stopped = true;\n  };\n  const run = async (cb) => {\n    stopped = false;\n    await cb(stop);\n    if (stopped) {\n      return;\n    }\n    timerId = workerTimers.setTimeout(() => {\n      void run(cb);\n    }, delayInMs);\n  };\n  return { run, stop };\n}\n\n\n//# sourceMappingURL=chunk-XPYJQUM7.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YUFlKUVVNNy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EscURBQXFELG9CQUFvQixtQkFBbUIsb0NBQW9DLGVBQWUsZUFBZSxzREFBc0QsU0FBUyxRQUFRLEVBQUUsT0FBTyxNQUFNLDBHQUEwRyxNQUFNLHdEQUF3RCxTQUFTLFFBQVEsRUFBRSxPQUFPLE1BQU0sNEdBQTRHLE9BQU8sRUFBRTs7QUFFampCO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtCQUErQixnQkFBZ0I7QUFDckY7QUFDQTtBQUNBLElBQUk7QUFDSiwyRkFBMkY7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxzQkFBc0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHNCQUFzQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlDQUFpQztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0NBQWtDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0JBQStCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdDQUFnQztBQUNuRDtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBLGtCQUFrQixZQUFZLElBQUksZ0JBQWdCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVc7QUFDWDs7QUFNRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YUFlKUVVNNy5tanM/MTM4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvbm9vcC50c1xudmFyIG5vb3AgPSAoLi4uX2FyZ3MpID0+IHtcbn07XG5cbi8vIHNyYy93b3JrZXJUaW1lcnMvd29ya2VyVGltZXJzLndvcmtlci50c1xudmFyIHdvcmtlclRpbWVyc193b3JrZXJfZGVmYXVsdCA9ICdjb25zdCByZXNwb25kPXI9PntzZWxmLnBvc3RNZXNzYWdlKHIpfSx3b3JrZXJUb1RhYklkcz17fTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIscj0+e2NvbnN0IGU9ci5kYXRhO3N3aXRjaChlLnR5cGUpe2Nhc2VcInNldFRpbWVvdXRcIjp3b3JrZXJUb1RhYklkc1tlLmlkXT1zZXRUaW1lb3V0KCgpPT57cmVzcG9uZCh7aWQ6ZS5pZH0pfSxlLm1zKTticmVhaztjYXNlXCJjbGVhclRpbWVvdXRcIjp3b3JrZXJUb1RhYklkc1tlLmlkXSYmKGNsZWFyVGltZW91dCh3b3JrZXJUb1RhYklkc1tlLmlkXSksZGVsZXRlIHdvcmtlclRvVGFiSWRzW2UuaWRdKTticmVhaztjYXNlXCJzZXRJbnRlcnZhbFwiOndvcmtlclRvVGFiSWRzW2UuaWRdPXNldEludGVydmFsKCgpPT57cmVzcG9uZCh7aWQ6ZS5pZH0pfSxlLm1zKTticmVhaztjYXNlXCJjbGVhckludGVydmFsXCI6d29ya2VyVG9UYWJJZHNbZS5pZF0mJihjbGVhckludGVydmFsKHdvcmtlclRvVGFiSWRzW2UuaWRdKSxkZWxldGUgd29ya2VyVG9UYWJJZHNbZS5pZF0pO2JyZWFrfX0pO1xcbic7XG5cbi8vIHNyYy93b3JrZXJUaW1lcnMvY3JlYXRlV29ya2VyVGltZXJzLnRzXG52YXIgY3JlYXRlV2ViV29ya2VyID0gKHNvdXJjZSwgb3B0cyA9IHt9KSA9PiB7XG4gIGlmICh0eXBlb2YgV29ya2VyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW3NvdXJjZV0sIHsgdHlwZTogXCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04XCIgfSk7XG4gICAgY29uc3Qgd29ya2VyU2NyaXB0ID0gZ2xvYmFsVGhpcy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgIHJldHVybiBuZXcgV29ya2VyKHdvcmtlclNjcmlwdCwgb3B0cyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLndhcm4oXCJDbGVyazogQ2Fubm90IGNyZWF0ZSB3b3JrZXIgZnJvbSBibG9iLiBDb25zaWRlciBhZGRpbmcgd29ya2VyLXNyYyBibG9iOjsgdG8geW91ciBDU1BcIik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG52YXIgZmFsbGJhY2tUaW1lcnMgPSAoKSA9PiB7XG4gIGNvbnN0IHNldFRpbWVvdXQgPSBnbG9iYWxUaGlzLnNldFRpbWVvdXQuYmluZChnbG9iYWxUaGlzKTtcbiAgY29uc3Qgc2V0SW50ZXJ2YWwgPSBnbG9iYWxUaGlzLnNldEludGVydmFsLmJpbmQoZ2xvYmFsVGhpcyk7XG4gIGNvbnN0IGNsZWFyVGltZW91dCA9IGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0LmJpbmQoZ2xvYmFsVGhpcyk7XG4gIGNvbnN0IGNsZWFySW50ZXJ2YWwgPSBnbG9iYWxUaGlzLmNsZWFySW50ZXJ2YWwuYmluZChnbG9iYWxUaGlzKTtcbiAgcmV0dXJuIHsgc2V0VGltZW91dCwgc2V0SW50ZXJ2YWwsIGNsZWFyVGltZW91dCwgY2xlYXJJbnRlcnZhbCwgY2xlYW51cDogbm9vcCB9O1xufTtcbnZhciBjcmVhdGVXb3JrZXJUaW1lcnMgPSAoKSA9PiB7XG4gIGxldCBpZCA9IDA7XG4gIGNvbnN0IGdlbmVyYXRlSWQgPSAoKSA9PiBpZCsrO1xuICBjb25zdCBjYWxsYmFja3MgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBjb25zdCBwb3N0ID0gKHcsIHApID0+IHcgPT0gbnVsbCA/IHZvaWQgMCA6IHcucG9zdE1lc3NhZ2UocCk7XG4gIGNvbnN0IGhhbmRsZU1lc3NhZ2UgPSAoZSkgPT4ge1xuICAgIHZhciBfYTtcbiAgICAoX2EgPSBjYWxsYmFja3MuZ2V0KGUuZGF0YS5pZCkpID09IG51bGwgPyB2b2lkIDAgOiBfYSgpO1xuICB9O1xuICBsZXQgd29ya2VyID0gY3JlYXRlV2ViV29ya2VyKHdvcmtlclRpbWVyc193b3JrZXJfZGVmYXVsdCwgeyBuYW1lOiBcImNsZXJrLXRpbWVyc1wiIH0pO1xuICB3b3JrZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHdvcmtlci5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBoYW5kbGVNZXNzYWdlKTtcbiAgaWYgKCF3b3JrZXIpIHtcbiAgICByZXR1cm4gZmFsbGJhY2tUaW1lcnMoKTtcbiAgfVxuICBjb25zdCBpbml0ID0gKCkgPT4ge1xuICAgIGlmICghd29ya2VyKSB7XG4gICAgICB3b3JrZXIgPSBjcmVhdGVXZWJXb3JrZXIod29ya2VyVGltZXJzX3dvcmtlcl9kZWZhdWx0LCB7IG5hbWU6IFwiY2xlcmstdGltZXJzXCIgfSk7XG4gICAgICB3b3JrZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHdvcmtlci5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBoYW5kbGVNZXNzYWdlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gICAgaWYgKHdvcmtlcikge1xuICAgICAgd29ya2VyLnRlcm1pbmF0ZSgpO1xuICAgICAgd29ya2VyID0gbnVsbDtcbiAgICAgIGNhbGxiYWNrcy5jbGVhcigpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgc2V0VGltZW91dCA9IChjYiwgbXMpID0+IHtcbiAgICBpbml0KCk7XG4gICAgY29uc3QgaWQyID0gZ2VuZXJhdGVJZCgpO1xuICAgIGNhbGxiYWNrcy5zZXQoaWQyLCBjYik7XG4gICAgcG9zdCh3b3JrZXIsIHsgdHlwZTogXCJzZXRUaW1lb3V0XCIsIGlkOiBpZDIsIG1zIH0pO1xuICAgIHJldHVybiBpZDI7XG4gIH07XG4gIGNvbnN0IHNldEludGVydmFsID0gKGNiLCBtcykgPT4ge1xuICAgIGluaXQoKTtcbiAgICBjb25zdCBpZDIgPSBnZW5lcmF0ZUlkKCk7XG4gICAgY2FsbGJhY2tzLnNldChpZDIsIGNiKTtcbiAgICBwb3N0KHdvcmtlciwgeyB0eXBlOiBcInNldEludGVydmFsXCIsIGlkOiBpZDIsIG1zIH0pO1xuICAgIHJldHVybiBpZDI7XG4gIH07XG4gIGNvbnN0IGNsZWFyVGltZW91dCA9IChpZDIpID0+IHtcbiAgICBpbml0KCk7XG4gICAgY2FsbGJhY2tzLmRlbGV0ZShpZDIpO1xuICAgIHBvc3Qod29ya2VyLCB7IHR5cGU6IFwiY2xlYXJUaW1lb3V0XCIsIGlkOiBpZDIgfSk7XG4gIH07XG4gIGNvbnN0IGNsZWFySW50ZXJ2YWwgPSAoaWQyKSA9PiB7XG4gICAgaW5pdCgpO1xuICAgIGNhbGxiYWNrcy5kZWxldGUoaWQyKTtcbiAgICBwb3N0KHdvcmtlciwgeyB0eXBlOiBcImNsZWFySW50ZXJ2YWxcIiwgaWQ6IGlkMiB9KTtcbiAgfTtcbiAgcmV0dXJuIHsgc2V0VGltZW91dCwgc2V0SW50ZXJ2YWwsIGNsZWFyVGltZW91dCwgY2xlYXJJbnRlcnZhbCwgY2xlYW51cCB9O1xufTtcblxuLy8gc3JjL3BvbGxlci50c1xuZnVuY3Rpb24gUG9sbGVyKHsgZGVsYXlJbk1zIH0gPSB7IGRlbGF5SW5NczogMWUzIH0pIHtcbiAgY29uc3Qgd29ya2VyVGltZXJzID0gY3JlYXRlV29ya2VyVGltZXJzKCk7XG4gIGxldCB0aW1lcklkO1xuICBsZXQgc3RvcHBlZCA9IGZhbHNlO1xuICBjb25zdCBzdG9wID0gKCkgPT4ge1xuICAgIGlmICh0aW1lcklkKSB7XG4gICAgICB3b3JrZXJUaW1lcnMuY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xuICAgICAgd29ya2VyVGltZXJzLmNsZWFudXAoKTtcbiAgICB9XG4gICAgc3RvcHBlZCA9IHRydWU7XG4gIH07XG4gIGNvbnN0IHJ1biA9IGFzeW5jIChjYikgPT4ge1xuICAgIHN0b3BwZWQgPSBmYWxzZTtcbiAgICBhd2FpdCBjYihzdG9wKTtcbiAgICBpZiAoc3RvcHBlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aW1lcklkID0gd29ya2VyVGltZXJzLnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdm9pZCBydW4oY2IpO1xuICAgIH0sIGRlbGF5SW5Ncyk7XG4gIH07XG4gIHJldHVybiB7IHJ1biwgc3RvcCB9O1xufVxuXG5leHBvcnQge1xuICBub29wLFxuICBjcmVhdGVXb3JrZXJUaW1lcnMsXG4gIFBvbGxlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVhQWUpRVU03Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: function() { return /* binding */ buildPublishableKey; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* binding */ createDevOrStagingUrlCache; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* binding */ isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* binding */ isDevelopmentFromSecretKey; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* binding */ isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* binding */ isProductionFromSecretKey; },\n/* harmony export */   isPublishableKey: function() { return /* binding */ isPublishableKey; },\n/* harmony export */   parsePublishableKey: function() { return /* binding */ parsePublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n  const isDevKey = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) || frontendApi.startsWith(\"clerk.\") && _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__.LEGACY_DEV_INSTANCE_SUFFIXES.some((s) => frontendApi.endsWith(s));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${(0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key, options = {}) {\n  key = key || \"\";\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal) {\n      throw new Error(\"Publishable key not valid.\");\n    }\n    return null;\n  }\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n  let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n  frontendApi = frontendApi.slice(0, -1);\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== \"development\" && options.domain) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n  return {\n    instanceType,\n    frontendApi\n  };\n}\nfunction isPublishableKey(key) {\n  key = key || \"\";\n  const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n  const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n  return hasValidPrefix && hasValidFrontendApiPostfix;\n}\nfunction createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = /* @__PURE__ */ new Map();\n  return {\n    isDevOrStagingUrl: (url) => {\n      if (!url) {\n        return false;\n      }\n      const hostname = typeof url === \"string\" ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === void 0) {\n        res = _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__.DEV_OR_STAGING_SUFFIXES.some((s) => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    }\n  };\n}\nfunction isDevelopmentFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"pk_test_\");\n}\nfunction isProductionFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"pk_live_\");\n}\nfunction isDevelopmentFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\n\n\n//# sourceMappingURL=chunk-ZXFUQ6LY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1aWEZVUTZMWS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFOEI7QUFHQTtBQUlBOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsRUFBRSxPQUFPLElBQUk7QUFDcEU7QUFDQSwrR0FBK0csNkVBQTRCO0FBQzNJO0FBQ0EsWUFBWSxVQUFVLEVBQUUsbUVBQWMsSUFBSSxZQUFZLElBQUk7QUFDMUQ7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtRUFBYztBQUNsQztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkJBQTJCLGVBQWU7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG1FQUFjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0VBQXVCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFXRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1aWEZVUTZMWS5tanM/ZDYwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufSBmcm9tIFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCB7XG4gIGlzb21vcnBoaWNCdG9hXG59IGZyb20gXCIuL2NodW5rLUtPSDdHVEpPLm1qc1wiO1xuaW1wb3J0IHtcbiAgREVWX09SX1NUQUdJTkdfU1VGRklYRVMsXG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVNcbn0gZnJvbSBcIi4vY2h1bmstWDJGWVI1VTYubWpzXCI7XG5cbi8vIHNyYy9rZXlzLnRzXG52YXIgUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYID0gXCJwa19saXZlX1wiO1xudmFyIFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCA9IFwicGtfdGVzdF9cIjtcbnZhciBQVUJMSVNIQUJMRV9GUk9OVEVORF9BUElfREVWX1JFR0VYID0gL14oKFthLXpdKyktKXsyfShbMC05XXsxLDJ9KVxcLmNsZXJrXFwuYWNjb3VudHMoW2Etei5dKikoZGV2fGNvbSkkL2k7XG5mdW5jdGlvbiBidWlsZFB1Ymxpc2hhYmxlS2V5KGZyb250ZW5kQXBpKSB7XG4gIGNvbnN0IGlzRGV2S2V5ID0gUFVCTElTSEFCTEVfRlJPTlRFTkRfQVBJX0RFVl9SRUdFWC50ZXN0KGZyb250ZW5kQXBpKSB8fCBmcm9udGVuZEFwaS5zdGFydHNXaXRoKFwiY2xlcmsuXCIpICYmIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgocykgPT4gZnJvbnRlbmRBcGkuZW5kc1dpdGgocykpO1xuICBjb25zdCBrZXlQcmVmaXggPSBpc0RldktleSA/IFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCA6IFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWDtcbiAgcmV0dXJuIGAke2tleVByZWZpeH0ke2lzb21vcnBoaWNCdG9hKGAke2Zyb250ZW5kQXBpfSRgKX1gO1xufVxuZnVuY3Rpb24gcGFyc2VQdWJsaXNoYWJsZUtleShrZXksIG9wdGlvbnMgPSB7fSkge1xuICBrZXkgPSBrZXkgfHwgXCJcIjtcbiAgaWYgKCFrZXkgfHwgIWlzUHVibGlzaGFibGVLZXkoa2V5KSkge1xuICAgIGlmIChvcHRpb25zLmZhdGFsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaXNoYWJsZSBrZXkgbm90IHZhbGlkLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgaW5zdGFuY2VUeXBlID0ga2V5LnN0YXJ0c1dpdGgoUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYKSA/IFwicHJvZHVjdGlvblwiIDogXCJkZXZlbG9wbWVudFwiO1xuICBsZXQgZnJvbnRlbmRBcGkgPSBpc29tb3JwaGljQXRvYihrZXkuc3BsaXQoXCJfXCIpWzJdKTtcbiAgZnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5zbGljZSgwLCAtMSk7XG4gIGlmIChvcHRpb25zLnByb3h5VXJsKSB7XG4gICAgZnJvbnRlbmRBcGkgPSBvcHRpb25zLnByb3h5VXJsO1xuICB9IGVsc2UgaWYgKGluc3RhbmNlVHlwZSAhPT0gXCJkZXZlbG9wbWVudFwiICYmIG9wdGlvbnMuZG9tYWluKSB7XG4gICAgZnJvbnRlbmRBcGkgPSBgY2xlcmsuJHtvcHRpb25zLmRvbWFpbn1gO1xuICB9XG4gIHJldHVybiB7XG4gICAgaW5zdGFuY2VUeXBlLFxuICAgIGZyb250ZW5kQXBpXG4gIH07XG59XG5mdW5jdGlvbiBpc1B1Ymxpc2hhYmxlS2V5KGtleSkge1xuICBrZXkgPSBrZXkgfHwgXCJcIjtcbiAgY29uc3QgaGFzVmFsaWRQcmVmaXggPSBrZXkuc3RhcnRzV2l0aChQVUJMSVNIQUJMRV9LRVlfTElWRV9QUkVGSVgpIHx8IGtleS5zdGFydHNXaXRoKFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCk7XG4gIGNvbnN0IGhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4ID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSB8fCBcIlwiKS5lbmRzV2l0aChcIiRcIik7XG4gIHJldHVybiBoYXNWYWxpZFByZWZpeCAmJiBoYXNWYWxpZEZyb250ZW5kQXBpUG9zdGZpeDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlKCkge1xuICBjb25zdCBkZXZPclN0YWdpbmdVcmxDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIHJldHVybiB7XG4gICAgaXNEZXZPclN0YWdpbmdVcmw6ICh1cmwpID0+IHtcbiAgICAgIGlmICghdXJsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGhvc3RuYW1lID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIiA/IHVybCA6IHVybC5ob3N0bmFtZTtcbiAgICAgIGxldCByZXMgPSBkZXZPclN0YWdpbmdVcmxDYWNoZS5nZXQoaG9zdG5hbWUpO1xuICAgICAgaWYgKHJlcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHJlcyA9IERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLnNvbWUoKHMpID0+IGhvc3RuYW1lLmVuZHNXaXRoKHMpKTtcbiAgICAgICAgZGV2T3JTdGFnaW5nVXJsQ2FjaGUuc2V0KGhvc3RuYW1lLCByZXMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJ0ZXN0X1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX3Rlc3RfXCIpO1xufVxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX2xpdmVfXCIpO1xufVxuZnVuY3Rpb24gaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkoYXBpS2V5KSB7XG4gIHJldHVybiBhcGlLZXkuc3RhcnRzV2l0aChcInRlc3RfXCIpIHx8IGFwaUtleS5zdGFydHNXaXRoKFwic2tfdGVzdF9cIik7XG59XG5mdW5jdGlvbiBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInNrX2xpdmVfXCIpO1xufVxuXG5leHBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVpYRlVRNkxZLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/error.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/error.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError; },\n/* harmony export */   EmailLinkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode; },\n/* harmony export */   buildErrorThrower: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower; },\n/* harmony export */   is4xxError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError; },\n/* harmony export */   isEmailLinkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError; },\n/* harmony export */   isKnownError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError; },\n/* harmony export */   isMetamaskError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError; },\n/* harmony export */   isPasswordPwnedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isPasswordPwnedError; },\n/* harmony export */   isUnauthorizedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError; },\n/* harmony export */   parseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError; },\n/* harmony export */   parseErrors: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors; }\n/* harmony export */ });\n/* harmony import */ var _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-46BSODPS.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceMappingURL=error.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9lcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCOEI7QUFDQTtBQW1CNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzP2M5NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzUGFzc3dvcmRQd25lZEVycm9yLFxuICBpc1VuYXV0aG9yaXplZEVycm9yLFxuICBpc1VzZXJMb2NrZWRFcnJvcixcbiAgcGFyc2VFcnJvcixcbiAgcGFyc2VFcnJvcnNcbn0gZnJvbSBcIi4vY2h1bmstNDZCU09EUFMubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzUGFzc3dvcmRQd25lZEVycm9yLFxuICBpc1VuYXV0aG9yaXplZEVycm9yLFxuICBpc1VzZXJMb2NrZWRFcnJvcixcbiAgcGFyc2VFcnJvcixcbiAgcGFyc2VFcnJvcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/error.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/handleValueOrFn.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/handleValueOrFn.mjs ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: function() { return /* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__.handleValueOrFn; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceMappingURL=handleValueOrFn.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9oYW5kbGVWYWx1ZU9yRm4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4QjtBQUNBO0FBRzVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9jbGVyay1yZWFjdC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2hhbmRsZVZhbHVlT3JGbi5tanM/YmFiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn0gZnJvbSBcIi4vY2h1bmstVFJXTUhPRFUubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFuZGxlVmFsdWVPckZuLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/handleValueOrFn.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/index.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/index.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.CURRENT_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   ClerkAPIResponseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.ClerkAPIResponseError; },\n/* harmony export */   ClerkRuntimeError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.ClerkRuntimeError; },\n/* harmony export */   DEV_BROWSER_JWT_KEY: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_7__.DEV_BROWSER_JWT_KEY; },\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.DEV_OR_STAGING_SUFFIXES; },\n/* harmony export */   EmailLinkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.EmailLinkError; },\n/* harmony export */   EmailLinkErrorCode: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.EmailLinkErrorCode; },\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.LEGACY_DEV_INSTANCE_SUFFIXES; },\n/* harmony export */   LOCAL_API_URL: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.LOCAL_API_URL; },\n/* harmony export */   LOCAL_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.LOCAL_ENV_SUFFIXES; },\n/* harmony export */   LocalStorageBroadcastChannel: function() { return /* reexport safe */ _chunk_RSOCGYTF_mjs__WEBPACK_IMPORTED_MODULE_2__.LocalStorageBroadcastChannel; },\n/* harmony export */   PROD_API_URL: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.PROD_API_URL; },\n/* harmony export */   Poller: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__.Poller; },\n/* harmony export */   STAGING_API_URL: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.STAGING_API_URL; },\n/* harmony export */   STAGING_ENV_SUFFIXES: function() { return /* reexport safe */ _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__.STAGING_ENV_SUFFIXES; },\n/* harmony export */   addClerkPrefix: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix; },\n/* harmony export */   addYears: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__.addYears; },\n/* harmony export */   apiUrlFromPublishableKey: function() { return /* reexport safe */ _chunk_G6V773WF_mjs__WEBPACK_IMPORTED_MODULE_11__.apiUrlFromPublishableKey; },\n/* harmony export */   applyFunctionToObj: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_3__.applyFunctionToObj; },\n/* harmony export */   buildErrorThrower: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.buildErrorThrower; },\n/* harmony export */   buildPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.buildPublishableKey; },\n/* harmony export */   callWithRetry: function() { return /* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_16__.callWithRetry; },\n/* harmony export */   camelToSnake: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.camelToSnake; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes; },\n/* harmony export */   colorToSameTypeString: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.colorToSameTypeString; },\n/* harmony export */   createDeferredPromise: function() { return /* binding */ createDeferredPromise; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.createDevOrStagingUrlCache; },\n/* harmony export */   createWorkerTimers: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__.createWorkerTimers; },\n/* harmony export */   dateTo12HourTime: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__.dateTo12HourTime; },\n/* harmony export */   deepCamelToSnake: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.deepCamelToSnake; },\n/* harmony export */   deepSnakeToCamel: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.deepSnakeToCamel; },\n/* harmony export */   deprecated: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.deprecated; },\n/* harmony export */   deprecatedObjectProperty: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.deprecatedObjectProperty; },\n/* harmony export */   deprecatedProperty: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.deprecatedProperty; },\n/* harmony export */   differenceInCalendarDays: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__.differenceInCalendarDays; },\n/* harmony export */   extension: function() { return /* reexport safe */ _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_9__.extension; },\n/* harmony export */   extractDevBrowserJWTFromURL: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_7__.extractDevBrowserJWTFromURL; },\n/* harmony export */   filterProps: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_3__.filterProps; },\n/* harmony export */   formatRelative: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__.formatRelative; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag; },\n/* harmony export */   getNonUndefinedValues: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.getNonUndefinedValues; },\n/* harmony export */   getScriptUrl: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl; },\n/* harmony export */   handleValueOrFn: function() { return /* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_10__.handleValueOrFn; },\n/* harmony export */   hasAlpha: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.hasAlpha; },\n/* harmony export */   hasLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash; },\n/* harmony export */   hexStringToRgbaColor: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.hexStringToRgbaColor; },\n/* harmony export */   inBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__.inBrowser; },\n/* harmony export */   is4xxError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.is4xxError; },\n/* harmony export */   isBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__.isBrowserOnline; },\n/* harmony export */   isClerkAPIResponseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isClerkAPIResponseError; },\n/* harmony export */   isClerkRuntimeError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isClerkRuntimeError; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isDevelopmentEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.isDevelopmentEnvironment; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.isDevelopmentFromSecretKey; },\n/* harmony export */   isEmailLinkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isEmailLinkError; },\n/* harmony export */   isHSLColor: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isHSLColor; },\n/* harmony export */   isHttpOrHttps: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isHttpOrHttps; },\n/* harmony export */   isIPV4Address: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.isIPV4Address; },\n/* harmony export */   isKnownError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isKnownError; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isMetamaskError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isMetamaskError; },\n/* harmony export */   isNetworkError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isNetworkError; },\n/* harmony export */   isNonEmptyURL: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL; },\n/* harmony export */   isPasswordPwnedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isPasswordPwnedError; },\n/* harmony export */   isProductionEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.isProductionEnvironment; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.isProductionFromSecretKey; },\n/* harmony export */   isProxyUrlRelative: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isProxyUrlRelative; },\n/* harmony export */   isPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.isPublishableKey; },\n/* harmony export */   isRGBColor: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isRGBColor; },\n/* harmony export */   isStaging: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isStaging; },\n/* harmony export */   isTestEnvironment: function() { return /* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.isTestEnvironment; },\n/* harmony export */   isTransparent: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isTransparent; },\n/* harmony export */   isTruthy: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.isTruthy; },\n/* harmony export */   isUnauthorizedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isUnauthorizedError; },\n/* harmony export */   isUserLockedError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.isUserLockedError; },\n/* harmony export */   isValidBrowser: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__.isValidBrowser; },\n/* harmony export */   isValidBrowserOnline: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__.isValidBrowserOnline; },\n/* harmony export */   isValidHexString: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isValidHexString; },\n/* harmony export */   isValidHslaString: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isValidHslaString; },\n/* harmony export */   isValidProxyUrl: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.isValidProxyUrl; },\n/* harmony export */   isValidRgbaString: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.isValidRgbaString; },\n/* harmony export */   isomorphicAtob: function() { return /* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_13__.isomorphicAtob; },\n/* harmony export */   isomorphicBtoa: function() { return /* reexport safe */ _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_14__.isomorphicBtoa; },\n/* harmony export */   joinURL: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL; },\n/* harmony export */   loadScript: function() { return /* reexport safe */ _chunk_AOO6TJNL_mjs__WEBPACK_IMPORTED_MODULE_1__.loadScript; },\n/* harmony export */   logErrorInDevMode: function() { return /* binding */ logErrorInDevMode; },\n/* harmony export */   noop: function() { return /* reexport safe */ _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__.noop; },\n/* harmony export */   normalizeDate: function() { return /* reexport safe */ _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__.normalizeDate; },\n/* harmony export */   parseError: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.parseError; },\n/* harmony export */   parseErrors: function() { return /* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__.parseErrors; },\n/* harmony export */   parsePublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__.parsePublishableKey; },\n/* harmony export */   parseSearchParams: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams; },\n/* harmony export */   proxyUrlToAbsoluteURL: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__.proxyUrlToAbsoluteURL; },\n/* harmony export */   readJSONFile: function() { return /* reexport safe */ _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_9__.readJSONFile; },\n/* harmony export */   removeUndefined: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_3__.removeUndefined; },\n/* harmony export */   runWithExponentialBackOff: function() { return /* binding */ runWithExponentialBackOff; },\n/* harmony export */   setDevBrowserJWTInURL: function() { return /* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_7__.setDevBrowserJWTInURL; },\n/* harmony export */   snakeToCamel: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.snakeToCamel; },\n/* harmony export */   stringToHslaColor: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.stringToHslaColor; },\n/* harmony export */   stringToSameTypeColor: function() { return /* reexport safe */ _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__.stringToSameTypeColor; },\n/* harmony export */   stripScheme: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme; },\n/* harmony export */   titleize: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.titleize; },\n/* harmony export */   toSentence: function() { return /* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__.toSentence; },\n/* harmony export */   userAgentIsRobot: function() { return /* reexport safe */ _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__.userAgentIsRobot; },\n/* harmony export */   withLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash; },\n/* harmony export */   without: function() { return /* reexport safe */ _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_3__.without; },\n/* harmony export */   withoutLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L45N5DM5.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs\");\n/* harmony import */ var _chunk_AOO6TJNL_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-AOO6TJNL.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-AOO6TJNL.mjs\");\n/* harmony import */ var _chunk_RSOCGYTF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-RSOCGYTF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs\");\n/* harmony import */ var _chunk_CFXQSUF6_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-CFXQSUF6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-CFXQSUF6.mjs\");\n/* harmony import */ var _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-XPYJQUM7.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-XPYJQUM7.mjs\");\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-E6T5KUVH.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\");\n/* harmony import */ var _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chunk-K64INQ4C.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\");\n/* harmony import */ var _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chunk-46BSODPS.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs\");\n/* harmony import */ var _chunk_5JU2E5TY_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./chunk-5JU2E5TY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-5JU2E5TY.mjs\");\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_G6V773WF_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk-G6V773WF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-G6V773WF.mjs\");\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_LJ4R7M7R_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./chunk-LJ4R7M7R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-LJ4R7M7R.mjs\");\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_WUG2DC4W_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./chunk-WUG2DC4W.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-WUG2DC4W.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_FSKKI4LG_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./chunk-FSKKI4LG.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-FSKKI4LG.mjs\");\n/* harmony import */ var _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./chunk-IC4FGZI3.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/utils/createDeferredPromise.ts\nvar createDeferredPromise = () => {\n  let resolve = _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__.noop;\n  let reject = _chunk_XPYJQUM7_mjs__WEBPACK_IMPORTED_MODULE_4__.noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n\n// src/utils/logErrorInDevMode.ts\nvar logErrorInDevMode = (message) => {\n  if ((0,_chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_20__.isDevelopmentEnvironment)()) {\n    console.error(`Clerk: ${message}`);\n  }\n};\n\n// src/utils/runWithExponentialBackOff.ts\nvar defaultOptions = {\n  firstDelay: 125,\n  maxDelay: 0,\n  timeMultiple: 2,\n  shouldRetry: () => true\n};\nvar sleep = async (ms) => new Promise((s) => setTimeout(s, ms));\nvar createExponentialDelayAsyncFn = (opts) => {\n  let timesCalled = 0;\n  const calculateDelayInMs = () => {\n    const constant = opts.firstDelay;\n    const base = opts.timeMultiple;\n    const delay = constant * Math.pow(base, timesCalled);\n    return Math.min(opts.maxDelay || delay, delay);\n  };\n  return async () => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\nvar runWithExponentialBackOff = async (callback, options = {}) => {\n  let iterationsCount = 0;\n  const { shouldRetry, firstDelay, maxDelay, timeMultiple } = {\n    ...defaultOptions,\n    ...options\n  };\n  const delay = createExponentialDelayAsyncFn({ firstDelay, maxDelay, timeMultiple });\n  while (true) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterationsCount++;\n      if (!shouldRetry(e, iterationsCount)) {\n        throw e;\n      }\n      await delay();\n    }\n  }\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/keys.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/keys.mjs ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.buildPublishableKey; },\n/* harmony export */   createDevOrStagingUrlCache: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.createDevOrStagingUrlCache; },\n/* harmony export */   isDevelopmentFromPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromPublishableKey; },\n/* harmony export */   isDevelopmentFromSecretKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromSecretKey; },\n/* harmony export */   isProductionFromPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromPublishableKey; },\n/* harmony export */   isProductionFromSecretKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromSecretKey; },\n/* harmony export */   isPublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isPublishableKey; },\n/* harmony export */   parsePublishableKey: function() { return /* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey; }\n/* harmony export */ });\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n\n\n\n//# sourceMappingURL=keys.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9rZXlzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBUzhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qva2V5cy5tanM/NDExMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufSBmcm9tIFwiLi9jaHVuay1aWEZVUTZMWS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVEVUR1RFSTIubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUtPSDdHVEpPLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1YMkZZUjVVNi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleXMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/keys.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/loadScript.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/loadScript.mjs ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadScript: function() { return /* reexport safe */ _chunk_AOO6TJNL_mjs__WEBPACK_IMPORTED_MODULE_0__.loadScript; }\n/* harmony export */ });\n/* harmony import */ var _chunk_AOO6TJNL_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-AOO6TJNL.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-AOO6TJNL.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceMappingURL=loadScript.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9sb2FkU2NyaXB0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9sb2FkU2NyaXB0Lm1qcz9iZjBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGxvYWRTY3JpcHRcbn0gZnJvbSBcIi4vY2h1bmstQU9PNlRKTkwubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgbG9hZFNjcmlwdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvYWRTY3JpcHQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/loadScript.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/proxy.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/proxy.mjs ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isHttpOrHttps; },\n/* harmony export */   isProxyUrlRelative: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isProxyUrlRelative; },\n/* harmony export */   isValidProxyUrl: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidProxyUrl; },\n/* harmony export */   proxyUrlToAbsoluteURL: function() { return /* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.proxyUrlToAbsoluteURL; }\n/* harmony export */ });\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceMappingURL=proxy.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSzhCO0FBQ0E7QUFNNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvcHJveHkubWpzPzBmMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNIdHRwT3JIdHRwcyxcbiAgaXNQcm94eVVybFJlbGF0aXZlLFxuICBpc1ZhbGlkUHJveHlVcmwsXG4gIHByb3h5VXJsVG9BYnNvbHV0ZVVSTFxufSBmcm9tIFwiLi9jaHVuay02TkRHTjJJVS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIGlzVmFsaWRQcm94eVVybCxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJveHkubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/proxy.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/react/index.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/react/index.mjs ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkInstanceContext: function() { return /* binding */ ClerkInstanceContext; },\n/* harmony export */   ClientContext: function() { return /* binding */ ClientContext; },\n/* harmony export */   OrganizationProvider: function() { return /* binding */ OrganizationProvider; },\n/* harmony export */   SessionContext: function() { return /* binding */ SessionContext; },\n/* harmony export */   UserContext: function() { return /* binding */ UserContext; },\n/* harmony export */   assertContextExists: function() { return /* binding */ assertContextExists; },\n/* harmony export */   createContextAndHook: function() { return /* binding */ createContextAndHook; },\n/* harmony export */   isDeeplyEqual: function() { return /* binding */ isDeeplyEqual; },\n/* harmony export */   useAssertWrappedByClerkProvider: function() { return /* binding */ useAssertWrappedByClerkProvider; },\n/* harmony export */   useClerk: function() { return /* binding */ useClerk; },\n/* harmony export */   useClerkInstanceContext: function() { return /* binding */ useClerkInstanceContext; },\n/* harmony export */   useClientContext: function() { return /* binding */ useClientContext; },\n/* harmony export */   useDeepEqualMemo: function() { return /* binding */ useDeepEqualMemo; },\n/* harmony export */   useOrganization: function() { return /* binding */ useOrganization; },\n/* harmony export */   useOrganizationContext: function() { return /* binding */ useOrganizationContext; },\n/* harmony export */   useOrganizationList: function() { return /* binding */ useOrganizationList; },\n/* harmony export */   useSafeLayoutEffect: function() { return /* binding */ useSafeLayoutEffect; },\n/* harmony export */   useSession: function() { return /* binding */ useSession; },\n/* harmony export */   useSessionContext: function() { return /* binding */ useSessionContext; },\n/* harmony export */   useSessionList: function() { return /* binding */ useSessionList; },\n/* harmony export */   useUser: function() { return /* binding */ useUser; },\n/* harmony export */   useUserContext: function() { return /* binding */ useUserContext; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-TUVJ3GI6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr */ \"(app-pages-browser)/./node_modules/swr/core/dist/index.mjs\");\n/* harmony import */ var swr_infinite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! swr/infinite */ \"(app-pages-browser)/./node_modules/swr/infinite/dist/index.mjs\");\n\n\n\n// src/react/hooks/createContextAndHook.ts\n\nfunction assertContextExists(contextVal, msgOrCtx) {\n  if (!contextVal) {\n    throw typeof msgOrCtx === \"string\" ? new Error(msgOrCtx) : new Error(`${msgOrCtx.displayName} not found`);\n  }\n}\nvar createContextAndHook = (displayName, options) => {\n  const { assertCtxFn = assertContextExists } = options || {};\n  const Ctx = react__WEBPACK_IMPORTED_MODULE_2__.createContext(void 0);\n  Ctx.displayName = displayName;\n  const useCtx = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(Ctx);\n    assertCtxFn(ctx, `${displayName} not found`);\n    return ctx.value;\n  };\n  const useCtxWithoutGuarantee = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(Ctx);\n    return ctx ? ctx.value : {};\n  };\n  return [Ctx, useCtx, useCtxWithoutGuarantee];\n};\n\n// src/react/contexts.tsx\n\n\n// src/react/clerk-swr.ts\nvar clerk_swr_exports = {};\n(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__.__export)(clerk_swr_exports, {\n  SWRConfig: () => swr__WEBPACK_IMPORTED_MODULE_3__.SWRConfig,\n  useSWR: () => swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  useSWRInfinite: () => swr_infinite__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n});\n(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__.__reExport)(clerk_swr_exports, swr__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// src/react/contexts.tsx\nvar [ClerkInstanceContext, useClerkInstanceContext] = createContextAndHook(\"ClerkInstanceContext\");\nvar [UserContext, useUserContext] = createContextAndHook(\"UserContext\");\nvar [ClientContext, useClientContext] = createContextAndHook(\"ClientContext\");\nvar [SessionContext, useSessionContext] = createContextAndHook(\n  \"SessionContext\"\n);\nvar [OrganizationContextInternal, useOrganizationContext] = createContextAndHook(\"OrganizationContext\");\nvar OrganizationProvider = ({\n  children,\n  organization,\n  swrConfig\n}) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(swr__WEBPACK_IMPORTED_MODULE_3__.SWRConfig, { value: swrConfig }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2__.createElement(\n    OrganizationContextInternal.Provider,\n    {\n      value: {\n        value: { organization }\n      }\n    },\n    children\n  ));\n};\nfunction useAssertWrappedByClerkProvider(displayNameOrFn) {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_2__.useContext(ClerkInstanceContext);\n  if (!ctx) {\n    if (typeof displayNameOrFn === \"function\") {\n      displayNameOrFn();\n      return;\n    }\n    throw new Error(\n      `${displayNameOrFn} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n    );\n  }\n}\n\n// src/react/hooks/usePagesOrInfinite.ts\n\nfunction getDifferentKeys(obj1, obj2) {\n  const keysSet = new Set(Object.keys(obj2));\n  const differentKeysObject = {};\n  for (const key1 of Object.keys(obj1)) {\n    if (!keysSet.has(key1)) {\n      differentKeysObject[key1] = obj1[key1];\n    }\n  }\n  return differentKeysObject;\n}\nvar useWithSafeValues = (params, defaultValues) => {\n  var _a, _b, _c;\n  const shouldUseDefaults = typeof params === \"boolean\" && params;\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(\n    shouldUseDefaults ? defaultValues.initialPage : (_a = params == null ? void 0 : params.initialPage) != null ? _a : defaultValues.initialPage\n  );\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(shouldUseDefaults ? defaultValues.pageSize : (_b = params == null ? void 0 : params.pageSize) != null ? _b : defaultValues.pageSize);\n  const newObj = {};\n  for (const key of Object.keys(defaultValues)) {\n    newObj[key] = shouldUseDefaults ? defaultValues[key] : (_c = params == null ? void 0 : params[key]) != null ? _c : defaultValues[key];\n  }\n  return {\n    ...newObj,\n    initialPage: initialPageRef.current,\n    pageSize: pageSizeRef.current\n  };\n};\nvar cachingSWROptions = {\n  dedupingInterval: 1e3 * 60,\n  focusThrottleInterval: 1e3 * 60 * 2\n};\nvar usePagesOrInfinite = (params, fetcher, config, cacheKeys) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const [paginatedPage, setPaginatedPage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)((_a = params.initialPage) != null ? _a : 1);\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)((_b = params.initialPage) != null ? _b : 1);\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)((_c = params.pageSize) != null ? _c : 10);\n  const enabled = (_d = config.enabled) != null ? _d : true;\n  const triggerInfinite = (_e = config.infinite) != null ? _e : false;\n  const keepPreviousData = (_f = config.keepPreviousData) != null ? _f : false;\n  const pagesCacheKey = {\n    ...cacheKeys,\n    ...params,\n    initialPage: paginatedPage,\n    pageSize: pageSizeRef.current\n  };\n  const {\n    data: swrData,\n    isValidating: swrIsValidating,\n    isLoading: swrIsLoading,\n    error: swrError,\n    mutate: swrMutate\n  } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    !triggerInfinite && !!fetcher && enabled ? pagesCacheKey : null,\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher == null ? void 0 : fetcher(requestParams);\n    },\n    { keepPreviousData, ...cachingSWROptions }\n  );\n  const {\n    data: swrInfiniteData,\n    isLoading: swrInfiniteIsLoading,\n    isValidating: swrInfiniteIsValidating,\n    error: swrInfiniteError,\n    size,\n    setSize,\n    mutate: swrInfiniteMutate\n  } = (0,swr_infinite__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    (pageIndex) => {\n      if (!triggerInfinite || !enabled) {\n        return null;\n      }\n      return {\n        ...params,\n        ...cacheKeys,\n        initialPage: initialPageRef.current + pageIndex,\n        pageSize: pageSizeRef.current\n      };\n    },\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher == null ? void 0 : fetcher(requestParams);\n    },\n    cachingSWROptions\n  );\n  const page = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    if (triggerInfinite) {\n      return size;\n    }\n    return paginatedPage;\n  }, [triggerInfinite, size, paginatedPage]);\n  const fetchPage = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(\n    (numberOrgFn) => {\n      if (triggerInfinite) {\n        void setSize(numberOrgFn);\n        return;\n      }\n      return setPaginatedPage(numberOrgFn);\n    },\n    [setSize]\n  );\n  const data = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    var _a2, _b2;\n    if (triggerInfinite) {\n      return (_a2 = swrInfiniteData == null ? void 0 : swrInfiniteData.map((a) => a == null ? void 0 : a.data).flat()) != null ? _a2 : [];\n    }\n    return (_b2 = swrData == null ? void 0 : swrData.data) != null ? _b2 : [];\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const count = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => {\n    var _a2, _b2;\n    if (triggerInfinite) {\n      return ((_a2 = swrInfiniteData == null ? void 0 : swrInfiniteData[(swrInfiniteData == null ? void 0 : swrInfiniteData.length) - 1]) == null ? void 0 : _a2.total_count) || 0;\n    }\n    return (_b2 = swrData == null ? void 0 : swrData.total_count) != null ? _b2 : 0;\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const isLoading = triggerInfinite ? swrInfiniteIsLoading : swrIsLoading;\n  const isFetching = triggerInfinite ? swrInfiniteIsValidating : swrIsValidating;\n  const error = (_g = triggerInfinite ? swrInfiniteError : swrError) != null ? _g : null;\n  const isError = !!error;\n  const fetchNext = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n + 1));\n  }, [fetchPage]);\n  const fetchPrevious = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n - 1));\n  }, [fetchPage]);\n  const offsetCount = (initialPageRef.current - 1) * pageSizeRef.current;\n  const pageCount = Math.ceil((count - offsetCount) / pageSizeRef.current);\n  const hasNextPage = count - offsetCount * pageSizeRef.current > page * pageSizeRef.current;\n  const hasPreviousPage = (page - 1) * pageSizeRef.current > offsetCount * pageSizeRef.current;\n  const setData = triggerInfinite ? (value) => swrInfiniteMutate(value, {\n    revalidate: false\n  }) : (value) => swrMutate(value, {\n    revalidate: false\n  });\n  const revalidate = triggerInfinite ? () => swrInfiniteMutate() : () => swrMutate();\n  return {\n    data,\n    count,\n    error,\n    isLoading,\n    isFetching,\n    isError,\n    page,\n    pageCount,\n    fetchPage,\n    fetchNext,\n    fetchPrevious,\n    hasNextPage,\n    hasPreviousPage,\n    // Let the hook return type define this type\n    revalidate,\n    // Let the hook return type define this type\n    setData\n  };\n};\n\n// src/react/hooks/useOrganization.tsx\nvar undefinedPaginatedResource = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nvar useOrganization = (params) => {\n  var _a;\n  const {\n    domains: domainListParams,\n    membershipRequests: membershipRequestsListParams,\n    memberships: membersListParams,\n    invitations: invitationsListParams\n  } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganization\");\n  const { organization } = useOrganizationContext();\n  const session = useSessionContext();\n  const domainSafeValues = useWithSafeValues(domainListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false,\n    enrollmentMode: void 0\n  });\n  const membershipRequestSafeValues = useWithSafeValues(membershipRequestsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const membersSafeValues = useWithSafeValues(membersListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    role: void 0,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const invitationsSafeValues = useWithSafeValues(invitationsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: [\"pending\"],\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled)(\"useOrganization\"));\n  const domainParams = typeof domainListParams === \"undefined\" ? void 0 : {\n    initialPage: domainSafeValues.initialPage,\n    pageSize: domainSafeValues.pageSize,\n    enrollmentMode: domainSafeValues.enrollmentMode\n  };\n  const membershipRequestParams = typeof membershipRequestsListParams === \"undefined\" ? void 0 : {\n    initialPage: membershipRequestSafeValues.initialPage,\n    pageSize: membershipRequestSafeValues.pageSize,\n    status: membershipRequestSafeValues.status\n  };\n  const membersParams = typeof membersListParams === \"undefined\" ? void 0 : {\n    initialPage: membersSafeValues.initialPage,\n    pageSize: membersSafeValues.pageSize,\n    role: membersSafeValues.role\n  };\n  const invitationsParams = typeof invitationsListParams === \"undefined\" ? void 0 : {\n    initialPage: invitationsSafeValues.initialPage,\n    pageSize: invitationsSafeValues.pageSize,\n    status: invitationsSafeValues.status\n  };\n  const domains = usePagesOrInfinite(\n    {\n      ...domainParams\n    },\n    organization == null ? void 0 : organization.getDomains,\n    {\n      keepPreviousData: domainSafeValues.keepPreviousData,\n      infinite: domainSafeValues.infinite,\n      enabled: !!domainParams\n    },\n    {\n      type: \"domains\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const membershipRequests = usePagesOrInfinite(\n    {\n      ...membershipRequestParams\n    },\n    organization == null ? void 0 : organization.getMembershipRequests,\n    {\n      keepPreviousData: membershipRequestSafeValues.keepPreviousData,\n      infinite: membershipRequestSafeValues.infinite,\n      enabled: !!membershipRequestParams\n    },\n    {\n      type: \"membershipRequests\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const memberships = usePagesOrInfinite(\n    membersParams || {},\n    organization == null ? void 0 : organization.getMemberships,\n    {\n      keepPreviousData: membersSafeValues.keepPreviousData,\n      infinite: membersSafeValues.infinite,\n      enabled: !!membersParams\n    },\n    {\n      type: \"members\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...invitationsParams\n    },\n    organization == null ? void 0 : organization.getInvitations,\n    {\n      keepPreviousData: invitationsSafeValues.keepPreviousData,\n      infinite: invitationsSafeValues.infinite,\n      enabled: !!invitationsParams\n    },\n    {\n      type: \"invitations\",\n      organizationId: organization == null ? void 0 : organization.id\n    }\n  );\n  if (organization === void 0) {\n    return {\n      isLoaded: false,\n      organization: void 0,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource\n    };\n  }\n  if (organization === null) {\n    return {\n      isLoaded: true,\n      organization: null,\n      membership: null,\n      domains: null,\n      membershipRequests: null,\n      memberships: null,\n      invitations: null\n    };\n  }\n  if (!clerk.loaded && organization) {\n    return {\n      isLoaded: true,\n      organization,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource\n    };\n  }\n  return {\n    isLoaded: clerk.loaded,\n    organization,\n    membership: getCurrentOrganizationMembership(session.user.organizationMemberships, organization.id),\n    // your membership in the current org\n    domains,\n    membershipRequests,\n    memberships,\n    invitations\n  };\n};\nfunction getCurrentOrganizationMembership(organizationMemberships, activeOrganizationId) {\n  return organizationMemberships.find(\n    (organizationMembership) => organizationMembership.organization.id === activeOrganizationId\n  );\n}\n\n// src/react/hooks/useOrganizationList.tsx\nvar undefinedPaginatedResource2 = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nvar useOrganizationList = (params) => {\n  var _a;\n  const { userMemberships, userInvitations, userSuggestions } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganizationList\");\n  const userMembershipsSafeValues = useWithSafeValues(userMemberships, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userInvitationsSafeValues = useWithSafeValues(userInvitations, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userSuggestionsSafeValues = useWithSafeValues(userSuggestions, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  const user = useUserContext();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled)(\"useOrganizationList\"));\n  const userMembershipsParams = typeof userMemberships === \"undefined\" ? void 0 : {\n    initialPage: userMembershipsSafeValues.initialPage,\n    pageSize: userMembershipsSafeValues.pageSize\n  };\n  const userInvitationsParams = typeof userInvitations === \"undefined\" ? void 0 : {\n    initialPage: userInvitationsSafeValues.initialPage,\n    pageSize: userInvitationsSafeValues.pageSize,\n    status: userInvitationsSafeValues.status\n  };\n  const userSuggestionsParams = typeof userSuggestions === \"undefined\" ? void 0 : {\n    initialPage: userSuggestionsSafeValues.initialPage,\n    pageSize: userSuggestionsSafeValues.pageSize,\n    status: userSuggestionsSafeValues.status\n  };\n  const isClerkLoaded = !!(clerk.loaded && user);\n  const memberships = usePagesOrInfinite(\n    userMembershipsParams || {},\n    user == null ? void 0 : user.getOrganizationMemberships,\n    {\n      keepPreviousData: userMembershipsSafeValues.keepPreviousData,\n      infinite: userMembershipsSafeValues.infinite,\n      enabled: !!userMembershipsParams\n    },\n    {\n      type: \"userMemberships\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...userInvitationsParams\n    },\n    user == null ? void 0 : user.getOrganizationInvitations,\n    {\n      keepPreviousData: userInvitationsSafeValues.keepPreviousData,\n      infinite: userInvitationsSafeValues.infinite,\n      enabled: !!userInvitationsParams\n    },\n    {\n      type: \"userInvitations\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  const suggestions = usePagesOrInfinite(\n    {\n      ...userSuggestionsParams\n    },\n    user == null ? void 0 : user.getOrganizationSuggestions,\n    {\n      keepPreviousData: userSuggestionsSafeValues.keepPreviousData,\n      infinite: userSuggestionsSafeValues.infinite,\n      enabled: !!userSuggestionsParams\n    },\n    {\n      type: \"userSuggestions\",\n      userId: user == null ? void 0 : user.id\n    }\n  );\n  if (!isClerkLoaded) {\n    return {\n      isLoaded: false,\n      createOrganization: void 0,\n      setActive: void 0,\n      userMemberships: undefinedPaginatedResource2,\n      userInvitations: undefinedPaginatedResource2,\n      userSuggestions: undefinedPaginatedResource2\n    };\n  }\n  return {\n    isLoaded: isClerkLoaded,\n    setActive: clerk.setActive,\n    createOrganization: clerk.createOrganization,\n    userMemberships: memberships,\n    userInvitations: invitations,\n    userSuggestions: suggestions\n  };\n};\n\n// src/react/hooks/useSafeLayoutEffect.tsx\n\nvar useSafeLayoutEffect = typeof window !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__.useEffect;\n\n// src/react/hooks/useSession.ts\nvar useSession = () => {\n  useAssertWrappedByClerkProvider(\"useSession\");\n  const session = useSessionContext();\n  if (session === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, session: void 0 };\n  }\n  if (session === null) {\n    return { isLoaded: true, isSignedIn: false, session: null };\n  }\n  return { isLoaded: true, isSignedIn: true, session };\n};\n\n// src/react/hooks/useSessionList.ts\nvar useSessionList = () => {\n  useAssertWrappedByClerkProvider(\"useSessionList\");\n  const isomorphicClerk = useClerkInstanceContext();\n  const client = useClientContext();\n  if (!client) {\n    return { isLoaded: false, sessions: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    sessions: client.sessions,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/react/hooks/useUser.ts\nfunction useUser() {\n  useAssertWrappedByClerkProvider(\"useUser\");\n  const user = useUserContext();\n  if (user === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, user: void 0 };\n  }\n  if (user === null) {\n    return { isLoaded: true, isSignedIn: false, user: null };\n  }\n  return { isLoaded: true, isSignedIn: true, user };\n}\n\n// src/react/hooks/useClerk.ts\nvar useClerk = () => {\n  useAssertWrappedByClerkProvider(\"useClerk\");\n  return useClerkInstanceContext();\n};\n\n// ../../node_modules/dequal/dist/index.mjs\nvar has = Object.prototype.hasOwnProperty;\nfunction find(iter, tar, key) {\n  for (key of iter.keys()) {\n    if (dequal(key, tar))\n      return key;\n  }\n}\nfunction dequal(foo, bar) {\n  var ctor, len, tmp;\n  if (foo === bar)\n    return true;\n  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n    if (ctor === Date)\n      return foo.getTime() === bar.getTime();\n    if (ctor === RegExp)\n      return foo.toString() === bar.toString();\n    if (ctor === Array) {\n      if ((len = foo.length) === bar.length) {\n        while (len-- && dequal(foo[len], bar[len]))\n          ;\n      }\n      return len === -1;\n    }\n    if (ctor === Set) {\n      if (foo.size !== bar.size) {\n        return false;\n      }\n      for (len of foo) {\n        tmp = len;\n        if (tmp && typeof tmp === \"object\") {\n          tmp = find(bar, tmp);\n          if (!tmp)\n            return false;\n        }\n        if (!bar.has(tmp))\n          return false;\n      }\n      return true;\n    }\n    if (ctor === Map) {\n      if (foo.size !== bar.size) {\n        return false;\n      }\n      for (len of foo) {\n        tmp = len[0];\n        if (tmp && typeof tmp === \"object\") {\n          tmp = find(bar, tmp);\n          if (!tmp)\n            return false;\n        }\n        if (!dequal(len[1], bar.get(tmp))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ctor === ArrayBuffer) {\n      foo = new Uint8Array(foo);\n      bar = new Uint8Array(bar);\n    } else if (ctor === DataView) {\n      if ((len = foo.byteLength) === bar.byteLength) {\n        while (len-- && foo.getInt8(len) === bar.getInt8(len))\n          ;\n      }\n      return len === -1;\n    }\n    if (ArrayBuffer.isView(foo)) {\n      if ((len = foo.byteLength) === bar.byteLength) {\n        while (len-- && foo[len] === bar[len])\n          ;\n      }\n      return len === -1;\n    }\n    if (!ctor || typeof foo === \"object\") {\n      len = 0;\n      for (ctor in foo) {\n        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))\n          return false;\n        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))\n          return false;\n      }\n      return Object.keys(bar).length === len;\n    }\n  }\n  return foo !== foo && bar !== bar;\n}\n\n// src/react/hooks/useDeepEqualMemo.ts\n\nvar useDeepEqualMemoize = (value) => {\n  const ref = react__WEBPACK_IMPORTED_MODULE_2__.useRef(value);\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n  }\n  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ref.current, [ref.current]);\n};\nvar useDeepEqualMemo = (factory, dependencyArray) => {\n  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(factory, useDeepEqualMemoize(dependencyArray));\n};\nvar isDeeplyEqual = dequal;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/react/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/telemetry.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/telemetry.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: function() { return /* binding */ TelemetryCollector; },\n/* harmony export */   eventComponentMounted: function() { return /* binding */ eventComponentMounted; },\n/* harmony export */   eventMethodCalled: function() { return /* reexport safe */ _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled; },\n/* harmony export */   eventPrebuiltComponentMounted: function() { return /* binding */ eventPrebuiltComponentMounted; }\n/* harmony export */ });\n/* harmony import */ var _chunk_TUVJ3GI6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TUVJ3GI6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TUVJ3GI6.mjs\");\n/* harmony import */ var _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-E6T5KUVH.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\");\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n\n\n// src/telemetry/throttler.ts\nvar DEFAULT_CACHE_TTL_MS = 864e5;\nvar _storageKey, _cacheTtl, _generateKey, generateKey_fn, _cache, cache_get, _isValidBrowser, isValidBrowser_get;\nvar TelemetryEventThrottler = class {\n  constructor() {\n    /**\n     * Generates a consistent unique key for telemetry events by sorting payload properties.\n     * This ensures that payloads with identical content in different orders produce the same key.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _generateKey);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _cache);\n    /**\n     * Checks if the browser's localStorage is supported and writable.\n     *\n     * If any of these operations fail, it indicates that localStorage is either\n     * not supported or not writable (e.g., in cases where the storage is full or\n     * the browser is in a privacy mode that restricts localStorage usage).\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _isValidBrowser);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _storageKey, \"clerk_telemetry_throttler\");\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _cacheTtl, DEFAULT_CACHE_TTL_MS);\n  }\n  isEventThrottled(payload) {\n    var _a;\n    if (!(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _isValidBrowser, isValidBrowser_get)) {\n      return false;\n    }\n    const now = Date.now();\n    const key = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _generateKey, generateKey_fn).call(this, payload);\n    const entry = (_a = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cache, cache_get)) == null ? void 0 : _a[key];\n    if (!entry) {\n      const updatedCache = {\n        ...(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cache, cache_get),\n        [key]: now\n      };\n      localStorage.setItem((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    const shouldInvalidate = entry && now - entry > (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cacheTtl);\n    if (shouldInvalidate) {\n      const updatedCache = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _cache, cache_get);\n      delete updatedCache[key];\n      localStorage.setItem((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    return !!entry;\n  }\n};\n_storageKey = new WeakMap();\n_cacheTtl = new WeakMap();\n_generateKey = new WeakSet();\ngenerateKey_fn = function(event) {\n  const { sk: _sk, pk: _pk, payload, ...rest } = event;\n  const sanitizedEvent = {\n    ...payload,\n    ...rest\n  };\n  return JSON.stringify(\n    Object.keys({\n      ...payload,\n      ...rest\n    }).sort().map((key) => sanitizedEvent[key])\n  );\n};\n_cache = new WeakSet();\ncache_get = function() {\n  const cacheString = localStorage.getItem((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n  if (!cacheString) {\n    return {};\n  }\n  return JSON.parse(cacheString);\n};\n_isValidBrowser = new WeakSet();\nisValidBrowser_get = function() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  const storage = window.localStorage;\n  if (!storage) {\n    return false;\n  }\n  try {\n    const testKey = \"test\";\n    storage.setItem(testKey, testKey);\n    storage.removeItem(testKey);\n    return true;\n  } catch (err) {\n    const isQuotaExceededError = err instanceof DOMException && // Check error names for different browsers\n    (err.name === \"QuotaExceededError\" || err.name === \"NS_ERROR_DOM_QUOTA_REACHED\");\n    if (isQuotaExceededError && storage.length > 0) {\n      storage.removeItem((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _storageKey));\n    }\n    return false;\n  }\n};\n\n// src/telemetry/collector.ts\nvar DEFAULT_CONFIG = {\n  samplingRate: 1,\n  maxBufferSize: 5,\n  // Production endpoint: https://clerk-telemetry.com\n  // Staging endpoint: https://staging.clerk-telemetry.com\n  // Local: http://localhost:8787\n  endpoint: \"https://clerk-telemetry.com\"\n};\nvar _config, _eventThrottler, _metadata, _buffer, _pendingFlush, _shouldRecord, shouldRecord_fn, _shouldBeSampled, shouldBeSampled_fn, _scheduleFlush, scheduleFlush_fn, _flush, flush_fn, _logEvent, logEvent_fn, _getSDKMetadata, getSDKMetadata_fn, _preparePayload, preparePayload_fn;\nvar TelemetryCollector = class {\n  constructor(options) {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _shouldRecord);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _shouldBeSampled);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _scheduleFlush);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _flush);\n    /**\n     * If running in debug mode, log the event and its payload to the console.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _logEvent);\n    /**\n     * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n     *\n     * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _getSDKMetadata);\n    /**\n     * Append relevant metadata from the Clerk singleton to the event payload.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _preparePayload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _config, void 0);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _eventThrottler, void 0);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _metadata, {});\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _buffer, []);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateAdd)(this, _pendingFlush, void 0);\n    var _a, _b, _c, _d, _e, _f;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _config, {\n      maxBufferSize: (_a = options.maxBufferSize) != null ? _a : DEFAULT_CONFIG.maxBufferSize,\n      samplingRate: (_b = options.samplingRate) != null ? _b : DEFAULT_CONFIG.samplingRate,\n      disabled: (_c = options.disabled) != null ? _c : false,\n      debug: (_d = options.debug) != null ? _d : false,\n      endpoint: DEFAULT_CONFIG.endpoint\n    });\n    if (!options.clerkVersion && typeof window === \"undefined\") {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = \"\";\n    } else {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion = (_e = options.clerkVersion) != null ? _e : \"\";\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk = options.sdk;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion = options.sdkVersion;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey = (_f = options.publishableKey) != null ? _f : \"\";\n    const parsedKey = (0,_chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_2__.parsePublishableKey)(options.publishableKey);\n    if (parsedKey) {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType = parsedKey.instanceType;\n    }\n    if (options.secretKey) {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey = options.secretKey.substring(0, 16);\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _eventThrottler, new TelemetryEventThrottler());\n  }\n  get isEnabled() {\n    var _a;\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType !== \"development\") {\n      return false;\n    }\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).disabled || typeof process !== \"undefined\" && (0,_chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DISABLED)) {\n      return false;\n    }\n    if (typeof window !== \"undefined\" && !!((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.webdriver)) {\n      return false;\n    }\n    return true;\n  }\n  get isDebug() {\n    return (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).debug || typeof process !== \"undefined\" && (0,_chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.CLERK_TELEMETRY_DEBUG);\n  }\n  record(event) {\n    const preparedPayload = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _preparePayload, preparePayload_fn).call(this, event.event, event.payload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _logEvent, logEvent_fn).call(this, preparedPayload.event, preparedPayload);\n    if (!(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _shouldRecord, shouldRecord_fn).call(this, preparedPayload, event.eventSamplingRate)) {\n      return;\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).push(preparedPayload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _scheduleFlush, scheduleFlush_fn).call(this);\n  }\n};\n_config = new WeakMap();\n_eventThrottler = new WeakMap();\n_metadata = new WeakMap();\n_buffer = new WeakMap();\n_pendingFlush = new WeakMap();\n_shouldRecord = new WeakSet();\nshouldRecord_fn = function(preparedPayload, eventSamplingRate) {\n  return this.isEnabled && !this.isDebug && (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _shouldBeSampled, shouldBeSampled_fn).call(this, preparedPayload, eventSamplingRate);\n};\n_shouldBeSampled = new WeakSet();\nshouldBeSampled_fn = function(preparedPayload, eventSamplingRate) {\n  const randomSeed = Math.random();\n  if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _eventThrottler).isEventThrottled(preparedPayload)) {\n    return false;\n  }\n  return randomSeed <= (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).samplingRate && (typeof eventSamplingRate === \"undefined\" || randomSeed <= eventSamplingRate);\n};\n_scheduleFlush = new WeakSet();\nscheduleFlush_fn = function() {\n  if (typeof window === \"undefined\") {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _flush, flush_fn).call(this);\n    return;\n  }\n  const isBufferFull = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer).length >= (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).maxBufferSize;\n  if (isBufferFull) {\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush)) {\n      const cancel = typeof cancelIdleCallback !== \"undefined\" ? cancelIdleCallback : clearTimeout;\n      cancel((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush));\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _flush, flush_fn).call(this);\n    return;\n  }\n  if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _pendingFlush))\n    return;\n  if (\"requestIdleCallback\" in window) {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, requestIdleCallback(() => {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _flush, flush_fn).call(this);\n    }));\n  } else {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _pendingFlush, setTimeout(() => {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _flush, flush_fn).call(this);\n    }, 0));\n  }\n};\n_flush = new WeakSet();\nflush_fn = function() {\n  fetch(new URL(\"/v1/event\", (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _config).endpoint), {\n    method: \"POST\",\n    // TODO: We send an array here with that idea that we can eventually send multiple events.\n    body: JSON.stringify({\n      events: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _buffer)\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).catch(() => void 0).then(() => {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateSet)(this, _buffer, []);\n  }).catch(() => void 0);\n};\n_logEvent = new WeakSet();\nlogEvent_fn = function(event, payload) {\n  if (!this.isDebug) {\n    return;\n  }\n  if (typeof console.groupCollapsed !== \"undefined\") {\n    console.groupCollapsed(\"[clerk/telemetry]\", event);\n    console.log(payload);\n    console.groupEnd();\n  } else {\n    console.log(\"[clerk/telemetry]\", event, payload);\n  }\n};\n_getSDKMetadata = new WeakSet();\ngetSDKMetadata_fn = function() {\n  let sdkMetadata = {\n    name: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdk,\n    version: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).sdkVersion\n  };\n  if (typeof window !== \"undefined\" && window.Clerk) {\n    sdkMetadata = { ...sdkMetadata, ...window.Clerk.constructor.sdkMetadata };\n  }\n  return sdkMetadata;\n};\n_preparePayload = new WeakSet();\npreparePayload_fn = function(event, payload) {\n  var _a, _b;\n  const sdkMetadata = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateMethod)(this, _getSDKMetadata, getSDKMetadata_fn).call(this);\n  return {\n    event,\n    cv: (_a = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).clerkVersion) != null ? _a : \"\",\n    it: (_b = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).instanceType) != null ? _b : \"\",\n    sdk: sdkMetadata.name,\n    sdkv: sdkMetadata.version,\n    ...(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey ? { pk: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).publishableKey } : {},\n    ...(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey ? { sk: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_6__.__privateGet)(this, _metadata).secretKey } : {},\n    payload\n  };\n};\n\n// src/telemetry/events/component-mounted.ts\nvar EVENT_COMPONENT_MOUNTED = \"COMPONENT_MOUNTED\";\nvar EVENT_SAMPLING_RATE = 0.1;\nfunction eventPrebuiltComponentMounted(component, props) {\n  var _a, _b, _c;\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      appearanceProp: Boolean(props == null ? void 0 : props.appearance),\n      baseTheme: Boolean((_a = props == null ? void 0 : props.appearance) == null ? void 0 : _a.baseTheme),\n      elements: Boolean((_b = props == null ? void 0 : props.appearance) == null ? void 0 : _b.elements),\n      variables: Boolean((_c = props == null ? void 0 : props.appearance) == null ? void 0 : _c.variables)\n    }\n  };\n}\nfunction eventComponentMounted(component, props = {}) {\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      ...props\n    }\n  };\n}\n\n//# sourceMappingURL=telemetry.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/telemetry.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/url.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/url.mjs ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix; },\n/* harmony export */   cleanDoubleSlashes: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes; },\n/* harmony export */   getClerkJsMajorVersionOrTag: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag; },\n/* harmony export */   getScriptUrl: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl; },\n/* harmony export */   hasLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash; },\n/* harmony export */   hasTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash; },\n/* harmony export */   isCurrentDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin; },\n/* harmony export */   isLegacyDevAccountPortalOrigin: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin; },\n/* harmony export */   isNonEmptyURL: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL; },\n/* harmony export */   joinURL: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL; },\n/* harmony export */   parseSearchParams: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams; },\n/* harmony export */   stripScheme: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme; },\n/* harmony export */   withLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash; },\n/* harmony export */   withTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash; },\n/* harmony export */   withoutLeadingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash; },\n/* harmony export */   withoutTrailingSlash: function() { return /* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash; }\n/* harmony export */ });\n/* harmony import */ var _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L45N5DM5.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n\n//# sourceMappingURL=url.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvY2xlcmstcmVhY3Qvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91cmwubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQjhCO0FBQ0E7QUFDQTtBQWtCNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2NsZXJrLXJlYWN0L25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcz8zNzY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2hcbn0gZnJvbSBcIi4vY2h1bmstTDQ1TjVETTUubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVgyRllSNVU2Lm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBjbGVhbkRvdWJsZVNsYXNoZXMsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsLFxuICBoYXNMZWFkaW5nU2xhc2gsXG4gIGhhc1RyYWlsaW5nU2xhc2gsXG4gIGlzQ3VycmVudERldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNOb25FbXB0eVVSTCxcbiAgam9pblVSTCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lLFxuICB3aXRoTGVhZGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2hcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/clerk-react/node_modules/@clerk/shared/dist/url.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ldrs/dist/elements/waveform.js":
/*!*****************************************************!*\
  !*** ./node_modules/ldrs/dist/elements/waveform.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ t; }\n/* harmony export */ });\n/* harmony import */ var _lib_LdrsBaseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/LdrsBaseElement.js */ \"(app-pages-browser)/./node_modules/ldrs/dist/lib/LdrsBaseElement.js\");\nvar i=\":host{align-items:center;display:inline-flex;flex-shrink:0;height:calc(var(--uib-size)*.9);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:center;display:flex;height:calc(var(--uib-size)*.9);justify-content:space-between;width:var(--uib-size)}.bar{background-color:var(--uib-color);height:100%;transition:background-color .3s ease;width:var(--uib-stroke)}.bar:first-child{animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.45) infinite}.bar:nth-child(2){animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.3) infinite}.bar:nth-child(3){animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.15) infinite}.bar:nth-child(4){animation:grow var(--uib-speed) ease-in-out infinite}@keyframes grow{0%,to{transform:scaleY(.3)}50%{transform:scaleY(1)}}\";class s extends _lib_LdrsBaseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{_attributes=[\"size\",\"color\",\"speed\",\"stroke\"];size;color;speed;stroke;static get observedAttributes(){return[\"size\",\"color\",\"speed\",\"stroke\"]}constructor(){super(),this.storePropsToUpgrade(this._attributes),this.reflect(this._attributes)}connectedCallback(){this.upgradeStoredProps(),this.applyDefaultProps({size:35,color:\"black\",speed:1,stroke:3.5}),this.template.innerHTML=`\\n      <div class=\"container\">\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-stroke: ${this.stroke}px;\\n        }\\n        ${i}\\n      </style>\\n    `,this.shadow.replaceChildren(this.template.content.cloneNode(!0))}attributeChangedCallback(){const e=this.shadow.querySelector(\"style\");e&&(e.innerHTML=`\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-stroke: ${this.stroke}px;\\n      }\\n      ${i}\\n    `)}}var t={register:(e=\"l-waveform\")=>{customElements.get(e)||customElements.define(e,class extends s{})},element:s};\n//# sourceMappingURL=waveform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sZHJzL2Rpc3QvZWxlbWVudHMvd2F2ZWZvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUMsYUFBYSxtQkFBbUIsb0JBQW9CLGNBQWMsZ0NBQWdDLHVCQUF1QixzQkFBc0IsZ0JBQWdCLGFBQWEsV0FBVyxtQkFBbUIsYUFBYSxnQ0FBZ0MsOEJBQThCLHNCQUFzQixLQUFLLGtDQUFrQyxZQUFZLHFDQUFxQyx3QkFBd0IsaUJBQWlCLGlGQUFpRixrQkFBa0IsZ0ZBQWdGLGtCQUFrQixpRkFBaUYsa0JBQWtCLHFEQUFxRCxnQkFBZ0IsTUFBTSxxQkFBcUIsSUFBSSxxQkFBcUIsRUFBRSxnQkFBZ0IsK0RBQUMsQ0FBQyw4Q0FBOEMsS0FBSyxNQUFNLE1BQU0sT0FBTyxnQ0FBZ0Msd0NBQXdDLGNBQWMsa0ZBQWtGLG9CQUFvQixrREFBa0QseUNBQXlDLDJPQUEyTywwQkFBMEIsVUFBVSxHQUFHLDJCQUEyQixZQUFZLDJCQUEyQixXQUFXLEVBQUUsNEJBQTRCLFlBQVksR0FBRyxXQUFXLFlBQVksRUFBRSx5RkFBeUYsMkJBQTJCLDJDQUEyQywrQkFBK0Isd0JBQXdCLFVBQVUsR0FBRyx5QkFBeUIsWUFBWSx5QkFBeUIsV0FBVyxFQUFFLDBCQUEwQixZQUFZLEdBQUcsU0FBUyxVQUFVLEVBQUUsVUFBVSxPQUFPLDRCQUE0QixnRUFBZ0UsRUFBRSxZQUFpQztBQUN4b0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xkcnMvZGlzdC9lbGVtZW50cy93YXZlZm9ybS5qcz9jMDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlIGZyb21cIi4uL2xpYi9MZHJzQmFzZUVsZW1lbnQuanNcIjt2YXIgaT1cIjpob3N0e2FsaWduLWl0ZW1zOmNlbnRlcjtkaXNwbGF5OmlubGluZS1mbGV4O2ZsZXgtc2hyaW5rOjA7aGVpZ2h0OmNhbGModmFyKC0tdWliLXNpemUpKi45KTtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOnZhcigtLXVpYi1zaXplKX06aG9zdChbaGlkZGVuXSl7ZGlzcGxheTpub25lfS5jb250YWluZXJ7YWxpZ24taXRlbXM6Y2VudGVyO2Rpc3BsYXk6ZmxleDtoZWlnaHQ6Y2FsYyh2YXIoLS11aWItc2l6ZSkqLjkpO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3dpZHRoOnZhcigtLXVpYi1zaXplKX0uYmFye2JhY2tncm91bmQtY29sb3I6dmFyKC0tdWliLWNvbG9yKTtoZWlnaHQ6MTAwJTt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjNzIGVhc2U7d2lkdGg6dmFyKC0tdWliLXN0cm9rZSl9LmJhcjpmaXJzdC1jaGlsZHthbmltYXRpb246Z3JvdyB2YXIoLS11aWItc3BlZWQpIGVhc2UtaW4tb3V0IGNhbGModmFyKC0tdWliLXNwZWVkKSotLjQ1KSBpbmZpbml0ZX0uYmFyOm50aC1jaGlsZCgyKXthbmltYXRpb246Z3JvdyB2YXIoLS11aWItc3BlZWQpIGVhc2UtaW4tb3V0IGNhbGModmFyKC0tdWliLXNwZWVkKSotLjMpIGluZmluaXRlfS5iYXI6bnRoLWNoaWxkKDMpe2FuaW1hdGlvbjpncm93IHZhcigtLXVpYi1zcGVlZCkgZWFzZS1pbi1vdXQgY2FsYyh2YXIoLS11aWItc3BlZWQpKi0uMTUpIGluZmluaXRlfS5iYXI6bnRoLWNoaWxkKDQpe2FuaW1hdGlvbjpncm93IHZhcigtLXVpYi1zcGVlZCkgZWFzZS1pbi1vdXQgaW5maW5pdGV9QGtleWZyYW1lcyBncm93ezAlLHRve3RyYW5zZm9ybTpzY2FsZVkoLjMpfTUwJXt0cmFuc2Zvcm06c2NhbGVZKDEpfX1cIjtjbGFzcyBzIGV4dGVuZHMgZXtfYXR0cmlidXRlcz1bXCJzaXplXCIsXCJjb2xvclwiLFwic3BlZWRcIixcInN0cm9rZVwiXTtzaXplO2NvbG9yO3NwZWVkO3N0cm9rZTtzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpe3JldHVybltcInNpemVcIixcImNvbG9yXCIsXCJzcGVlZFwiLFwic3Ryb2tlXCJdfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLnN0b3JlUHJvcHNUb1VwZ3JhZGUodGhpcy5fYXR0cmlidXRlcyksdGhpcy5yZWZsZWN0KHRoaXMuX2F0dHJpYnV0ZXMpfWNvbm5lY3RlZENhbGxiYWNrKCl7dGhpcy51cGdyYWRlU3RvcmVkUHJvcHMoKSx0aGlzLmFwcGx5RGVmYXVsdFByb3BzKHtzaXplOjM1LGNvbG9yOlwiYmxhY2tcIixzcGVlZDoxLHN0cm9rZTozLjV9KSx0aGlzLnRlbXBsYXRlLmlubmVySFRNTD1gXFxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cImJhclwiPjwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cImJhclwiPjwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cImJhclwiPjwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cImJhclwiPjwvZGl2PlxcbiAgICAgIDwvZGl2PlxcbiAgICAgIDxzdHlsZT5cXG4gICAgICAgIDpob3N0e1xcbiAgICAgICAgICAtLXVpYi1zaXplOiAke3RoaXMuc2l6ZX1weDtcXG4gICAgICAgICAgLS11aWItY29sb3I6ICR7dGhpcy5jb2xvcn07XFxuICAgICAgICAgIC0tdWliLXNwZWVkOiAke3RoaXMuc3BlZWR9cztcXG4gICAgICAgICAgLS11aWItc3Ryb2tlOiAke3RoaXMuc3Ryb2tlfXB4O1xcbiAgICAgICAgfVxcbiAgICAgICAgJHtpfVxcbiAgICAgIDwvc3R5bGU+XFxuICAgIGAsdGhpcy5zaGFkb3cucmVwbGFjZUNoaWxkcmVuKHRoaXMudGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUoITApKX1hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soKXtjb25zdCBlPXRoaXMuc2hhZG93LnF1ZXJ5U2VsZWN0b3IoXCJzdHlsZVwiKTtlJiYoZS5pbm5lckhUTUw9YFxcbiAgICAgIDpob3N0e1xcbiAgICAgICAgLS11aWItc2l6ZTogJHt0aGlzLnNpemV9cHg7XFxuICAgICAgICAtLXVpYi1jb2xvcjogJHt0aGlzLmNvbG9yfTtcXG4gICAgICAgIC0tdWliLXNwZWVkOiAke3RoaXMuc3BlZWR9cztcXG4gICAgICAgIC0tdWliLXN0cm9rZTogJHt0aGlzLnN0cm9rZX1weDtcXG4gICAgICB9XFxuICAgICAgJHtpfVxcbiAgICBgKX19dmFyIHQ9e3JlZ2lzdGVyOihlPVwibC13YXZlZm9ybVwiKT0+e2N1c3RvbUVsZW1lbnRzLmdldChlKXx8Y3VzdG9tRWxlbWVudHMuZGVmaW5lKGUsY2xhc3MgZXh0ZW5kcyBze30pfSxlbGVtZW50OnN9O2V4cG9ydHt0IGFzIGRlZmF1bHR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F2ZWZvcm0uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ldrs/dist/elements/waveform.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ldrs/dist/lib/LdrsBaseElement.js":
/*!*******************************************************!*\
  !*** ./node_modules/ldrs/dist/lib/LdrsBaseElement.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ t; }\n/* harmony export */ });\nclass t extends HTMLElement{_propsToUpgrade={};shadow;template;defaultProps;isAttached=!1;constructor(){super(),this.shadow=this.attachShadow({mode:\"open\"}),this.template=document.createElement(\"template\")}storePropsToUpgrade(t){t.forEach((t=>{this.hasOwnProperty(t)&&void 0!==this[t]&&(this._propsToUpgrade[t]=this[t],delete this[t])}))}upgradeStoredProps(){Object.entries(this._propsToUpgrade).forEach((([t,e])=>{this.setAttribute(t,e)}))}reflect(t){t.forEach((t=>{Object.defineProperty(this,t,{set(e){\"string,number\".includes(typeof e)?this.setAttribute(t,e.toString()):this.removeAttribute(t)},get(){return this.getAttribute(t)}})}))}applyDefaultProps(t){this.defaultProps=t,Object.entries(t).forEach((([t,e])=>{this[t]=this[t]||e.toString()}))}}\n//# sourceMappingURL=LdrsBaseElement.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sZHJzL2Rpc3QvbGliL0xkcnNCYXNlRWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNEJBQTRCLG1CQUFtQixPQUFPLFNBQVMsYUFBYSxjQUFjLGNBQWMsdUNBQXVDLFlBQVksbURBQW1ELHVCQUF1QixlQUFlLDJGQUEyRixHQUFHLHFCQUFxQix3REFBd0QsdUJBQXVCLEdBQUcsV0FBVyxlQUFlLDhCQUE4QixPQUFPLDZGQUE2RixPQUFPLDZCQUE2QixFQUFFLEdBQUcscUJBQXFCLHlEQUF5RCw4QkFBOEIsSUFBeUI7QUFDbndCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sZHJzL2Rpc3QvbGliL0xkcnNCYXNlRWxlbWVudC5qcz9iYTVmIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIHQgZXh0ZW5kcyBIVE1MRWxlbWVudHtfcHJvcHNUb1VwZ3JhZGU9e307c2hhZG93O3RlbXBsYXRlO2RlZmF1bHRQcm9wcztpc0F0dGFjaGVkPSExO2NvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLnNoYWRvdz10aGlzLmF0dGFjaFNoYWRvdyh7bW9kZTpcIm9wZW5cIn0pLHRoaXMudGVtcGxhdGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpfXN0b3JlUHJvcHNUb1VwZ3JhZGUodCl7dC5mb3JFYWNoKCh0PT57dGhpcy5oYXNPd25Qcm9wZXJ0eSh0KSYmdm9pZCAwIT09dGhpc1t0XSYmKHRoaXMuX3Byb3BzVG9VcGdyYWRlW3RdPXRoaXNbdF0sZGVsZXRlIHRoaXNbdF0pfSkpfXVwZ3JhZGVTdG9yZWRQcm9wcygpe09iamVjdC5lbnRyaWVzKHRoaXMuX3Byb3BzVG9VcGdyYWRlKS5mb3JFYWNoKCgoW3QsZV0pPT57dGhpcy5zZXRBdHRyaWJ1dGUodCxlKX0pKX1yZWZsZWN0KHQpe3QuZm9yRWFjaCgodD0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLHQse3NldChlKXtcInN0cmluZyxudW1iZXJcIi5pbmNsdWRlcyh0eXBlb2YgZSk/dGhpcy5zZXRBdHRyaWJ1dGUodCxlLnRvU3RyaW5nKCkpOnRoaXMucmVtb3ZlQXR0cmlidXRlKHQpfSxnZXQoKXtyZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUodCl9fSl9KSl9YXBwbHlEZWZhdWx0UHJvcHModCl7dGhpcy5kZWZhdWx0UHJvcHM9dCxPYmplY3QuZW50cmllcyh0KS5mb3JFYWNoKCgoW3QsZV0pPT57dGhpc1t0XT10aGlzW3RdfHxlLnRvU3RyaW5nKCl9KSl9fWV4cG9ydHt0IGFzIGRlZmF1bHR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGRyc0Jhc2VFbGVtZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ldrs/dist/lib/LdrsBaseElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/_internal/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/swr/_internal/dist/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_REACT_LEGACY: function() { return /* binding */ IS_REACT_LEGACY; },\n/* harmony export */   IS_SERVER: function() { return /* binding */ IS_SERVER; },\n/* harmony export */   OBJECT: function() { return /* binding */ OBJECT; },\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   SWRGlobalState: function() { return /* binding */ SWRGlobalState; },\n/* harmony export */   UNDEFINED: function() { return /* binding */ UNDEFINED; },\n/* harmony export */   cache: function() { return /* binding */ cache; },\n/* harmony export */   compare: function() { return /* binding */ compare; },\n/* harmony export */   createCacheHelper: function() { return /* binding */ createCacheHelper; },\n/* harmony export */   defaultConfig: function() { return /* binding */ defaultConfig; },\n/* harmony export */   defaultConfigOptions: function() { return /* binding */ defaultConfigOptions; },\n/* harmony export */   getTimestamp: function() { return /* binding */ getTimestamp; },\n/* harmony export */   hasRequestAnimationFrame: function() { return /* binding */ hasRequestAnimationFrame; },\n/* harmony export */   initCache: function() { return /* binding */ initCache; },\n/* harmony export */   internalMutate: function() { return /* binding */ internalMutate; },\n/* harmony export */   isDocumentDefined: function() { return /* binding */ isDocumentDefined; },\n/* harmony export */   isFunction: function() { return /* binding */ isFunction; },\n/* harmony export */   isPromiseLike: function() { return /* binding */ isPromiseLike; },\n/* harmony export */   isUndefined: function() { return /* binding */ isUndefined; },\n/* harmony export */   isWindowDefined: function() { return /* binding */ isWindowDefined; },\n/* harmony export */   mergeConfigs: function() { return /* binding */ mergeConfigs; },\n/* harmony export */   mergeObjects: function() { return /* binding */ mergeObjects; },\n/* harmony export */   mutate: function() { return /* binding */ mutate; },\n/* harmony export */   noop: function() { return /* binding */ noop; },\n/* harmony export */   normalize: function() { return /* binding */ normalize; },\n/* harmony export */   preload: function() { return /* binding */ preload; },\n/* harmony export */   preset: function() { return /* binding */ preset; },\n/* harmony export */   rAF: function() { return /* binding */ rAF; },\n/* harmony export */   revalidateEvents: function() { return /* binding */ constants; },\n/* harmony export */   serialize: function() { return /* binding */ serialize; },\n/* harmony export */   slowConnection: function() { return /* binding */ slowConnection; },\n/* harmony export */   stableHash: function() { return /* binding */ stableHash; },\n/* harmony export */   subscribeCallback: function() { return /* binding */ subscribeCallback; },\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; },\n/* harmony export */   useSWRConfig: function() { return /* binding */ useSWRConfig; },\n/* harmony export */   useStateWithDeps: function() { return /* binding */ useStateWithDeps; },\n/* harmony export */   withArgs: function() { return /* binding */ withArgs; },\n/* harmony export */   withMiddleware: function() { return /* binding */ withMiddleware; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const constructor = arg && arg.constructor;\n    const isDate = constructor == Date;\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (constructor == Array) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (constructor == OBJECT) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !react__WEBPACK_IMPORTED_MODULE_0__.useId;\nconst IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nvar constants = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const revalidate = options.revalidate !== false;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const revalidators = EVENT_REVALIDATORS[key];\n        const startRevalidate = ()=>{\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                data = committedData;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    data = populateCache(data, committedData);\n                }\n                // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                set({\n                    data,\n                    error: UNDEFINED,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        const res = await startRevalidate();\n        // The mutation and revalidation are ended, we can clear it since the data is\n        // not an optimistic value anymore.\n        set({\n            _c: UNDEFINED\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return populateCache ? res : data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = {};\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = {};\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    {},\n                    {},\n                    {},\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = (currentData, newData)=>stableHash(currentData) == stableHash(newData);\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1 , fallback: f1  } = a;\n        const { use: u2 , fallback: f2  } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nconst SWRConfig = (props)=>{\n    const { value  } = props;\n    const parentConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = react__WEBPACK_IMPORTED_MODULE_0__;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use  } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n/**\n * An implementation of state with dependency-tracking.\n */ const useStateWithDeps = (state)=>{\n    const rerender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({})[1];\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(state);\n    // If a state property (data, error, or isValidating) is accessed by the render\n    // function, we mark the property as a dependency so if it is updated again\n    // in the future, we trigger a rerender.\n    // This is also known as dependency-tracking.\n    const stateDependenciesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    /**\n   * @param payload To change stateRef, pass the values explicitly to setState:\n   * @example\n   * ```js\n   * setState({\n   *   isValidating: false\n   *   data: newData // set data to newData\n   *   error: undefined // set error to undefined\n   * })\n   *\n   * setState({\n   *   isValidating: false\n   *   data: undefined // set data to undefined\n   *   error: err // set error to err\n   * })\n   * ```\n   */ const setState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((payload)=>{\n        let shouldRerender = false;\n        const currentState = stateRef.current;\n        for(const _ in payload){\n            const k = _;\n            // If the property has changed, update the state and mark rerender as\n            // needed.\n            if (currentState[k] !== payload[k]) {\n                currentState[k] = payload[k];\n                // If the property is accessed by the component, a rerender should be\n                // triggered.\n                if (stateDependenciesRef.current[k]) {\n                    shouldRerender = true;\n                }\n            }\n        }\n        if (shouldRerender && !unmountedRef.current) {\n            if (IS_REACT_LEGACY) {\n                rerender({});\n            } else {\n                react__WEBPACK_IMPORTED_MODULE_0__.startTransition(()=>rerender({}));\n            }\n        }\n    }, [\n        rerender\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        unmountedRef.current = false;\n        return ()=>{\n            unmountedRef.current = true;\n        };\n    });\n    return [\n        stateRef,\n        stateDependenciesRef.current,\n        setState\n    ];\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/_internal/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/core/dist/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/swr/core/dist/index.mjs ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SWRConfig: function() { return /* binding */ SWRConfig; },\n/* harmony export */   \"default\": function() { return /* binding */ useSWR; },\n/* harmony export */   mutate: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_2__.mutate; },\n/* harmony export */   preload: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_2__.preload; },\n/* harmony export */   unstable_serialize: function() { return /* binding */ unstable_serialize; },\n/* harmony export */   useSWRConfig: function() { return /* reexport safe */ swr_internal__WEBPACK_IMPORTED_MODULE_2__.useSWRConfig; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var swr_internal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! swr/_internal */ \"(app-pages-browser)/./node_modules/swr/_internal/dist/index.mjs\");\n\n\n\n\n\nconst unstable_serialize = (key)=>(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.serialize)(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = react__WEBPACK_IMPORTED_MODULE_0__.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache , compare , suspense , fallbackData , revalidateOnMount , revalidateIfStale , refreshInterval , refreshWhenHidden , refreshWhenOffline , keepPreviousData  } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = swr_internal__WEBPACK_IMPORTED_MODULE_2__.SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.serialize)(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Refs to keep the key and config.\n    const keyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key);\n    const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher);\n    const configRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, key);\n    const stateDependencies = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({}).current;\n    const fallback = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.mergeObjects)(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data);\n    const returnedData = keepPreviousData ? (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (swr_internal__WEBPACK_IMPORTED_MODULE_2__.IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.getTimestamp)()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = swr_internal__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError  } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isFunction)(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_2__.revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const boundMutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.internalMutate)(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.useIsomorphicLayoutEffect)(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.useIsomorphicLayoutEffect)(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == swr_internal__WEBPACK_IMPORTED_MODULE_2__.revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_2__.revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_2__.revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == swr_internal__WEBPACK_IMPORTED_MODULE_2__.revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.subscribeCallback)(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data) || swr_internal__WEBPACK_IMPORTED_MODULE_2__.IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rAF)(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.useIsomorphicLayoutEffect)(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isFunction)(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!swr_internal__WEBPACK_IMPORTED_MODULE_2__.IS_REACT_LEGACY && swr_internal__WEBPACK_IMPORTED_MODULE_2__.IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nconst SWRConfig = swr_internal__WEBPACK_IMPORTED_MODULE_2__.OBJECT.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_2__.SWRConfig, 'defaultValue', {\n    value: swr_internal__WEBPACK_IMPORTED_MODULE_2__.defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (!data) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.withArgs)(useSWRHandler);\n\n// useSWR\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/core/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/infinite/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/swr/infinite/dist/index.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useSWRInfinite; },\n/* harmony export */   infinite: function() { return /* binding */ infinite; },\n/* harmony export */   unstable_serialize: function() { return /* binding */ unstable_serialize; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! swr */ \"(app-pages-browser)/./node_modules/swr/core/dist/index.mjs\");\n/* harmony import */ var swr_internal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! swr/_internal */ \"(app-pages-browser)/./node_modules/swr/_internal/dist/index.mjs\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n\n\nconst INFINITE_PREFIX = '$inf$';\nconst getFirstPageKey = (getKey)=>{\n    return (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.serialize)(getKey ? getKey(0, null) : null)[0];\n};\nconst unstable_serialize = (getKey)=>{\n    return INFINITE_PREFIX + getFirstPageKey(getKey);\n};\n\n// We have to several type castings here because `useSWRInfinite` is a special\n// const INFINITE_PREFIX = '$inf$'\nconst EMPTY_PROMISE = Promise.resolve();\n// export const unstable_serialize = (getKey: SWRInfiniteKeyLoader) => {\n//   return INFINITE_PREFIX + getFirstPageKey(getKey)\n// }\nconst infinite = (useSWRNext)=>(getKey, fn, config)=>{\n        const didMountRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n        const { cache , initialSize =1 , revalidateAll =false , persistSize =false , revalidateFirstPage =true , revalidateOnMount =false , parallel =false  } = config;\n        // The serialized key of the first page. This key will be used to store\n        // metadata of this SWR infinite hook.\n        let infiniteKey;\n        try {\n            infiniteKey = getFirstPageKey(getKey);\n            if (infiniteKey) infiniteKey = INFINITE_PREFIX + infiniteKey;\n        } catch (err) {\n        // Not ready yet.\n        }\n        const [get, set, subscribeCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, infiniteKey);\n        const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const size = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(get()._l) ? initialSize : get()._l;\n            return size;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            cache,\n            infiniteKey,\n            initialSize\n        ]);\n        (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_3__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>{\n            if (infiniteKey) return subscribeCache(infiniteKey, ()=>{\n                callback();\n            });\n            return ()=>{};\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            cache,\n            infiniteKey\n        ]), getSnapshot, getSnapshot);\n        const resolvePageSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const cachedPageSize = get()._l;\n            return (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cachedPageSize) ? initialSize : cachedPageSize;\n        // `cache` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            initialSize\n        ]);\n        // keep the last page size to restore it with the persistSize option\n        const lastPageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(resolvePageSize());\n        // When the page key changes, we reset the page size if it's not persisted\n        (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.useIsomorphicLayoutEffect)(()=>{\n            if (!didMountRef.current) {\n                didMountRef.current = true;\n                return;\n            }\n            if (infiniteKey) {\n                // If the key has been changed, we keep the current page size if persistSize is enabled\n                // Otherwise, we reset the page size to cached pageSize\n                set({\n                    _l: persistSize ? lastPageSizeRef.current : resolvePageSize()\n                });\n            }\n        // `initialSize` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            cache\n        ]);\n        // Needs to check didMountRef during mounting, not in the fetcher\n        const shouldRevalidateOnMount = revalidateOnMount && !didMountRef.current;\n        // Actual SWR hook to load all pages in one fetcher.\n        const swr = useSWRNext(infiniteKey, async (key)=>{\n            // get the revalidate context\n            const forceRevalidateAll = get()._i;\n            // return an array of page data\n            const data = [];\n            const pageSize = resolvePageSize();\n            const [getCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, key);\n            const cacheData = getCache().data;\n            const revalidators = [];\n            let previousPageData = null;\n            for(let i = 0; i < pageSize; ++i){\n                const [pageKey, pageArg] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.serialize)(getKey(i, parallel ? null : previousPageData));\n                if (!pageKey) {\n                    break;\n                }\n                const [getSWRCache, setSWRCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, pageKey);\n                // Get the cached page data.\n                let pageData = getSWRCache().data;\n                // should fetch (or revalidate) if:\n                // - `revalidateAll` is enabled\n                // - `mutate()` called\n                // - the cache is missing\n                // - it's the first page and it's not the initial render\n                // - `revalidateOnMount` is enabled and it's on mount\n                // - cache for that page has changed\n                const shouldFetchPage = revalidateAll || forceRevalidateAll || (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(pageData) || revalidateFirstPage && !i && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cacheData) || shouldRevalidateOnMount || cacheData && !(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(cacheData[i]) && !config.compare(cacheData[i], pageData);\n                if (fn && shouldFetchPage) {\n                    const revalidate = async ()=>{\n                        pageData = await fn(pageArg);\n                        setSWRCache({\n                            data: pageData,\n                            _k: pageArg\n                        });\n                        data[i] = pageData;\n                    };\n                    if (parallel) {\n                        revalidators.push(revalidate);\n                    } else {\n                        await revalidate();\n                    }\n                } else {\n                    data[i] = pageData;\n                }\n                if (!parallel) {\n                    previousPageData = pageData;\n                }\n            }\n            // flush all revalidateions in parallel\n            if (parallel) {\n                await Promise.all(revalidators.map((r)=>r()));\n            }\n            // once we executed the data fetching based on the context, clear the context\n            set({\n                _i: swr_internal__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED\n            });\n            // return the data\n            return data;\n        }, config);\n        const mutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// eslint-disable-next-line func-names\n        function(data, opts) {\n            // When passing as a boolean, it's explicitly used to disable/enable\n            // revalidation.\n            const options = typeof opts === 'boolean' ? {\n                revalidate: opts\n            } : opts || {};\n            // Default to true.\n            const shouldRevalidate = options.revalidate !== false;\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            if (shouldRevalidate) {\n                if (!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data)) {\n                    // We only revalidate the pages that are changed\n                    set({\n                        _i: false\n                    });\n                } else {\n                    // Calling `mutate()`, we revalidate all pages\n                    set({\n                        _i: true\n                    });\n                }\n            }\n            return arguments.length ? swr.mutate(data, {\n                ...options,\n                revalidate: shouldRevalidate\n            }) : swr.mutate();\n        }, // swr.mutate is always the same reference\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache\n        ]);\n        // Extend the SWR API\n        const setSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((arg)=>{\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            const [, changeSize] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, infiniteKey);\n            let size;\n            if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isFunction)(arg)) {\n                size = arg(resolvePageSize());\n            } else if (typeof arg == 'number') {\n                size = arg;\n            }\n            if (typeof size != 'number') return EMPTY_PROMISE;\n            changeSize({\n                _l: size\n            });\n            lastPageSizeRef.current = size;\n            // Calculate the page data after the size change.\n            const data = [];\n            const [getInfiniteCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, infiniteKey);\n            let previousPageData = null;\n            for(let i = 0; i < size; ++i){\n                const [pageKey] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.serialize)(getKey(i, previousPageData));\n                const [getCache] = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.createCacheHelper)(cache, pageKey);\n                // Get the cached page data.\n                const pageData = pageKey ? getCache().data : swr_internal__WEBPACK_IMPORTED_MODULE_2__.UNDEFINED;\n                // Call `mutate` with infinte cache data if we can't get it from the page cache.\n                if ((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(pageData)) {\n                    return mutate(getInfiniteCache().data);\n                }\n                data.push(pageData);\n                previousPageData = pageData;\n            }\n            return mutate(data);\n        }, // exclude getKey from the dependencies, which isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache,\n            mutate,\n            resolvePageSize\n        ]);\n        // Use getter functions to avoid unnecessary re-renders caused by triggering\n        // all the getters of the returned swr object.\n        return {\n            size: resolvePageSize(),\n            setSize,\n            mutate,\n            get data () {\n                return swr.data;\n            },\n            get error () {\n                return swr.error;\n            },\n            get isValidating () {\n                return swr.isValidating;\n            },\n            get isLoading () {\n                return swr.isLoading;\n            }\n        };\n    };\nconst useSWRInfinite = (0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.withMiddleware)(swr__WEBPACK_IMPORTED_MODULE_1__[\"default\"], infinite);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/infinite/dist/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CClick%5C%5CDocuments%5C%5CGitHub%5C%5Cjournal%5C%5Capp%5C%5C_components%5C%5CSentSection.jsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);