{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-origin":"","connection":"keep-alive","content-length":"61032","content-security-policy":"connect-src 'self' https:;img-src 'self' data: blob: market-assets.strapi.io res.cloudinary.com;media-src 'self' data: blob: market-assets.strapi.io res.cloudinary.com;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'","content-type":"application/json; charset=utf-8","date":"Thu, 23 May 2024 19:42:49 GMT","keep-alive":"timeout=5","referrer-policy":"no-referrer","strict-transport-security":"max-age=31536000; includeSubDomains","vary":"Origin","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-powered-by":"Strapi <strapi.io>"},"body":"","status":200,"url":"http://localhost:1337/api/articles?populate=*"},"revalidate":31536000,"tags":[]}